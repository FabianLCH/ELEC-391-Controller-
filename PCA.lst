0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Thu Mar 07 10:38:53 2019
0000              5   ;--------------------------------------------------------
                  5   $name PCA
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _windSensorRead
0000             29            public _SPIWrite
0000             30            public _ConfigurePins
0000             31            public _ConfigPCA0
0000             32            public _Volts_at_Pin
0000             33            public _ADC_at_Pin
0000             34            public _InitADC
0000             35            public _delay_ms
0000             36            public _Timer3_ISR
0000             37            public _Timer2_ISR
0000             38            public __c51_external_startup
0000             39            public _spiBytes
0000             40            public _spiByteNum
0000             41            public _windAngle
0000             42            public _totalSteps
0000             43            public _interruptCount
0000             44            public _stepCount
0000             45            public _delayFlag
0000             46            public _direction
0000             47            public _adcFlag
0000             48   ;--------------------------------------------------------
0000             49   ; Special Function Registers
0000             50   ;--------------------------------------------------------
0000             51   _ACC            DATA 0xe0
0000             52   _ADC0ASAH       DATA 0xb6
0000             53   _ADC0ASAL       DATA 0xb5
0000             54   _ADC0ASCF       DATA 0xa1
0000             55   _ADC0ASCT       DATA 0xc7
0000             56   _ADC0CF0        DATA 0xbc
0000             57   _ADC0CF1        DATA 0xb9
0000             58   _ADC0CF2        DATA 0xdf
0000             59   _ADC0CN0        DATA 0xe8
0000             60   _ADC0CN1        DATA 0xb2
0000             61   _ADC0CN2        DATA 0xb3
0000             62   _ADC0GTH        DATA 0xc4
0000             63   _ADC0GTL        DATA 0xc3
0000             64   _ADC0H          DATA 0xbe
0000             65   _ADC0L          DATA 0xbd
0000             66   _ADC0LTH        DATA 0xc6
0000             67   _ADC0LTL        DATA 0xc5
0000             68   _ADC0MX         DATA 0xbb
0000             69   _B              DATA 0xf0
0000             70   _CKCON0         DATA 0x8e
0000             71   _CKCON1         DATA 0xa6
0000             72   _CLEN0          DATA 0xc6
0000             73   _CLIE0          DATA 0xc7
0000             74   _CLIF0          DATA 0xe8
0000             75   _CLKSEL         DATA 0xa9
0000             76   _CLOUT0         DATA 0xd1
0000             77   _CLU0CF         DATA 0xb1
0000             78   _CLU0FN         DATA 0xaf
0000             79   _CLU0MX         DATA 0x84
0000             80   _CLU1CF         DATA 0xb3
0000             81   _CLU1FN         DATA 0xb2
0000             82   _CLU1MX         DATA 0x85
0000             83   _CLU2CF         DATA 0xb6
0000             84   _CLU2FN         DATA 0xb5
0000             85   _CLU2MX         DATA 0x91
0000             86   _CLU3CF         DATA 0xbf
0000             87   _CLU3FN         DATA 0xbe
0000             88   _CLU3MX         DATA 0xae
0000             89   _CMP0CN0        DATA 0x9b
0000             90   _CMP0CN1        DATA 0x99
0000             91   _CMP0MD         DATA 0x9d
0000             92   _CMP0MX         DATA 0x9f
0000             93   _CMP1CN0        DATA 0xbf
0000             94   _CMP1CN1        DATA 0xac
0000             95   _CMP1MD         DATA 0xab
0000             96   _CMP1MX         DATA 0xaa
0000             97   _CRC0CN0        DATA 0xce
0000             98   _CRC0CN1        DATA 0x86
0000             99   _CRC0CNT        DATA 0xd3
0000            100   _CRC0DAT        DATA 0xcb
0000            101   _CRC0FLIP       DATA 0xcf
0000            102   _CRC0IN         DATA 0xca
0000            103   _CRC0ST         DATA 0xd2
0000            104   _DAC0CF0        DATA 0x91
0000            105   _DAC0CF1        DATA 0x92
0000            106   _DAC0H          DATA 0x85
0000            107   _DAC0L          DATA 0x84
0000            108   _DAC1CF0        DATA 0x93
0000            109   _DAC1CF1        DATA 0x94
0000            110   _DAC1H          DATA 0x8a
0000            111   _DAC1L          DATA 0x89
0000            112   _DAC2CF0        DATA 0x95
0000            113   _DAC2CF1        DATA 0x96
0000            114   _DAC2H          DATA 0x8c
0000            115   _DAC2L          DATA 0x8b
0000            116   _DAC3CF0        DATA 0x9a
0000            117   _DAC3CF1        DATA 0x9c
0000            118   _DAC3H          DATA 0x8e
0000            119   _DAC3L          DATA 0x8d
0000            120   _DACGCF0        DATA 0x88
0000            121   _DACGCF1        DATA 0x98
0000            122   _DACGCF2        DATA 0xa2
0000            123   _DERIVID        DATA 0xad
0000            124   _DEVICEID       DATA 0xb5
0000            125   _DPH            DATA 0x83
0000            126   _DPL            DATA 0x82
0000            127   _EIE1           DATA 0xe6
0000            128   _EIE2           DATA 0xf3
0000            129   _EIP1           DATA 0xbb
0000            130   _EIP1H          DATA 0xee
0000            131   _EIP2           DATA 0xed
0000            132   _EIP2H          DATA 0xf6
0000            133   _EMI0CN         DATA 0xe7
0000            134   _FLKEY          DATA 0xb7
0000            135   _HFO0CAL        DATA 0xc7
0000            136   _HFO1CAL        DATA 0xd6
0000            137   _HFOCN          DATA 0xef
0000            138   _I2C0ADM        DATA 0xff
0000            139   _I2C0CN0        DATA 0xba
0000            140   _I2C0DIN        DATA 0xbc
0000            141   _I2C0DOUT       DATA 0xbb
0000            142   _I2C0FCN0       DATA 0xad
0000            143   _I2C0FCN1       DATA 0xab
0000            144   _I2C0FCT        DATA 0xf5
0000            145   _I2C0SLAD       DATA 0xbd
0000            146   _I2C0STAT       DATA 0xb9
0000            147   _IE             DATA 0xa8
0000            148   _IP             DATA 0xb8
0000            149   _IPH            DATA 0xf2
0000            150   _IT01CF         DATA 0xe4
0000            151   _LFO0CN         DATA 0xb1
0000            152   _P0             DATA 0x80
0000            153   _P0MASK         DATA 0xfe
0000            154   _P0MAT          DATA 0xfd
0000            155   _P0MDIN         DATA 0xf1
0000            156   _P0MDOUT        DATA 0xa4
0000            157   _P0SKIP         DATA 0xd4
0000            158   _P1             DATA 0x90
0000            159   _P1MASK         DATA 0xee
0000            160   _P1MAT          DATA 0xed
0000            161   _P1MDIN         DATA 0xf2
0000            162   _P1MDOUT        DATA 0xa5
0000            163   _P1SKIP         DATA 0xd5
0000            164   _P2             DATA 0xa0
0000            165   _P2MASK         DATA 0xfc
0000            166   _P2MAT          DATA 0xfb
0000            167   _P2MDIN         DATA 0xf3
0000            168   _P2MDOUT        DATA 0xa6
0000            169   _P2SKIP         DATA 0xcc
0000            170   _P3             DATA 0xb0
0000            171   _P3MDIN         DATA 0xf4
0000            172   _P3MDOUT        DATA 0x9c
0000            173   _PCA0CENT       DATA 0x9e
0000            174   _PCA0CLR        DATA 0x9c
0000            175   _PCA0CN0        DATA 0xd8
0000            176   _PCA0CPH0       DATA 0xfc
0000            177   _PCA0CPH1       DATA 0xea
0000            178   _PCA0CPH2       DATA 0xec
0000            179   _PCA0CPH3       DATA 0xf5
0000            180   _PCA0CPH4       DATA 0x85
0000            181   _PCA0CPH5       DATA 0xde
0000            182   _PCA0CPL0       DATA 0xfb
0000            183   _PCA0CPL1       DATA 0xe9
0000            184   _PCA0CPL2       DATA 0xeb
0000            185   _PCA0CPL3       DATA 0xf4
0000            186   _PCA0CPL4       DATA 0x84
0000            187   _PCA0CPL5       DATA 0xdd
0000            188   _PCA0CPM0       DATA 0xda
0000            189   _PCA0CPM1       DATA 0xdb
0000            190   _PCA0CPM2       DATA 0xdc
0000            191   _PCA0CPM3       DATA 0xae
0000            192   _PCA0CPM4       DATA 0xaf
0000            193   _PCA0CPM5       DATA 0xcc
0000            194   _PCA0H          DATA 0xfa
0000            195   _PCA0L          DATA 0xf9
0000            196   _PCA0MD         DATA 0xd9
0000            197   _PCA0POL        DATA 0x96
0000            198   _PCA0PWM        DATA 0xf7
0000            199   _PCON0          DATA 0x87
0000            200   _PCON1          DATA 0xcd
0000            201   _PFE0CN         DATA 0xc1
0000            202   _PRTDRV         DATA 0xf6
0000            203   _PSCTL          DATA 0x8f
0000            204   _PSTAT0         DATA 0xaa
0000            205   _PSW            DATA 0xd0
0000            206   _REF0CN         DATA 0xd1
0000            207   _REG0CN         DATA 0xc9
0000            208   _REVID          DATA 0xb6
0000            209   _RSTSRC         DATA 0xef
0000            210   _SBCON1         DATA 0x94
0000            211   _SBRLH1         DATA 0x96
0000            212   _SBRLL1         DATA 0x95
0000            213   _SBUF           DATA 0x99
0000            214   _SBUF0          DATA 0x99
0000            215   _SBUF1          DATA 0x92
0000            216   _SCON           DATA 0x98
0000            217   _SCON0          DATA 0x98
0000            218   _SCON1          DATA 0xc8
0000            219   _SFRPAGE        DATA 0xa7
0000            220   _SFRPGCN        DATA 0xbc
0000            221   _SFRSTACK       DATA 0xd7
0000            222   _SMB0ADM        DATA 0xd6
0000            223   _SMB0ADR        DATA 0xd7
0000            224   _SMB0CF         DATA 0xc1
0000            225   _SMB0CN0        DATA 0xc0
0000            226   _SMB0DAT        DATA 0xc2
0000            227   _SMB0FCN0       DATA 0xc3
0000            228   _SMB0FCN1       DATA 0xc4
0000            229   _SMB0FCT        DATA 0xef
0000            230   _SMB0RXLN       DATA 0xc5
0000            231   _SMB0TC         DATA 0xac
0000            232   _SMOD1          DATA 0x93
0000            233   _SP             DATA 0x81
0000            234   _SPI0CFG        DATA 0xa1
0000            235   _SPI0CKR        DATA 0xa2
0000            236   _SPI0CN0        DATA 0xf8
0000            237   _SPI0DAT        DATA 0xa3
0000            238   _SPI0FCN0       DATA 0x9a
0000            239   _SPI0FCN1       DATA 0x9b
0000            240   _SPI0FCT        DATA 0xf7
0000            241   _SPI0PCF        DATA 0xdf
0000            242   _TCON           DATA 0x88
0000            243   _TH0            DATA 0x8c
0000            244   _TH1            DATA 0x8d
0000            245   _TL0            DATA 0x8a
0000            246   _TL1            DATA 0x8b
0000            247   _TMOD           DATA 0x89
0000            248   _TMR2CN0        DATA 0xc8
0000            249   _TMR2CN1        DATA 0xfd
0000            250   _TMR2H          DATA 0xcf
0000            251   _TMR2L          DATA 0xce
0000            252   _TMR2RLH        DATA 0xcb
0000            253   _TMR2RLL        DATA 0xca
0000            254   _TMR3CN0        DATA 0x91
0000            255   _TMR3CN1        DATA 0xfe
0000            256   _TMR3H          DATA 0x95
0000            257   _TMR3L          DATA 0x94
0000            258   _TMR3RLH        DATA 0x93
0000            259   _TMR3RLL        DATA 0x92
0000            260   _TMR4CN0        DATA 0x98
0000            261   _TMR4CN1        DATA 0xff
0000            262   _TMR4H          DATA 0xa5
0000            263   _TMR4L          DATA 0xa4
0000            264   _TMR4RLH        DATA 0xa3
0000            265   _TMR4RLL        DATA 0xa2
0000            266   _TMR5CN0        DATA 0xc0
0000            267   _TMR5CN1        DATA 0xf1
0000            268   _TMR5H          DATA 0xd5
0000            269   _TMR5L          DATA 0xd4
0000            270   _TMR5RLH        DATA 0xd3
0000            271   _TMR5RLL        DATA 0xd2
0000            272   _UART0PCF       DATA 0xd9
0000            273   _UART1FCN0      DATA 0x9d
0000            274   _UART1FCN1      DATA 0xd8
0000            275   _UART1FCT       DATA 0xfa
0000            276   _UART1LIN       DATA 0x9e
0000            277   _UART1PCF       DATA 0xda
0000            278   _VDM0CN         DATA 0xff
0000            279   _WDTCN          DATA 0x97
0000            280   _XBR0           DATA 0xe1
0000            281   _XBR1           DATA 0xe2
0000            282   _XBR2           DATA 0xe3
0000            283   _XOSC0CN        DATA 0x86
0000            284   _DPTR           DATA 0x8382
0000            285   _TMR2RL         DATA 0xcbca
0000            286   _TMR3RL         DATA 0x9392
0000            287   _TMR4RL         DATA 0xa3a2
0000            288   _TMR5RL         DATA 0xd3d2
0000            289   _TMR0           DATA 0x8c8a
0000            290   _TMR1           DATA 0x8d8b
0000            291   _TMR2           DATA 0xcfce
0000            292   _TMR3           DATA 0x9594
0000            293   _TMR4           DATA 0xa5a4
0000            294   _TMR5           DATA 0xd5d4
0000            295   _SBRL1          DATA 0x9695
0000            296   _PCA0           DATA 0xfaf9
0000            297   _PCA0CP0        DATA 0xfcfb
0000            298   _PCA0CP1        DATA 0xeae9
0000            299   _PCA0CP2        DATA 0xeceb
0000            300   _PCA0CP3        DATA 0xf5f4
0000            301   _PCA0CP4        DATA 0x8584
0000            302   _PCA0CP5        DATA 0xdedd
0000            303   _ADC0ASA        DATA 0xb6b5
0000            304   _ADC0GT         DATA 0xc4c3
0000            305   _ADC0           DATA 0xbebd
0000            306   _ADC0LT         DATA 0xc6c5
0000            307   _DAC0           DATA 0x8584
0000            308   _DAC1           DATA 0x8a89
0000            309   _DAC2           DATA 0x8c8b
0000            310   _DAC3           DATA 0x8e8d
0000            311   ;--------------------------------------------------------
0000            312   ; special function bits
0000            313   ;--------------------------------------------------------
0000            314   _ACC_0          BIT 0xe0
0000            315   _ACC_1          BIT 0xe1
0000            316   _ACC_2          BIT 0xe2
0000            317   _ACC_3          BIT 0xe3
0000            318   _ACC_4          BIT 0xe4
0000            319   _ACC_5          BIT 0xe5
0000            320   _ACC_6          BIT 0xe6
0000            321   _ACC_7          BIT 0xe7
0000            322   _TEMPE          BIT 0xe8
0000            323   _ADGN0          BIT 0xe9
0000            324   _ADGN1          BIT 0xea
0000            325   _ADWINT         BIT 0xeb
0000            326   _ADBUSY         BIT 0xec
0000            327   _ADINT          BIT 0xed
0000            328   _IPOEN          BIT 0xee
0000            329   _ADEN           BIT 0xef
0000            330   _B_0            BIT 0xf0
0000            331   _B_1            BIT 0xf1
0000            332   _B_2            BIT 0xf2
0000            333   _B_3            BIT 0xf3
0000            334   _B_4            BIT 0xf4
0000            335   _B_5            BIT 0xf5
0000            336   _B_6            BIT 0xf6
0000            337   _B_7            BIT 0xf7
0000            338   _C0FIF          BIT 0xe8
0000            339   _C0RIF          BIT 0xe9
0000            340   _C1FIF          BIT 0xea
0000            341   _C1RIF          BIT 0xeb
0000            342   _C2FIF          BIT 0xec
0000            343   _C2RIF          BIT 0xed
0000            344   _C3FIF          BIT 0xee
0000            345   _C3RIF          BIT 0xef
0000            346   _D1SRC0         BIT 0x88
0000            347   _D1SRC1         BIT 0x89
0000            348   _D1AMEN         BIT 0x8a
0000            349   _D01REFSL       BIT 0x8b
0000            350   _D3SRC0         BIT 0x8c
0000            351   _D3SRC1         BIT 0x8d
0000            352   _D3AMEN         BIT 0x8e
0000            353   _D23REFSL       BIT 0x8f
0000            354   _D0UDIS         BIT 0x98
0000            355   _D1UDIS         BIT 0x99
0000            356   _D2UDIS         BIT 0x9a
0000            357   _D3UDIS         BIT 0x9b
0000            358   _EX0            BIT 0xa8
0000            359   _ET0            BIT 0xa9
0000            360   _EX1            BIT 0xaa
0000            361   _ET1            BIT 0xab
0000            362   _ES0            BIT 0xac
0000            363   _ET2            BIT 0xad
0000            364   _ESPI0          BIT 0xae
0000            365   _EA             BIT 0xaf
0000            366   _PX0            BIT 0xb8
0000            367   _PT0            BIT 0xb9
0000            368   _PX1            BIT 0xba
0000            369   _PT1            BIT 0xbb
0000            370   _PS0            BIT 0xbc
0000            371   _PT2            BIT 0xbd
0000            372   _PSPI0          BIT 0xbe
0000            373   _P0_0           BIT 0x80
0000            374   _P0_1           BIT 0x81
0000            375   _P0_2           BIT 0x82
0000            376   _P0_3           BIT 0x83
0000            377   _P0_4           BIT 0x84
0000            378   _P0_5           BIT 0x85
0000            379   _P0_6           BIT 0x86
0000            380   _P0_7           BIT 0x87
0000            381   _P1_0           BIT 0x90
0000            382   _P1_1           BIT 0x91
0000            383   _P1_2           BIT 0x92
0000            384   _P1_3           BIT 0x93
0000            385   _P1_4           BIT 0x94
0000            386   _P1_5           BIT 0x95
0000            387   _P1_6           BIT 0x96
0000            388   _P1_7           BIT 0x97
0000            389   _P2_0           BIT 0xa0
0000            390   _P2_1           BIT 0xa1
0000            391   _P2_2           BIT 0xa2
0000            392   _P2_3           BIT 0xa3
0000            393   _P2_4           BIT 0xa4
0000            394   _P2_5           BIT 0xa5
0000            395   _P2_6           BIT 0xa6
0000            396   _P3_0           BIT 0xb0
0000            397   _P3_1           BIT 0xb1
0000            398   _P3_2           BIT 0xb2
0000            399   _P3_3           BIT 0xb3
0000            400   _P3_4           BIT 0xb4
0000            401   _P3_7           BIT 0xb7
0000            402   _CCF0           BIT 0xd8
0000            403   _CCF1           BIT 0xd9
0000            404   _CCF2           BIT 0xda
0000            405   _CCF3           BIT 0xdb
0000            406   _CCF4           BIT 0xdc
0000            407   _CCF5           BIT 0xdd
0000            408   _CR             BIT 0xde
0000            409   _CF             BIT 0xdf
0000            410   _PARITY         BIT 0xd0
0000            411   _F1             BIT 0xd1
0000            412   _OV             BIT 0xd2
0000            413   _RS0            BIT 0xd3
0000            414   _RS1            BIT 0xd4
0000            415   _F0             BIT 0xd5
0000            416   _AC             BIT 0xd6
0000            417   _CY             BIT 0xd7
0000            418   _RI             BIT 0x98
0000            419   _TI             BIT 0x99
0000            420   _RB8            BIT 0x9a
0000            421   _TB8            BIT 0x9b
0000            422   _REN            BIT 0x9c
0000            423   _CE             BIT 0x9d
0000            424   _SMODE          BIT 0x9e
0000            425   _RI1            BIT 0xc8
0000            426   _TI1            BIT 0xc9
0000            427   _RBX1           BIT 0xca
0000            428   _TBX1           BIT 0xcb
0000            429   _REN1           BIT 0xcc
0000            430   _PERR1          BIT 0xcd
0000            431   _OVR1           BIT 0xce
0000            432   _SI             BIT 0xc0
0000            433   _ACK            BIT 0xc1
0000            434   _ARBLOST        BIT 0xc2
0000            435   _ACKRQ          BIT 0xc3
0000            436   _STO            BIT 0xc4
0000            437   _STA            BIT 0xc5
0000            438   _TXMODE         BIT 0xc6
0000            439   _MASTER         BIT 0xc7
0000            440   _SPIEN          BIT 0xf8
0000            441   _TXNF           BIT 0xf9
0000            442   _NSSMD0         BIT 0xfa
0000            443   _NSSMD1         BIT 0xfb
0000            444   _RXOVRN         BIT 0xfc
0000            445   _MODF           BIT 0xfd
0000            446   _WCOL           BIT 0xfe
0000            447   _SPIF           BIT 0xff
0000            448   _IT0            BIT 0x88
0000            449   _IE0            BIT 0x89
0000            450   _IT1            BIT 0x8a
0000            451   _IE1            BIT 0x8b
0000            452   _TR0            BIT 0x8c
0000            453   _TF0            BIT 0x8d
0000            454   _TR1            BIT 0x8e
0000            455   _TF1            BIT 0x8f
0000            456   _T2XCLK0        BIT 0xc8
0000            457   _T2XCLK1        BIT 0xc9
0000            458   _TR2            BIT 0xca
0000            459   _T2SPLIT        BIT 0xcb
0000            460   _TF2CEN         BIT 0xcc
0000            461   _TF2LEN         BIT 0xcd
0000            462   _TF2L           BIT 0xce
0000            463   _TF2H           BIT 0xcf
0000            464   _T4XCLK0        BIT 0x98
0000            465   _T4XCLK1        BIT 0x99
0000            466   _TR4            BIT 0x9a
0000            467   _T4SPLIT        BIT 0x9b
0000            468   _TF4CEN         BIT 0x9c
0000            469   _TF4LEN         BIT 0x9d
0000            470   _TF4L           BIT 0x9e
0000            471   _TF4H           BIT 0x9f
0000            472   _T5XCLK0        BIT 0xc0
0000            473   _T5XCLK1        BIT 0xc1
0000            474   _TR5            BIT 0xc2
0000            475   _T5SPLIT        BIT 0xc3
0000            476   _TF5CEN         BIT 0xc4
0000            477   _TF5LEN         BIT 0xc5
0000            478   _TF5L           BIT 0xc6
0000            479   _TF5H           BIT 0xc7
0000            480   _RIE            BIT 0xd8
0000            481   _RXTO0          BIT 0xd9
0000            482   _RXTO1          BIT 0xda
0000            483   _RFRQ           BIT 0xdb
0000            484   _TIE            BIT 0xdc
0000            485   _TXHOLD         BIT 0xdd
0000            486   _TXNF1          BIT 0xde
0000            487   _TFRQ           BIT 0xdf
0000            488   ;--------------------------------------------------------
0000            489   ; overlayable register banks
0000            490   ;--------------------------------------------------------
0000            491            rbank0 segment data overlay
0000            492   ;--------------------------------------------------------
0000            493   ; internal ram data
0000            494   ;--------------------------------------------------------
0000            495            rseg R_DSEG
0000            496   _adcFlag:
0000            497            ds 1
0001            498   _direction:
0001            499            ds 1
0002            500   _delayFlag:
0002            501            ds 1
0003            502   _stepCount:
0003            503            ds 1
0004            504   _interruptCount:
0004            505            ds 1
0005            506   _totalSteps:
0005            507            ds 2
0007            508   _windAngle:
0007            509            ds 2
0009            510   _spiByteNum:
0009            511            ds 1
000A            512   _spiBytes:
000A            513            ds 10
0014            514   _main_vReadings_1_80:
0014            515            ds 8
001C            516   _main_voltages_1_80:
001C            517            ds 8
0024            518   _main_measureCount_1_80:
0024            519            ds 2
0026            520   _main_sloc0_1_0:
0026            521            ds 4
002A            522   ;--------------------------------------------------------
002A            523   ; overlayable items in internal ram 
002A            524   ;--------------------------------------------------------
0000            525            rseg    R_OSEG
0000            526            rseg    R_OSEG
0000            527            rseg    R_OSEG
0000            528   ;--------------------------------------------------------
0000            529   ; indirectly addressable internal ram data
0000            530   ;--------------------------------------------------------
0000            531            rseg R_ISEG
0000            532   ;--------------------------------------------------------
0000            533   ; absolute internal ram data
0000            534   ;--------------------------------------------------------
0000            535            DSEG
0000            536   ;--------------------------------------------------------
0000            537   ; bit data
0000            538   ;--------------------------------------------------------
0000            539            rseg R_BSEG
0000            540   ;--------------------------------------------------------
0000            541   ; paged external ram data
0000            542   ;--------------------------------------------------------
0000            543            rseg R_PSEG
0000            544   ;--------------------------------------------------------
0000            545   ; external ram data
0000            546   ;--------------------------------------------------------
0000            547            rseg R_XSEG
0000            548   ;--------------------------------------------------------
0000            549   ; absolute external ram data
0000            550   ;--------------------------------------------------------
0000            551            XSEG
0000            552   ;--------------------------------------------------------
0000            553   ; external initialized ram data
0000            554   ;--------------------------------------------------------
0000            555            rseg R_IXSEG
0000            556            rseg R_HOME
0000            557            rseg R_GSINIT
0000            558            rseg R_CSEG
0000            559   ;--------------------------------------------------------
0000            560   ; Reset entry point and interrupt vectors
0000            561   ;--------------------------------------------------------
0000            562            CSEG at 0x0000
0000 020100     563            ljmp    _crt0
002B            564            CSEG at 0x002b
002B 020100     565            ljmp    _Timer2_ISR
0073            566            CSEG at 0x0073
0073 020100     567            ljmp    _Timer3_ISR
0076            568   ;--------------------------------------------------------
0076            569   ; global & static initialisations
0076            570   ;--------------------------------------------------------
0000            571            rseg R_HOME
0000            572            rseg R_GSINIT
0000            573            rseg R_GSINIT
0000            574   ;--------------------------------------------------------
0000            575   ; data variables initialization
0000            576   ;--------------------------------------------------------
0000            577            rseg R_DINIT
0000            578   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:47: volatile unsigned char adcFlag = 1;
0000 75A801     579            mov     _adcFlag,#0x01
0003            580   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:48: volatile unsigned char direction = 1;
0003 756801     581            mov     _direction,#0x01
0006            582   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:50: volatile unsigned char delayFlag = 0;
0006 75D800     583            mov     _delayFlag,#0x00
0009            584   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:53: volatile unsigned char stepCount = 0;
0009 759800     585            mov     _stepCount,#0x00
000C            586   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:54: volatile unsigned char interruptCount = 0;
000C 755800     587            mov     _interruptCount,#0x00
000F            588   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:57: int totalSteps = 0;
000F E4         589            clr     a
0010 F518       590            mov     _totalSteps,a
0012 F519       591            mov     (_totalSteps + 1),a
0014            592   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:61: unsigned char spiByteNum = 0;
0014 759800     593            mov     _spiByteNum,#0x00
0017            594            ; The linker places a 'ret' at the end of segment R_DINIT.
0017            595   ;--------------------------------------------------------
0017            596   ; code
0017            597   ;--------------------------------------------------------
0000            598            rseg R_CSEG
0000            599   ;------------------------------------------------------------
0000            600   ;Allocation info for local variables in function '_c51_external_startup'
0000            601   ;------------------------------------------------------------
0000            602   ;------------------------------------------------------------
0000            603   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:64: char _c51_external_startup (void)
0000            604   ;        -----------------------------------------
0000            605   ;         function _c51_external_startup
0000            606   ;        -----------------------------------------
0000            607   __c51_external_startup:
0000            608            using   0
0000            609   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:67: SFRPAGE = 0x00;
0000 75A700     610            mov     _SFRPAGE,#0x00
0003            611   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:68: WDTCN = 0xDE; //First key
0003 7597DE     612            mov     _WDTCN,#0xDE
0006            613   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:69: WDTCN = 0xAD; //Second key
0006 7597AD     614            mov     _WDTCN,#0xAD
0009            615   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:71: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     616            mov     _VDM0CN,#0x80
000C            617   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:72: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     618            mov     _RSTSRC,#0x06
000F            619   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:79: SFRPAGE = 0x10;
000F 75A710     620            mov     _SFRPAGE,#0x10
0012            621   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:80: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     622            mov     _PFE0CN,#0x20
0015            623   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:81: SFRPAGE = 0x00;
0015 75A700     624            mov     _SFRPAGE,#0x00
0018            625   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:102: CLKSEL = 0x00;
0018 75A900     626            mov     _CLKSEL,#0x00
001B            627   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:103: CLKSEL = 0x00;
001B 75A900     628            mov     _CLKSEL,#0x00
001E            629   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:104: while ((CLKSEL & 0x80) == 0);
001E            630   L002001?:
001E E5A9       631            mov     a,_CLKSEL
0020 30E718     632            jnb     acc.7,L002001?
0023            633   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:105: CLKSEL = 0x03;
0023 75A903     634            mov     _CLKSEL,#0x03
0026            635   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:106: CLKSEL = 0x03;
0026 75A903     636            mov     _CLKSEL,#0x03
0029            637   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:107: while ((CLKSEL & 0x80) == 0);
0029            638   L002004?:
0029 E5A9       639            mov     a,_CLKSEL
002B 30E798     640            jnb     acc.7,L002004?
002E            641   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:112: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     642            orl     _P0MDOUT,#0x10
0031            643   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:115: XBR0     = 0x03; // Enable SPI0 and UART0 on P0.4(TX) and P0.5(RX)  
0031 75E103     644            mov     _XBR0,#0x03
0034            645   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:117: XBR1     = 0X01; //Enable PCA I/O and route CEX0 only (check reference manual page 120)
0034 75E201     646            mov     _XBR1,#0x01
0037            647   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:119: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     648            mov     _XBR2,#0x40
003A            649   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:121: P0SKIP |= 0b_1100_1111; //Skip all P0 bits except bits 4 and 5 (UART0)
003A 43D4CF     650            orl     _P0SKIP,#0xCF
003D            651   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:128: P1SKIP |= 0b_0000_1111; 
003D 43D50F     652            orl     _P1SKIP,#0x0F
0040            653   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:134: SCON0 = 0x10;
0040 759810     654            mov     _SCON0,#0x10
0043            655   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:135: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0043 758DE6     656            mov     _TH1,#0xE6
0046            657   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:136: TL1 = TH1;      // Init Timer1
0046 858D8B     658            mov     _TL1,_TH1
0049            659   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:137: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0049 53890F     660            anl     _TMOD,#0x0F
004C            661   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:138: TMOD |=  0x20;                       
004C 438920     662            orl     _TMOD,#0x20
004F            663   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:139: TR1 = 1; // START Timer1
004F D28E       664            setb    _TR1
0051            665   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:140: TI = 1;  // Indicate TX0 ready
0051 D299       666            setb    _TI
0053            667   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:143: SPI0CKR = (SYSCLK/(2*F_SCK_MAX))-1;
0053 75A259     668            mov     _SPI0CKR,#0x59
0056            669   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:144: SPI0CFG = 0b_0110_0000; //SPI in master mode (CKPHA = 1, CKPOL = 0)
0056 75A160     670            mov     _SPI0CFG,#0x60
0059            671   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:145: SPI0CN0 = 0b_0000_0001; //SPI enabled and in 3 wire master mode
0059 75F801     672            mov     _SPI0CN0,#0x01
005C            673   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:148: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
005C 75C800     674            mov     _TMR2CN0,#0x00
005F            675   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:149: CKCON0|=0b_0001_0000; // Timer 2 uses the system clock
005F 438E10     676            orl     _CKCON0,#0x10
0062            677   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:150: TMR2RL=(0x10000L-(SYSCLK/(2*TIMER_2_FREQ))); // Initialize reload value
0062 75CA60     678            mov     _TMR2RL,#0x60
0065 75CB73     679            mov     (_TMR2RL >> 8),#0x73
0068            680   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:151: TMR2=0xffff;   // Set to reload immediately
0068 75CEFF     681            mov     _TMR2,#0xFF
006B 75CFFF     682            mov     (_TMR2 >> 8),#0xFF
006E            683   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:152: ET2=1;         // Enable Timer2 interrupts
006E D2AD       684            setb    _ET2
0070            685   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:153: TR2=1;         // Start Timer2 (TMR2CN is bit addressable)
0070 D2CA       686            setb    _TR2
0072            687   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:156: TMR3CN0=0x00;   // Stop Timer3; Clear TF3;
0072 759100     688            mov     _TMR3CN0,#0x00
0075            689   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:157: CKCON0|=0b_0100_0000; // Timer 3 uses the system clock
0075 438E40     690            orl     _CKCON0,#0x40
0078            691   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:158: TMR3RL=(0x10000L-(SYSCLK/(2*TIMER_3_FREQ))); // Initialize reload value
0078 7592B0     692            mov     _TMR3RL,#0xB0
007B 7593B9     693            mov     (_TMR3RL >> 8),#0xB9
007E            694   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:159: TMR3=0xffff;   // Set to reload immediately
007E 7594FF     695            mov     _TMR3,#0xFF
0081 7595FF     696            mov     (_TMR3 >> 8),#0xFF
0084            697   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:160: EIE1|=0b_1000_0000;     // Enable Timer3 interrupts
0084 43E680     698            orl     _EIE1,#0x80
0087            699   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:161: TMR3CN0|=0b_0000_0100;  // Start Timer3 (TMR3CN0 is not bit addressable)
0087 439104     700            orl     _TMR3CN0,#0x04
008A            701   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:163: EA=1; // Enable interrupts
008A D2AF       702            setb    _EA
008C            703   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:165: return 0;
008C 758200     704            mov     dpl,#0x00
008F 22         705            ret
0090            706   ;------------------------------------------------------------
0090            707   ;Allocation info for local variables in function 'Timer2_ISR'
0090            708   ;------------------------------------------------------------
0090            709   ;------------------------------------------------------------
0090            710   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:169: void Timer2_ISR (void) interrupt INTERRUPT_TIMER2
0090            711   ;        -----------------------------------------
0090            712   ;         function Timer2_ISR
0090            713   ;        -----------------------------------------
0090            714   _Timer2_ISR:
0090 C0E0       715            push    acc
0092 C0D0       716            push    psw
0094 75D000     717            mov     psw,#0x00
0097            718   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:171: SFRPAGE=0x0;
0097 75A700     719            mov     _SFRPAGE,#0x00
009A            720   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:172: TF2H = 0; // Clear Timer2 interrupt flag
009A C2CF       721            clr     _TF2H
009C            722   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:177: if(interruptCount == 3)
009C 7403       723            mov     a,#0x03
009E B55858     724            cjne    a,_interruptCount,L003038?
00A1 8001       725            sjmp    L003039?
00A3            726   L003038?:
00A3 020100     727            ljmp    L003025?
00A6            728   L003039?:
00A6            729   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:179: interruptCount = 0;
00A6 755800     730            mov     _interruptCount,#0x00
00A9            731   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:180: if(direction == 1)
00A9 7401       732            mov     a,#0x01
00AB B56818     733            cjne    a,_direction,L003020?
00AE            734   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:182: if(stepCount == 0)
00AE E598       735            mov     a,_stepCount
00B0 7001       736            jnz     L003008?
00B2            737   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:184: PORT1 = 1;
00B2 D2A1       738            setb    _P2_1
00B4            739   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:185: PORT2 = 1;
00B4 D2A2       740            setb    _P2_2
00B6            741   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:186: PORT3 = 0;
00B6 C2A3       742            clr     _P2_3
00B8            743   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:187: PORT4 = 0;
00B8 C2A4       744            clr     _P2_4
00BA 8001       745            sjmp    L003021?
00BC            746   L003008?:
00BC            747   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:189: else if(stepCount == 1)
00BC 7401       748            mov     a,#0x01
00BE B598D8     749            cjne    a,_stepCount,L003005?
00C1            750   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:191: PORT1 = 0;
00C1 C2A1       751            clr     _P2_1
00C3            752   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:192: PORT2 = 1;
00C3 D2A2       753            setb    _P2_2
00C5            754   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:193: PORT3 = 1;
00C5 D2A3       755            setb    _P2_3
00C7            756   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:194: PORT4 = 0;
00C7 C2A4       757            clr     _P2_4
00C9 8001       758            sjmp    L003021?
00CB            759   L003005?:
00CB            760   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:196: else if(stepCount == 2)
00CB 7402       761            mov     a,#0x02
00CD B59818     762            cjne    a,_stepCount,L003002?
00D0            763   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:198: PORT1 = 0;
00D0 C2A1       764            clr     _P2_1
00D2            765   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:199: PORT2 = 0;
00D2 C2A2       766            clr     _P2_2
00D4            767   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:200: PORT3 = 1;
00D4 D2A3       768            setb    _P2_3
00D6            769   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:201: PORT4 = 1;
00D6 D2A4       770            setb    _P2_4
00D8 8001       771            sjmp    L003021?
00DA            772   L003002?:
00DA            773   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:205: PORT1 = 1;
00DA D2A1       774            setb    _P2_1
00DC            775   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:206: PORT2 = 0;
00DC C2A2       776            clr     _P2_2
00DE            777   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:207: PORT3 = 0;
00DE C2A3       778            clr     _P2_3
00E0            779   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:208: PORT4 = 1;
00E0 D2A4       780            setb    _P2_4
00E2 8001       781            sjmp    L003021?
00E4            782   L003020?:
00E4            783   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:213: if(stepCount == 0)
00E4 E598       784            mov     a,_stepCount
00E6 7001       785            jnz     L003017?
00E8            786   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:215: PORT1 = 1;
00E8 D2A1       787            setb    _P2_1
00EA            788   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:216: PORT2 = 0;
00EA C2A2       789            clr     _P2_2
00EC            790   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:217: PORT3 = 0;
00EC C2A3       791            clr     _P2_3
00EE            792   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:218: PORT4 = 1;
00EE D2A4       793            setb    _P2_4
00F0 8001       794            sjmp    L003021?
00F2            795   L003017?:
00F2            796   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:220: else if(stepCount == 1)
00F2 7401       797            mov     a,#0x01
00F4 B59898     798            cjne    a,_stepCount,L003014?
00F7            799   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:222: PORT1 = 0;
00F7 C2A1       800            clr     _P2_1
00F9            801   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:223: PORT2 = 0;
00F9 C2A2       802            clr     _P2_2
00FB            803   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:224: PORT3 = 1;
00FB D2A3       804            setb    _P2_3
00FD            805   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:225: PORT4 = 1;
00FD D2A4       806            setb    _P2_4
00FF 8001       807            sjmp    L003021?
0101            808   L003014?:
0101            809   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:227: else if(stepCount == 2)
0101 7402       810            mov     a,#0x02
0103 B598D8     811            cjne    a,_stepCount,L003011?
0106            812   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:229: PORT1 = 0;
0106 C2A1       813            clr     _P2_1
0108            814   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:230: PORT2 = 1;
0108 D2A2       815            setb    _P2_2
010A            816   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:231: PORT3 = 1;
010A D2A3       817            setb    _P2_3
010C            818   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:232: PORT4 = 0;
010C C2A4       819            clr     _P2_4
010E 8001       820            sjmp    L003021?
0110            821   L003011?:
0110            822   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:236: PORT1 = 1;
0110 D2A1       823            setb    _P2_1
0112            824   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:237: PORT2 = 1;
0112 D2A2       825            setb    _P2_2
0114            826   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:238: PORT3 = 0;
0114 C2A3       827            clr     _P2_3
0116            828   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:239: PORT4 = 1;
0116 D2A4       829            setb    _P2_4
0118            830   L003021?:
0118            831   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:245: stepCount++;
0118 0598       832            inc     _stepCount
011A            833   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:246: totalSteps++;
011A 0518       834            inc     _totalSteps
011C E4         835            clr     a
011D B51818     836            cjne    a,_totalSteps,L003052?
0120 0519       837            inc     (_totalSteps + 1)
0122            838   L003052?:
0122            839   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:247: if(stepCount > 3)
0122 E598       840            mov     a,_stepCount
0124 24FC       841            add     a,#0xff - 0x03
0126 5001       842            jnc     L003027?
0128            843   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:248: stepCount = 0;
0128 759800     844            mov     _stepCount,#0x00
012B 8001       845            sjmp    L003027?
012D            846   L003025?:
012D            847   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:251: interruptCount++;
012D 0558       848            inc     _interruptCount
012F            849   L003027?:
012F D0D0       850            pop     psw
0131 D0E0       851            pop     acc
0133 32         852            reti
0134            853   ;        eliminated unneeded push/pop dpl
0134            854   ;        eliminated unneeded push/pop dph
0134            855   ;        eliminated unneeded push/pop b
0134            856   ;------------------------------------------------------------
0134            857   ;Allocation info for local variables in function 'Timer3_ISR'
0134            858   ;------------------------------------------------------------
0134            859   ;------------------------------------------------------------
0134            860   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:255: void Timer3_ISR (void) interrupt INTERRUPT_TIMER3
0134            861   ;        -----------------------------------------
0134            862   ;         function Timer3_ISR
0134            863   ;        -----------------------------------------
0134            864   _Timer3_ISR:
0134            865   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:257: SFRPAGE=0x0;
0134 75A700     866            mov     _SFRPAGE,#0x00
0137            867   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:258: TMR3CN0&=0b_0011_1111; // Clear Timer3 interrupt flags
0137 53913F     868            anl     _TMR3CN0,#0x3F
013A            869   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:260: adcFlag = 1;
013A 75A801     870            mov     _adcFlag,#0x01
013D            871   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:261: delayFlag = 1;
013D 75D801     872            mov     _delayFlag,#0x01
0140 32         873            reti
0141            874   ;        eliminated unneeded push/pop psw
0141            875   ;        eliminated unneeded push/pop dpl
0141            876   ;        eliminated unneeded push/pop dph
0141            877   ;        eliminated unneeded push/pop b
0141            878   ;        eliminated unneeded push/pop acc
0141            879   ;------------------------------------------------------------
0141            880   ;Allocation info for local variables in function 'delay_ms'
0141            881   ;------------------------------------------------------------
0141            882   ;ms                        Allocated to registers r2 r3 
0141            883   ;countms                   Allocated to registers r4 r5 
0141            884   ;------------------------------------------------------------
0141            885   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:264: void delay_ms(int ms)
0141            886   ;        -----------------------------------------
0141            887   ;         function delay_ms
0141            888   ;        -----------------------------------------
0141            889   _delay_ms:
0141 AA82       890            mov     r2,dpl
0143            891   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:268: while(countms < 2 * ms)
0143 E583       892            mov     a,dph
0145 CA         893            xch     a,r2
0146 25E0       894            add     a,acc
0148 CA         895            xch     a,r2
0149 33         896            rlc     a
014A FB         897            mov     r3,a
014B 7C00       898            mov     r4,#0x00
014D 7D00       899            mov     r5,#0x00
014F            900   L005003?:
014F C3         901            clr     c
0150 EC         902            mov     a,r4
0151 9A         903            subb    a,r2
0152 ED         904            mov     a,r5
0153 6480       905            xrl     a,#0x80
0155 8BF0       906            mov     b,r3
0157 63F080     907            xrl     b,#0x80
015A 95F0       908            subb    a,b
015C 5001       909            jnc     L005006?
015E            910   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:270: if(delayFlag == 1)
015E 7401       911            mov     a,#0x01
0160 B5D8D8     912            cjne    a,_delayFlag,L005003?
0163            913   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:272: delayFlag = 0;
0163 75D800     914            mov     _delayFlag,#0x00
0166            915   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:273: countms++;
0166 0C         916            inc     r4
0167 BC00D8     917            cjne    r4,#0x00,L005003?
016A 0D         918            inc     r5
016B 8001       919            sjmp    L005003?
016D            920   L005006?:
016D 22         921            ret
016E            922   ;------------------------------------------------------------
016E            923   ;Allocation info for local variables in function 'InitADC'
016E            924   ;------------------------------------------------------------
016E            925   ;------------------------------------------------------------
016E            926   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:278: void InitADC (void)
016E            927   ;        -----------------------------------------
016E            928   ;         function InitADC
016E            929   ;        -----------------------------------------
016E            930   _InitADC:
016E            931   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:280: SFRPAGE = 0x00;
016E 75A700     932            mov     _SFRPAGE,#0x00
0171            933   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:281: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
0171 75B280     934            mov     _ADC0CN1,#0x80
0174            935   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:282: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
0174 75BCF8     936            mov     _ADC0CF0,#0xF8
0177            937   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:283: ADC0CF1 = 0b_0_0_011110; // Same as default for now
0177 75B91E     938            mov     _ADC0CF1,#0x1E
017A            939   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:284: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
017A 75E800     940            mov     _ADC0CN0,#0x00
017D            941   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:285: ADC0CF2 = 0b_0_01_11111 ; // GND pin, Vref=VDD
017D 75DF3F     942            mov     _ADC0CF2,#0x3F
0180            943   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:286: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
0180 75B300     944            mov     _ADC0CN2,#0x00
0183            945   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:287: ADEN=1; // Enable ADC
0183 D2EF       946            setb    _ADEN
0185 22         947            ret
0186            948   ;------------------------------------------------------------
0186            949   ;Allocation info for local variables in function 'ADC_at_Pin'
0186            950   ;------------------------------------------------------------
0186            951   ;pin                       Allocated to registers 
0186            952   ;------------------------------------------------------------
0186            953   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:290: unsigned int ADC_at_Pin(unsigned char pin)
0186            954   ;        -----------------------------------------
0186            955   ;         function ADC_at_Pin
0186            956   ;        -----------------------------------------
0186            957   _ADC_at_Pin:
0186 8582BB     958            mov     _ADC0MX,dpl
0189            959   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:293: ADBUSY=1;       // Dummy conversion first to select new pin
0189 D2EC       960            setb    _ADBUSY
018B            961   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:294: while (ADBUSY); // Wait for dummy conversion to finish
018B            962   L007001?:
018B 20EC98     963            jb      _ADBUSY,L007001?
018E            964   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:295: ADBUSY = 1;     // Convert voltage at the pin
018E D2EC       965            setb    _ADBUSY
0190            966   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:296: while (ADBUSY); // Wait for conversion to complete
0190            967   L007004?:
0190 20ECD8     968            jb      _ADBUSY,L007004?
0193            969   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:297: return (ADC0);
0193 85BD82     970            mov     dpl,_ADC0
0196 85BE83     971            mov     dph,(_ADC0 >> 8)
0199 22         972            ret
019A            973   ;------------------------------------------------------------
019A            974   ;Allocation info for local variables in function 'Volts_at_Pin'
019A            975   ;------------------------------------------------------------
019A            976   ;pin                       Allocated to registers r2 
019A            977   ;------------------------------------------------------------
019A            978   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:300: float Volts_at_Pin(unsigned char pin)
019A            979   ;        -----------------------------------------
019A            980   ;         function Volts_at_Pin
019A            981   ;        -----------------------------------------
019A            982   _Volts_at_Pin:
019A            983   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:302: return ((ADC_at_Pin(pin)*VDD)/16383.0);
019A 120100     984            lcall   _ADC_at_Pin
019D 120100     985            lcall   ___uint2fs
01A0 AA82       986            mov     r2,dpl
01A2 AB83       987            mov     r3,dph
01A4 ACF0       988            mov     r4,b
01A6 FD         989            mov     r5,a
01A7 C002       990            push    ar2
01A9 C003       991            push    ar3
01AB C004       992            push    ar4
01AD C005       993            push    ar5
01AF 909FBE     994            mov     dptr,#0x9FBE
01B2 75F052     995            mov     b,#0x52
01B5 7440       996            mov     a,#0x40
01B7 120100     997            lcall   ___fsmul
01BA AA82       998            mov     r2,dpl
01BC AB83       999            mov     r3,dph
01BE ACF0      1000            mov     r4,b
01C0 FD        1001            mov     r5,a
01C1 E581      1002            mov     a,sp
01C3 24FC      1003            add     a,#0xfc
01C5 F581      1004            mov     sp,a
01C7 E4        1005            clr     a
01C8 C0E0      1006            push    acc
01CA 74FC      1007            mov     a,#0xFC
01CC C0E0      1008            push    acc
01CE 747F      1009            mov     a,#0x7F
01D0 C0E0      1010            push    acc
01D2 7446      1011            mov     a,#0x46
01D4 C0E0      1012            push    acc
01D6 8A82      1013            mov     dpl,r2
01D8 8B83      1014            mov     dph,r3
01DA 8CF0      1015            mov     b,r4
01DC ED        1016            mov     a,r5
01DD 120100    1017            lcall   ___fsdiv
01E0 AA82      1018            mov     r2,dpl
01E2 AB83      1019            mov     r3,dph
01E4 ACF0      1020            mov     r4,b
01E6 FD        1021            mov     r5,a
01E7 E581      1022            mov     a,sp
01E9 24FC      1023            add     a,#0xfc
01EB F581      1024            mov     sp,a
01ED 8A82      1025            mov     dpl,r2
01EF 8B83      1026            mov     dph,r3
01F1 8CF0      1027            mov     b,r4
01F3 ED        1028            mov     a,r5
01F4 22        1029            ret
01F5           1030   ;------------------------------------------------------------
01F5           1031   ;Allocation info for local variables in function 'ConfigPCA0'
01F5           1032   ;------------------------------------------------------------
01F5           1033   ;------------------------------------------------------------
01F5           1034   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:305: void ConfigPCA0()
01F5           1035   ;        -----------------------------------------
01F5           1036   ;         function ConfigPCA0
01F5           1037   ;        -----------------------------------------
01F5           1038   _ConfigPCA0:
01F5           1039   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:307: SFRPAGE = 0x00; //Navigate to SFR page for register write
01F5 75A700    1040            mov     _SFRPAGE,#0x00
01F8           1041   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:309: PCA0POL = 0b_0000_0000; //Set the output polarity for all channels to default (no inversion)
01F8 759600    1042            mov     _PCA0POL,#0x00
01FB           1043   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:311: PCA0MD = 0b_0000_0000; //Set PCA mode to operate even in idle mode with SYSCLK/12
01FB 75D900    1044            mov     _PCA0MD,#0x00
01FE           1045   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:312: PCA0PWM = 0b_0000_0000;        //Enable 8-bit PWM with no overflow flag set and no interrupts enabled
01FE 75F700    1046            mov     _PCA0PWM,#0x00
0201           1047   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:313: PCA0CLR = 0b_0000_0000; //Disable comparator clear for all modules
0201 759C00    1048            mov     _PCA0CLR,#0x00
0204           1049   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:314: PCA0CENT = 0b_00_000000; //Set all modules to edge aligned mode (bits 6 and 7 are reserved and must be 00)
0204 759E00    1050            mov     _PCA0CENT,#0x00
0207           1051   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:316: PCA0CN0 = 0b_0100_0000; //Start the PCA counter/timer (CR bit)         
0207 75D840    1052            mov     _PCA0CN0,#0x40
020A           1053   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:319: PCA0CPM0 = 0b_0100_0010;//Configure Channel 0 to function in 8-bit PWM mode
020A 75DA42    1054            mov     _PCA0CPM0,#0x42
020D           1055   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:320: PCA0CPH0 = 128; //Load the PCA0CP0 high byte 
020D 75FC80    1056            mov     _PCA0CPH0,#0x80
0210 22        1057            ret
0211           1058   ;------------------------------------------------------------
0211           1059   ;Allocation info for local variables in function 'ConfigurePins'
0211           1060   ;------------------------------------------------------------
0211           1061   ;------------------------------------------------------------
0211           1062   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:324: void ConfigurePins()
0211           1063   ;        -----------------------------------------
0211           1064   ;         function ConfigurePins
0211           1065   ;        -----------------------------------------
0211           1066   _ConfigurePins:
0211           1067   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:326: SFRPAGE = 0x20;
0211 75A720    1068            mov     _SFRPAGE,#0x20
0214           1069   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:328: P0MDIN &= 0b_1111_1011; //Set P0 bit 2 to analog input for ADC
0214 53F1FB    1070            anl     _P0MDIN,#0xFB
0217           1071   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:329: P1MDIN &= 0b_1111_0111; //Set P1 bit 3 to analog input for ADC
0217 53F2F7    1072            anl     _P1MDIN,#0xF7
021A           1073   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:341: P1MDOUT |= 0b_1101_0000; 
021A 43A5D0    1074            orl     _P1MDOUT,#0xD0
021D           1075   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:342: P2MDOUT |= 0b_0111_1111; 
021D 43A67F    1076            orl     _P2MDOUT,#0x7F
0220           1077   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:345: SFRPAGE = 0x00;        
0220 75A700    1078            mov     _SFRPAGE,#0x00
0223 22        1079            ret
0224           1080   ;------------------------------------------------------------
0224           1081   ;Allocation info for local variables in function 'SPIWrite'
0224           1082   ;------------------------------------------------------------
0224           1083   ;dat                       Allocated to registers 
0224           1084   ;receive                   Allocated to registers 
0224           1085   ;------------------------------------------------------------
0224           1086   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:348: unsigned char SPIWrite (unsigned char dat)
0224           1087   ;        -----------------------------------------
0224           1088   ;         function SPIWrite
0224           1089   ;        -----------------------------------------
0224           1090   _SPIWrite:
0224 8582A3    1091            mov     _SPI0DAT,dpl
0227           1092   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:353: while(!SPIF); //Wait for the transaction to be finished
0227           1093   L011001?:
0227 30FF18    1094            jnb     _SPIF,L011001?
022A           1095   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:354: receive = SPI0DAT;
022A 85A382    1096            mov     dpl,_SPI0DAT
022D           1097   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:356: SPIF = 0; //Set the SPI flag back to 0 for next transaction
022D C2FF      1098            clr     _SPIF
022F           1099   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:358: return receive;
022F 22        1100            ret
0230           1101   ;------------------------------------------------------------
0230           1102   ;Allocation info for local variables in function 'windSensorRead'
0230           1103   ;------------------------------------------------------------
0230           1104   ;temp                      Allocated to registers r2 r3 
0230           1105   ;------------------------------------------------------------
0230           1106   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:361: void windSensorRead()
0230           1107   ;        -----------------------------------------
0230           1108   ;         function windSensorRead
0230           1109   ;        -----------------------------------------
0230           1110   _windSensorRead:
0230           1111   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:365: if(spiByteNum == 0)
0230 E598      1112            mov     a,_spiByteNum
0232 7001      1113            jnz     L012009?
0234           1114   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:367: MASTER_SS = 0; //Select the wind sensor
0234 C2A0      1115            clr     _P2_0
0236           1116   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:369: delay_ms(4); //Wait at least 1.5ms before continuing
0236 900004    1117            mov     dptr,#0x0004
0239 120100    1118            lcall   _delay_ms
023C           1119   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:370: spiBytes[spiByteNum] = SPIWrite(0xAA); //Write the start byte to the sensor and store the incoming byte
023C E598      1120            mov     a,_spiByteNum
023E 2458      1121            add     a,#_spiBytes
0240 F8        1122            mov     r0,a
0241 7582AA    1123            mov     dpl,#0xAA
0244 C000      1124            push    ar0
0246 120100    1125            lcall   _SPIWrite
0249 E582      1126            mov     a,dpl
024B D000      1127            pop     ar0
024D F6        1128            mov     @r0,a
024E           1129   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:372: spiByteNum++;
024E 0598      1130            inc     _spiByteNum
0250 22        1131            ret
0251           1132   L012009?:
0251           1133   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:376: if(spiByteNum < 10)
0251 74F6      1134            mov     a,#0x100 - 0x0A
0253 2598      1135            add     a,_spiByteNum
0255 4001      1136            jc      L012006?
0257           1137   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:378: spiBytes[spiByteNum] = SPIWrite(0xFF); //Keep writing all-Hi to obtain reading from MISO
0257 E598      1138            mov     a,_spiByteNum
0259 2458      1139            add     a,#_spiBytes
025B F8        1140            mov     r0,a
025C 7582FF    1141            mov     dpl,#0xFF
025F C000      1142            push    ar0
0261 120100    1143            lcall   _SPIWrite
0264 E582      1144            mov     a,dpl
0266 D000      1145            pop     ar0
0268 F6        1146            mov     @r0,a
0269           1147   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:379: spiByteNum++;
0269 0598      1148            inc     _spiByteNum
026B 22        1149            ret
026C           1150   L012006?:
026C           1151   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:383: MASTER_SS = 1; //Deselect the wind sensor
026C D2A0      1152            setb    _P2_0
026E           1153   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:384: delay_ms(2);
026E 900002    1154            mov     dptr,#0x0002
0271 120100    1155            lcall   _delay_ms
0274           1156   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:386: spiByteNum = 0;
0274 759800    1157            mov     _spiByteNum,#0x00
0277           1158   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:388: if(spiBytes[3] & 1)
0277 E55B      1159            mov     a,(_spiBytes + 0x0003)
0279 FA        1160            mov     r2,a
027A 30E0D8    1161            jnb     acc.0,L012011?
027D           1162   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:390: temp = (spiBytes[2] << 8) + spiBytes[3];
027D AB5A      1163            mov     r3,(_spiBytes + 0x0002)
027F 8B04      1164            mov     ar4,r3
0281 E4        1165            clr     a
0282 FB        1166            mov     r3,a
0283 FD        1167            mov     r5,a
0284 EA        1168            mov     a,r2
0285 2B        1169            add     a,r3
0286 FA        1170            mov     r2,a
0287 ED        1171            mov     a,r5
0288 3C        1172            addc    a,r4
0289 FB        1173            mov     r3,a
028A           1174   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:392: if(temp < 0xFFFF)      //If the read angle is valid set it to the wind angle
028A 8A04      1175            mov     ar4,r2
028C 8B05      1176            mov     ar5,r3
028E C3        1177            clr     c
028F EC        1178            mov     a,r4
0290 94FF      1179            subb    a,#0xFF
0292 ED        1180            mov     a,r5
0293 94FF      1181            subb    a,#0xFF
0295 5001      1182            jnc     L012011?
0297           1183   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:393: windAngle = (temp >> 2);
0297 8AD8      1184            mov     _windAngle,r2
0299 EB        1185            mov     a,r3
029A A2E7      1186            mov     c,acc.7
029C 13        1187            rrc     a
029D C5D8      1188            xch     a,_windAngle
029F 13        1189            rrc     a
02A0 C5D8      1190            xch     a,_windAngle
02A2 A2E7      1191            mov     c,acc.7
02A4 13        1192            rrc     a
02A5 C5D8      1193            xch     a,_windAngle
02A7 13        1194            rrc     a
02A8 C5D8      1195            xch     a,_windAngle
02AA F5D9      1196            mov     (_windAngle + 1),a
02AC           1197   L012011?:
02AC 22        1198            ret
02AD           1199   ;------------------------------------------------------------
02AD           1200   ;Allocation info for local variables in function 'main'
02AD           1201   ;------------------------------------------------------------
02AD           1202   ;vReadings                 Allocated with name '_main_vReadings_1_80'
02AD           1203   ;voltages                  Allocated with name '_main_voltages_1_80'
02AD           1204   ;measureCount              Allocated with name '_main_measureCount_1_80'
02AD           1205   ;totalMeasurements         Allocated to registers 
02AD           1206   ;errorConstant             Allocated to registers 
02AD           1207   ;readingADCCounter         Allocated to registers r4 r5 
02AD           1208   ;readingADCTotalInterrupts Allocated to registers 
02AD           1209   ;sloc0                     Allocated with name '_main_sloc0_1_0'
02AD           1210   ;------------------------------------------------------------
02AD           1211   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:399: void main (void) 
02AD           1212   ;        -----------------------------------------
02AD           1213   ;         function main
02AD           1214   ;        -----------------------------------------
02AD           1215   _main:
02AD           1216   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:407: int measureCount = 0;
02AD           1217   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:412: int readingADCCounter = 0;
02AD E4        1218            clr     a
02AE F558      1219            mov     _main_measureCount_1_80,a
02B0 F559      1220            mov     (_main_measureCount_1_80 + 1),a
02B2 FC        1221            mov     r4,a
02B3 FD        1222            mov     r5,a
02B4           1223   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:416: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
02B4 C004      1224            push    ar4
02B6 C005      1225            push    ar5
02B8 7418      1226            mov     a,#__str_0
02BA C0E0      1227            push    acc
02BC 74C3      1228            mov     a,#(__str_0 >> 8)
02BE C0E0      1229            push    acc
02C0 7480      1230            mov     a,#0x80
02C2 C0E0      1231            push    acc
02C4 120100    1232            lcall   _printf
02C7 1581      1233            dec     sp
02C9 1581      1234            dec     sp
02CB 1581      1235            dec     sp
02CD           1236   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:418: ConfigurePins();
02CD 120100    1237            lcall   _ConfigurePins
02D0           1238   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:420: ConfigPCA0();
02D0 120100    1239            lcall   _ConfigPCA0
02D3           1240   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:422: InitADC();
02D3 120100    1241            lcall   _InitADC
02D6 D005      1242            pop     ar5
02D8 D004      1243            pop     ar4
02DA           1244   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:424: while(1) //Main loop of the program begins here
02DA           1245   L013010?:
02DA           1246   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:428: if(adcFlag == 1)
02DA 7401      1247            mov     a,#0x01
02DC B5A8D8    1248            cjne    a,_adcFlag,L013018?
02DF 8001      1249            sjmp    L013019?
02E1           1250   L013018?:
02E1 020100    1251            ljmp    L013008?
02E4           1252   L013019?:
02E4           1253   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:431: adcFlag = 0;
02E4 75A800    1254            mov     _adcFlag,#0x00
02E7           1255   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:434: if(readingADCCounter < readingADCTotalInterrupts)
02E7 C3        1256            clr     c
02E8 EC        1257            mov     a,r4
02E9 941E      1258            subb    a,#0x1E
02EB ED        1259            mov     a,r5
02EC 6480      1260            xrl     a,#0x80
02EE 9480      1261            subb    a,#0x80
02F0 5001      1262            jnc     L013005?
02F2           1263   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:435: readingADCCounter++;
02F2 0C        1264            inc     r4
02F3 BC00D8    1265            cjne    r4,#0x00,L013021?
02F6 0D        1266            inc     r5
02F7           1267   L013021?:
02F7 020100    1268            ljmp    L013008?
02FA           1269   L013005?:
02FA           1270   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:439: if(measureCount < totalMeasurements)
02FA C3        1271            clr     c
02FB E558      1272            mov     a,_main_measureCount_1_80
02FD 9414      1273            subb    a,#0x14
02FF E559      1274            mov     a,(_main_measureCount_1_80 + 1)
0301 6480      1275            xrl     a,#0x80
0303 9480      1276            subb    a,#0x80
0305 4001      1277            jc      L013022?
0307 020100    1278            ljmp    L013002?
030A           1279   L013022?:
030A           1280   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:442: voltages[0] += Volts_at_Pin(QFP32_MUX_P1_3);
030A 850898    1281            mov     _main_sloc0_1_0,_main_voltages_1_80
030D 850999    1282            mov     (_main_sloc0_1_0 + 1),(_main_voltages_1_80 + 1)
0310 850A9A    1283            mov     (_main_sloc0_1_0 + 2),(_main_voltages_1_80 + 2)
0313 850B9B    1284            mov     (_main_sloc0_1_0 + 3),(_main_voltages_1_80 + 3)
0316 758209    1285            mov     dpl,#0x09
0319 120100    1286            lcall   _Volts_at_Pin
031C AA82      1287            mov     r2,dpl
031E AB83      1288            mov     r3,dph
0320 AEF0      1289            mov     r6,b
0322 FF        1290            mov     r7,a
0323 C002      1291            push    ar2
0325 C003      1292            push    ar3
0327 C006      1293            push    ar6
0329 C007      1294            push    ar7
032B 859882    1295            mov     dpl,_main_sloc0_1_0
032E 859983    1296            mov     dph,(_main_sloc0_1_0 + 1)
0331 859AF0    1297            mov     b,(_main_sloc0_1_0 + 2)
0334 E59B      1298            mov     a,(_main_sloc0_1_0 + 3)
0336 120100    1299            lcall   ___fsadd
0339 AA82      1300            mov     r2,dpl
033B AB83      1301            mov     r3,dph
033D AEF0      1302            mov     r6,b
033F FF        1303            mov     r7,a
0340 E581      1304            mov     a,sp
0342 24FC      1305            add     a,#0xfc
0344 F581      1306            mov     sp,a
0346 8A08      1307            mov     _main_voltages_1_80,r2
0348 8B09      1308            mov     (_main_voltages_1_80 + 1),r3
034A 8E0A      1309            mov     (_main_voltages_1_80 + 2),r6
034C 8F0B      1310            mov     (_main_voltages_1_80 + 3),r7
034E           1311   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:443: voltages[1] += Volts_at_Pin(QFP32_MUX_P0_2);
034E 850C98    1312            mov     _main_sloc0_1_0,(_main_voltages_1_80 + 0x0004)
0351 850D99    1313            mov     (_main_sloc0_1_0 + 1),((_main_voltages_1_80 + 0x0004) + 1)
0354 850E9A    1314            mov     (_main_sloc0_1_0 + 2),((_main_voltages_1_80 + 0x0004) + 2)
0357 850F9B    1315            mov     (_main_sloc0_1_0 + 3),((_main_voltages_1_80 + 0x0004) + 3)
035A 758201    1316            mov     dpl,#0x01
035D 120100    1317            lcall   _Volts_at_Pin
0360 AA82      1318            mov     r2,dpl
0362 AB83      1319            mov     r3,dph
0364 AEF0      1320            mov     r6,b
0366 FF        1321            mov     r7,a
0367 C002      1322            push    ar2
0369 C003      1323            push    ar3
036B C006      1324            push    ar6
036D C007      1325            push    ar7
036F 859882    1326            mov     dpl,_main_sloc0_1_0
0372 859983    1327            mov     dph,(_main_sloc0_1_0 + 1)
0375 859AF0    1328            mov     b,(_main_sloc0_1_0 + 2)
0378 E59B      1329            mov     a,(_main_sloc0_1_0 + 3)
037A 120100    1330            lcall   ___fsadd
037D AA82      1331            mov     r2,dpl
037F AB83      1332            mov     r3,dph
0381 AEF0      1333            mov     r6,b
0383 FF        1334            mov     r7,a
0384 E581      1335            mov     a,sp
0386 24FC      1336            add     a,#0xfc
0388 F581      1337            mov     sp,a
038A 8A0C      1338            mov     (_main_voltages_1_80 + 0x0004),r2
038C 8B0D      1339            mov     ((_main_voltages_1_80 + 0x0004) + 1),r3
038E 8E0E      1340            mov     ((_main_voltages_1_80 + 0x0004) + 2),r6
0390 8F0F      1341            mov     ((_main_voltages_1_80 + 0x0004) + 3),r7
0392           1342   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:446: measureCount++;
0392 0558      1343            inc     _main_measureCount_1_80
0394 E4        1344            clr     a
0395 B558D8    1345            cjne    a,_main_measureCount_1_80,L013023?
0398 0559      1346            inc     (_main_measureCount_1_80 + 1)
039A           1347   L013023?:
039A 020100    1348            ljmp    L013003?
039D           1349   L013002?:
039D           1350   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:451: vReadings[0] = (voltages[0]/totalMeasurements) - errorConstant;
039D E4        1351            clr     a
039E C0E0      1352            push    acc
03A0 C0E0      1353            push    acc
03A2 74A0      1354            mov     a,#0xA0
03A4 C0E0      1355            push    acc
03A6 7441      1356            mov     a,#0x41
03A8 C0E0      1357            push    acc
03AA 850882    1358            mov     dpl,_main_voltages_1_80
03AD 850983    1359            mov     dph,(_main_voltages_1_80 + 1)
03B0 850AF0    1360            mov     b,(_main_voltages_1_80 + 2)
03B3 E50B      1361            mov     a,(_main_voltages_1_80 + 3)
03B5 120100    1362            lcall   ___fsdiv
03B8 AA82      1363            mov     r2,dpl
03BA AB83      1364            mov     r3,dph
03BC AEF0      1365            mov     r6,b
03BE FF        1366            mov     r7,a
03BF E581      1367            mov     a,sp
03C1 24FC      1368            add     a,#0xfc
03C3 F581      1369            mov     sp,a
03C5 74B8      1370            mov     a,#0xB8
03C7 C0E0      1371            push    acc
03C9 741E      1372            mov     a,#0x1E
03CB C0E0      1373            push    acc
03CD 7405      1374            mov     a,#0x05
03CF C0E0      1375            push    acc
03D1 743E      1376            mov     a,#0x3E
03D3 C0E0      1377            push    acc
03D5 8A82      1378            mov     dpl,r2
03D7 8B83      1379            mov     dph,r3
03D9 8EF0      1380            mov     b,r6
03DB EF        1381            mov     a,r7
03DC 120100    1382            lcall   ___fssub
03DF 858298    1383            mov     _main_sloc0_1_0,dpl
03E2 858399    1384            mov     (_main_sloc0_1_0 + 1),dph
03E5 85F09A    1385            mov     (_main_sloc0_1_0 + 2),b
03E8 F59B      1386            mov     (_main_sloc0_1_0 + 3),a
03EA E581      1387            mov     a,sp
03EC 24FC      1388            add     a,#0xfc
03EE F581      1389            mov     sp,a
03F0 8598B8    1390            mov     _main_vReadings_1_80,_main_sloc0_1_0
03F3 8599B9    1391            mov     (_main_vReadings_1_80 + 1),(_main_sloc0_1_0 + 1)
03F6 859ABA    1392            mov     (_main_vReadings_1_80 + 2),(_main_sloc0_1_0 + 2)
03F9 859BBB    1393            mov     (_main_vReadings_1_80 + 3),(_main_sloc0_1_0 + 3)
03FC           1394   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:452: vReadings[1] = (voltages[1]/totalMeasurements) - errorConstant;
03FC E4        1395            clr     a
03FD C0E0      1396            push    acc
03FF C0E0      1397            push    acc
0401 74A0      1398            mov     a,#0xA0
0403 C0E0      1399            push    acc
0405 7441      1400            mov     a,#0x41
0407 C0E0      1401            push    acc
0409 850C82    1402            mov     dpl,(_main_voltages_1_80 + 0x0004)
040C 850D83    1403            mov     dph,((_main_voltages_1_80 + 0x0004) + 1)
040F 850EF0    1404            mov     b,((_main_voltages_1_80 + 0x0004) + 2)
0412 E50F      1405            mov     a,((_main_voltages_1_80 + 0x0004) + 3)
0414 120100    1406            lcall   ___fsdiv
0417 AA82      1407            mov     r2,dpl
0419 AB83      1408            mov     r3,dph
041B AEF0      1409            mov     r6,b
041D FF        1410            mov     r7,a
041E E581      1411            mov     a,sp
0420 24FC      1412            add     a,#0xfc
0422 F581      1413            mov     sp,a
0424 74B8      1414            mov     a,#0xB8
0426 C0E0      1415            push    acc
0428 741E      1416            mov     a,#0x1E
042A C0E0      1417            push    acc
042C 7405      1418            mov     a,#0x05
042E C0E0      1419            push    acc
0430 743E      1420            mov     a,#0x3E
0432 C0E0      1421            push    acc
0434 8A82      1422            mov     dpl,r2
0436 8B83      1423            mov     dph,r3
0438 8EF0      1424            mov     b,r6
043A EF        1425            mov     a,r7
043B 120100    1426            lcall   ___fssub
043E AA82      1427            mov     r2,dpl
0440 AB83      1428            mov     r3,dph
0442 AEF0      1429            mov     r6,b
0444 FF        1430            mov     r7,a
0445 E581      1431            mov     a,sp
0447 24FC      1432            add     a,#0xfc
0449 F581      1433            mov     sp,a
044B 8ABC      1434            mov     (_main_vReadings_1_80 + 0x0004),r2
044D 8BBD      1435            mov     ((_main_vReadings_1_80 + 0x0004) + 1),r3
044F 8EBE      1436            mov     ((_main_vReadings_1_80 + 0x0004) + 2),r6
0451 8FBF      1437            mov     ((_main_vReadings_1_80 + 0x0004) + 3),r7
0453           1438   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:455: printf("V(P1.3)=%3.2fV, V(P0.2)=%3.2fV Wind = %d degrees\r", vReadings[0], vReadings[1], windAngle);
0453 C0D8      1439            push    _windAngle
0455 C0D9      1440            push    (_windAngle + 1)
0457 C002      1441            push    ar2
0459 C003      1442            push    ar3
045B C006      1443            push    ar6
045D C007      1444            push    ar7
045F C098      1445            push    _main_sloc0_1_0
0461 C099      1446            push    (_main_sloc0_1_0 + 1)
0463 C09A      1447            push    (_main_sloc0_1_0 + 2)
0465 C09B      1448            push    (_main_sloc0_1_0 + 3)
0467 7498      1449            mov     a,#__str_1
0469 C0E0      1450            push    acc
046B 74C6      1451            mov     a,#(__str_1 >> 8)
046D C0E0      1452            push    acc
046F 7480      1453            mov     a,#0x80
0471 C0E0      1454            push    acc
0473 120100    1455            lcall   _printf
0476 E581      1456            mov     a,sp
0478 24F3      1457            add     a,#0xf3
047A F581      1458            mov     sp,a
047C           1459   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:458: measureCount = 0;
047C           1460   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:459: voltages[0] = 0;
047C E4        1461            clr a
047D F558      1462            mov _main_measureCount_1_80,a
047F F559      1463            mov (_main_measureCount_1_80 + 1),a
0481 F508      1464            mov _main_voltages_1_80,a
0483 F509      1465            mov (_main_voltages_1_80 + 1),a
0485 F50A      1466            mov (_main_voltages_1_80 + 2),a
0487 F50B      1467            mov (_main_voltages_1_80 + 3),a
0489           1468   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:460: voltages[1] = 0;
0489 750C00    1469            mov     (_main_voltages_1_80 + 0x0004),#0x00
048C 750D00    1470            mov     ((_main_voltages_1_80 + 0x0004) + 1),#0x00
048F 750E00    1471            mov     ((_main_voltages_1_80 + 0x0004) + 2),#0x00
0492 750F00    1472            mov     ((_main_voltages_1_80 + 0x0004) + 3),#0x00
0495           1473   L013003?:
0495           1474   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:464: readingADCCounter = 0;
0495 7C00      1475            mov     r4,#0x00
0497 7D00      1476            mov     r5,#0x00
0499           1477   L013008?:
0499           1478   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:471: windSensorRead();
0499 C004      1479            push    ar4
049B C005      1480            push    ar5
049D 120100    1481            lcall   _windSensorRead
04A0 D005      1482            pop     ar5
04A2 D004      1483            pop     ar4
04A4 020100    1484            ljmp    L013010?
04A7           1485            rseg R_CSEG
04A7           1486   
0000           1487            rseg R_XINIT
0000           1488   
0000           1489            rseg R_CONST
0000           1490   __str_0:
0000 1B        1491            db 0x1B
0001 5B324A    1492            db '[2J'
0004 00        1493            db 0x00
0005           1494   __str_1:
0005 56285031  1495            db 'V(P1.3)=%3.2fV, V(P0.2)=%3.2fV Wind = %d degrees'
     2E33293D
     25332E32
     66562C20
     56285030
     2E32293D
     25332E32
     66562057
     696E6420
     3D202564
     20646567
     72656573
0035 0D        1496            db 0x0D
0036 00        1497            db 0x00
0037           1498   
0076           1499            CSEG
0076           1500   
0076           1501   end
