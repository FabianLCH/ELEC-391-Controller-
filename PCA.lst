0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Thu Feb 14 09:48:45 2019
0000              5   ;--------------------------------------------------------
                  5   $name PCA
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _ConfigurePins
0000             29            public _takeStep
0000             30            public _ConfigPCA0
0000             31            public _Volts_at_Pin
0000             32            public _ADC_at_Pin
0000             33            public _InitADC
0000             34            public _getsn
0000             35            public _waitms
0000             36            public _Timer2_ISR
0000             37            public _Timer3us
0000             38            public __c51_external_startup
0000             39            public _getsn_PARM_2
0000             40            public _totalSteps
0000             41            public _stepCount
0000             42            public _stepFlag
0000             43   ;--------------------------------------------------------
0000             44   ; Special Function Registers
0000             45   ;--------------------------------------------------------
0000             46   _ACC            DATA 0xe0
0000             47   _ADC0ASAH       DATA 0xb6
0000             48   _ADC0ASAL       DATA 0xb5
0000             49   _ADC0ASCF       DATA 0xa1
0000             50   _ADC0ASCT       DATA 0xc7
0000             51   _ADC0CF0        DATA 0xbc
0000             52   _ADC0CF1        DATA 0xb9
0000             53   _ADC0CF2        DATA 0xdf
0000             54   _ADC0CN0        DATA 0xe8
0000             55   _ADC0CN1        DATA 0xb2
0000             56   _ADC0CN2        DATA 0xb3
0000             57   _ADC0GTH        DATA 0xc4
0000             58   _ADC0GTL        DATA 0xc3
0000             59   _ADC0H          DATA 0xbe
0000             60   _ADC0L          DATA 0xbd
0000             61   _ADC0LTH        DATA 0xc6
0000             62   _ADC0LTL        DATA 0xc5
0000             63   _ADC0MX         DATA 0xbb
0000             64   _B              DATA 0xf0
0000             65   _CKCON0         DATA 0x8e
0000             66   _CKCON1         DATA 0xa6
0000             67   _CLEN0          DATA 0xc6
0000             68   _CLIE0          DATA 0xc7
0000             69   _CLIF0          DATA 0xe8
0000             70   _CLKSEL         DATA 0xa9
0000             71   _CLOUT0         DATA 0xd1
0000             72   _CLU0CF         DATA 0xb1
0000             73   _CLU0FN         DATA 0xaf
0000             74   _CLU0MX         DATA 0x84
0000             75   _CLU1CF         DATA 0xb3
0000             76   _CLU1FN         DATA 0xb2
0000             77   _CLU1MX         DATA 0x85
0000             78   _CLU2CF         DATA 0xb6
0000             79   _CLU2FN         DATA 0xb5
0000             80   _CLU2MX         DATA 0x91
0000             81   _CLU3CF         DATA 0xbf
0000             82   _CLU3FN         DATA 0xbe
0000             83   _CLU3MX         DATA 0xae
0000             84   _CMP0CN0        DATA 0x9b
0000             85   _CMP0CN1        DATA 0x99
0000             86   _CMP0MD         DATA 0x9d
0000             87   _CMP0MX         DATA 0x9f
0000             88   _CMP1CN0        DATA 0xbf
0000             89   _CMP1CN1        DATA 0xac
0000             90   _CMP1MD         DATA 0xab
0000             91   _CMP1MX         DATA 0xaa
0000             92   _CRC0CN0        DATA 0xce
0000             93   _CRC0CN1        DATA 0x86
0000             94   _CRC0CNT        DATA 0xd3
0000             95   _CRC0DAT        DATA 0xcb
0000             96   _CRC0FLIP       DATA 0xcf
0000             97   _CRC0IN         DATA 0xca
0000             98   _CRC0ST         DATA 0xd2
0000             99   _DAC0CF0        DATA 0x91
0000            100   _DAC0CF1        DATA 0x92
0000            101   _DAC0H          DATA 0x85
0000            102   _DAC0L          DATA 0x84
0000            103   _DAC1CF0        DATA 0x93
0000            104   _DAC1CF1        DATA 0x94
0000            105   _DAC1H          DATA 0x8a
0000            106   _DAC1L          DATA 0x89
0000            107   _DAC2CF0        DATA 0x95
0000            108   _DAC2CF1        DATA 0x96
0000            109   _DAC2H          DATA 0x8c
0000            110   _DAC2L          DATA 0x8b
0000            111   _DAC3CF0        DATA 0x9a
0000            112   _DAC3CF1        DATA 0x9c
0000            113   _DAC3H          DATA 0x8e
0000            114   _DAC3L          DATA 0x8d
0000            115   _DACGCF0        DATA 0x88
0000            116   _DACGCF1        DATA 0x98
0000            117   _DACGCF2        DATA 0xa2
0000            118   _DERIVID        DATA 0xad
0000            119   _DEVICEID       DATA 0xb5
0000            120   _DPH            DATA 0x83
0000            121   _DPL            DATA 0x82
0000            122   _EIE1           DATA 0xe6
0000            123   _EIE2           DATA 0xf3
0000            124   _EIP1           DATA 0xbb
0000            125   _EIP1H          DATA 0xee
0000            126   _EIP2           DATA 0xed
0000            127   _EIP2H          DATA 0xf6
0000            128   _EMI0CN         DATA 0xe7
0000            129   _FLKEY          DATA 0xb7
0000            130   _HFO0CAL        DATA 0xc7
0000            131   _HFO1CAL        DATA 0xd6
0000            132   _HFOCN          DATA 0xef
0000            133   _I2C0ADM        DATA 0xff
0000            134   _I2C0CN0        DATA 0xba
0000            135   _I2C0DIN        DATA 0xbc
0000            136   _I2C0DOUT       DATA 0xbb
0000            137   _I2C0FCN0       DATA 0xad
0000            138   _I2C0FCN1       DATA 0xab
0000            139   _I2C0FCT        DATA 0xf5
0000            140   _I2C0SLAD       DATA 0xbd
0000            141   _I2C0STAT       DATA 0xb9
0000            142   _IE             DATA 0xa8
0000            143   _IP             DATA 0xb8
0000            144   _IPH            DATA 0xf2
0000            145   _IT01CF         DATA 0xe4
0000            146   _LFO0CN         DATA 0xb1
0000            147   _P0             DATA 0x80
0000            148   _P0MASK         DATA 0xfe
0000            149   _P0MAT          DATA 0xfd
0000            150   _P0MDIN         DATA 0xf1
0000            151   _P0MDOUT        DATA 0xa4
0000            152   _P0SKIP         DATA 0xd4
0000            153   _P1             DATA 0x90
0000            154   _P1MASK         DATA 0xee
0000            155   _P1MAT          DATA 0xed
0000            156   _P1MDIN         DATA 0xf2
0000            157   _P1MDOUT        DATA 0xa5
0000            158   _P1SKIP         DATA 0xd5
0000            159   _P2             DATA 0xa0
0000            160   _P2MASK         DATA 0xfc
0000            161   _P2MAT          DATA 0xfb
0000            162   _P2MDIN         DATA 0xf3
0000            163   _P2MDOUT        DATA 0xa6
0000            164   _P2SKIP         DATA 0xcc
0000            165   _P3             DATA 0xb0
0000            166   _P3MDIN         DATA 0xf4
0000            167   _P3MDOUT        DATA 0x9c
0000            168   _PCA0CENT       DATA 0x9e
0000            169   _PCA0CLR        DATA 0x9c
0000            170   _PCA0CN0        DATA 0xd8
0000            171   _PCA0CPH0       DATA 0xfc
0000            172   _PCA0CPH1       DATA 0xea
0000            173   _PCA0CPH2       DATA 0xec
0000            174   _PCA0CPH3       DATA 0xf5
0000            175   _PCA0CPH4       DATA 0x85
0000            176   _PCA0CPH5       DATA 0xde
0000            177   _PCA0CPL0       DATA 0xfb
0000            178   _PCA0CPL1       DATA 0xe9
0000            179   _PCA0CPL2       DATA 0xeb
0000            180   _PCA0CPL3       DATA 0xf4
0000            181   _PCA0CPL4       DATA 0x84
0000            182   _PCA0CPL5       DATA 0xdd
0000            183   _PCA0CPM0       DATA 0xda
0000            184   _PCA0CPM1       DATA 0xdb
0000            185   _PCA0CPM2       DATA 0xdc
0000            186   _PCA0CPM3       DATA 0xae
0000            187   _PCA0CPM4       DATA 0xaf
0000            188   _PCA0CPM5       DATA 0xcc
0000            189   _PCA0H          DATA 0xfa
0000            190   _PCA0L          DATA 0xf9
0000            191   _PCA0MD         DATA 0xd9
0000            192   _PCA0POL        DATA 0x96
0000            193   _PCA0PWM        DATA 0xf7
0000            194   _PCON0          DATA 0x87
0000            195   _PCON1          DATA 0xcd
0000            196   _PFE0CN         DATA 0xc1
0000            197   _PRTDRV         DATA 0xf6
0000            198   _PSCTL          DATA 0x8f
0000            199   _PSTAT0         DATA 0xaa
0000            200   _PSW            DATA 0xd0
0000            201   _REF0CN         DATA 0xd1
0000            202   _REG0CN         DATA 0xc9
0000            203   _REVID          DATA 0xb6
0000            204   _RSTSRC         DATA 0xef
0000            205   _SBCON1         DATA 0x94
0000            206   _SBRLH1         DATA 0x96
0000            207   _SBRLL1         DATA 0x95
0000            208   _SBUF           DATA 0x99
0000            209   _SBUF0          DATA 0x99
0000            210   _SBUF1          DATA 0x92
0000            211   _SCON           DATA 0x98
0000            212   _SCON0          DATA 0x98
0000            213   _SCON1          DATA 0xc8
0000            214   _SFRPAGE        DATA 0xa7
0000            215   _SFRPGCN        DATA 0xbc
0000            216   _SFRSTACK       DATA 0xd7
0000            217   _SMB0ADM        DATA 0xd6
0000            218   _SMB0ADR        DATA 0xd7
0000            219   _SMB0CF         DATA 0xc1
0000            220   _SMB0CN0        DATA 0xc0
0000            221   _SMB0DAT        DATA 0xc2
0000            222   _SMB0FCN0       DATA 0xc3
0000            223   _SMB0FCN1       DATA 0xc4
0000            224   _SMB0FCT        DATA 0xef
0000            225   _SMB0RXLN       DATA 0xc5
0000            226   _SMB0TC         DATA 0xac
0000            227   _SMOD1          DATA 0x93
0000            228   _SP             DATA 0x81
0000            229   _SPI0CFG        DATA 0xa1
0000            230   _SPI0CKR        DATA 0xa2
0000            231   _SPI0CN0        DATA 0xf8
0000            232   _SPI0DAT        DATA 0xa3
0000            233   _SPI0FCN0       DATA 0x9a
0000            234   _SPI0FCN1       DATA 0x9b
0000            235   _SPI0FCT        DATA 0xf7
0000            236   _SPI0PCF        DATA 0xdf
0000            237   _TCON           DATA 0x88
0000            238   _TH0            DATA 0x8c
0000            239   _TH1            DATA 0x8d
0000            240   _TL0            DATA 0x8a
0000            241   _TL1            DATA 0x8b
0000            242   _TMOD           DATA 0x89
0000            243   _TMR2CN0        DATA 0xc8
0000            244   _TMR2CN1        DATA 0xfd
0000            245   _TMR2H          DATA 0xcf
0000            246   _TMR2L          DATA 0xce
0000            247   _TMR2RLH        DATA 0xcb
0000            248   _TMR2RLL        DATA 0xca
0000            249   _TMR3CN0        DATA 0x91
0000            250   _TMR3CN1        DATA 0xfe
0000            251   _TMR3H          DATA 0x95
0000            252   _TMR3L          DATA 0x94
0000            253   _TMR3RLH        DATA 0x93
0000            254   _TMR3RLL        DATA 0x92
0000            255   _TMR4CN0        DATA 0x98
0000            256   _TMR4CN1        DATA 0xff
0000            257   _TMR4H          DATA 0xa5
0000            258   _TMR4L          DATA 0xa4
0000            259   _TMR4RLH        DATA 0xa3
0000            260   _TMR4RLL        DATA 0xa2
0000            261   _TMR5CN0        DATA 0xc0
0000            262   _TMR5CN1        DATA 0xf1
0000            263   _TMR5H          DATA 0xd5
0000            264   _TMR5L          DATA 0xd4
0000            265   _TMR5RLH        DATA 0xd3
0000            266   _TMR5RLL        DATA 0xd2
0000            267   _UART0PCF       DATA 0xd9
0000            268   _UART1FCN0      DATA 0x9d
0000            269   _UART1FCN1      DATA 0xd8
0000            270   _UART1FCT       DATA 0xfa
0000            271   _UART1LIN       DATA 0x9e
0000            272   _UART1PCF       DATA 0xda
0000            273   _VDM0CN         DATA 0xff
0000            274   _WDTCN          DATA 0x97
0000            275   _XBR0           DATA 0xe1
0000            276   _XBR1           DATA 0xe2
0000            277   _XBR2           DATA 0xe3
0000            278   _XOSC0CN        DATA 0x86
0000            279   _DPTR           DATA 0x8382
0000            280   _TMR2RL         DATA 0xcbca
0000            281   _TMR3RL         DATA 0x9392
0000            282   _TMR4RL         DATA 0xa3a2
0000            283   _TMR5RL         DATA 0xd3d2
0000            284   _TMR0           DATA 0x8c8a
0000            285   _TMR1           DATA 0x8d8b
0000            286   _TMR2           DATA 0xcfce
0000            287   _TMR3           DATA 0x9594
0000            288   _TMR4           DATA 0xa5a4
0000            289   _TMR5           DATA 0xd5d4
0000            290   _SBRL1          DATA 0x9695
0000            291   _PCA0           DATA 0xfaf9
0000            292   _PCA0CP0        DATA 0xfcfb
0000            293   _PCA0CP1        DATA 0xeae9
0000            294   _PCA0CP2        DATA 0xeceb
0000            295   _PCA0CP3        DATA 0xf5f4
0000            296   _PCA0CP4        DATA 0x8584
0000            297   _PCA0CP5        DATA 0xdedd
0000            298   _ADC0ASA        DATA 0xb6b5
0000            299   _ADC0GT         DATA 0xc4c3
0000            300   _ADC0           DATA 0xbebd
0000            301   _ADC0LT         DATA 0xc6c5
0000            302   _DAC0           DATA 0x8584
0000            303   _DAC1           DATA 0x8a89
0000            304   _DAC2           DATA 0x8c8b
0000            305   _DAC3           DATA 0x8e8d
0000            306   ;--------------------------------------------------------
0000            307   ; special function bits
0000            308   ;--------------------------------------------------------
0000            309   _ACC_0          BIT 0xe0
0000            310   _ACC_1          BIT 0xe1
0000            311   _ACC_2          BIT 0xe2
0000            312   _ACC_3          BIT 0xe3
0000            313   _ACC_4          BIT 0xe4
0000            314   _ACC_5          BIT 0xe5
0000            315   _ACC_6          BIT 0xe6
0000            316   _ACC_7          BIT 0xe7
0000            317   _TEMPE          BIT 0xe8
0000            318   _ADGN0          BIT 0xe9
0000            319   _ADGN1          BIT 0xea
0000            320   _ADWINT         BIT 0xeb
0000            321   _ADBUSY         BIT 0xec
0000            322   _ADINT          BIT 0xed
0000            323   _IPOEN          BIT 0xee
0000            324   _ADEN           BIT 0xef
0000            325   _B_0            BIT 0xf0
0000            326   _B_1            BIT 0xf1
0000            327   _B_2            BIT 0xf2
0000            328   _B_3            BIT 0xf3
0000            329   _B_4            BIT 0xf4
0000            330   _B_5            BIT 0xf5
0000            331   _B_6            BIT 0xf6
0000            332   _B_7            BIT 0xf7
0000            333   _C0FIF          BIT 0xe8
0000            334   _C0RIF          BIT 0xe9
0000            335   _C1FIF          BIT 0xea
0000            336   _C1RIF          BIT 0xeb
0000            337   _C2FIF          BIT 0xec
0000            338   _C2RIF          BIT 0xed
0000            339   _C3FIF          BIT 0xee
0000            340   _C3RIF          BIT 0xef
0000            341   _D1SRC0         BIT 0x88
0000            342   _D1SRC1         BIT 0x89
0000            343   _D1AMEN         BIT 0x8a
0000            344   _D01REFSL       BIT 0x8b
0000            345   _D3SRC0         BIT 0x8c
0000            346   _D3SRC1         BIT 0x8d
0000            347   _D3AMEN         BIT 0x8e
0000            348   _D23REFSL       BIT 0x8f
0000            349   _D0UDIS         BIT 0x98
0000            350   _D1UDIS         BIT 0x99
0000            351   _D2UDIS         BIT 0x9a
0000            352   _D3UDIS         BIT 0x9b
0000            353   _EX0            BIT 0xa8
0000            354   _ET0            BIT 0xa9
0000            355   _EX1            BIT 0xaa
0000            356   _ET1            BIT 0xab
0000            357   _ES0            BIT 0xac
0000            358   _ET2            BIT 0xad
0000            359   _ESPI0          BIT 0xae
0000            360   _EA             BIT 0xaf
0000            361   _PX0            BIT 0xb8
0000            362   _PT0            BIT 0xb9
0000            363   _PX1            BIT 0xba
0000            364   _PT1            BIT 0xbb
0000            365   _PS0            BIT 0xbc
0000            366   _PT2            BIT 0xbd
0000            367   _PSPI0          BIT 0xbe
0000            368   _P0_0           BIT 0x80
0000            369   _P0_1           BIT 0x81
0000            370   _P0_2           BIT 0x82
0000            371   _P0_3           BIT 0x83
0000            372   _P0_4           BIT 0x84
0000            373   _P0_5           BIT 0x85
0000            374   _P0_6           BIT 0x86
0000            375   _P0_7           BIT 0x87
0000            376   _P1_0           BIT 0x90
0000            377   _P1_1           BIT 0x91
0000            378   _P1_2           BIT 0x92
0000            379   _P1_3           BIT 0x93
0000            380   _P1_4           BIT 0x94
0000            381   _P1_5           BIT 0x95
0000            382   _P1_6           BIT 0x96
0000            383   _P1_7           BIT 0x97
0000            384   _P2_0           BIT 0xa0
0000            385   _P2_1           BIT 0xa1
0000            386   _P2_2           BIT 0xa2
0000            387   _P2_3           BIT 0xa3
0000            388   _P2_4           BIT 0xa4
0000            389   _P2_5           BIT 0xa5
0000            390   _P2_6           BIT 0xa6
0000            391   _P3_0           BIT 0xb0
0000            392   _P3_1           BIT 0xb1
0000            393   _P3_2           BIT 0xb2
0000            394   _P3_3           BIT 0xb3
0000            395   _P3_4           BIT 0xb4
0000            396   _P3_7           BIT 0xb7
0000            397   _CCF0           BIT 0xd8
0000            398   _CCF1           BIT 0xd9
0000            399   _CCF2           BIT 0xda
0000            400   _CCF3           BIT 0xdb
0000            401   _CCF4           BIT 0xdc
0000            402   _CCF5           BIT 0xdd
0000            403   _CR             BIT 0xde
0000            404   _CF             BIT 0xdf
0000            405   _PARITY         BIT 0xd0
0000            406   _F1             BIT 0xd1
0000            407   _OV             BIT 0xd2
0000            408   _RS0            BIT 0xd3
0000            409   _RS1            BIT 0xd4
0000            410   _F0             BIT 0xd5
0000            411   _AC             BIT 0xd6
0000            412   _CY             BIT 0xd7
0000            413   _RI             BIT 0x98
0000            414   _TI             BIT 0x99
0000            415   _RB8            BIT 0x9a
0000            416   _TB8            BIT 0x9b
0000            417   _REN            BIT 0x9c
0000            418   _CE             BIT 0x9d
0000            419   _SMODE          BIT 0x9e
0000            420   _RI1            BIT 0xc8
0000            421   _TI1            BIT 0xc9
0000            422   _RBX1           BIT 0xca
0000            423   _TBX1           BIT 0xcb
0000            424   _REN1           BIT 0xcc
0000            425   _PERR1          BIT 0xcd
0000            426   _OVR1           BIT 0xce
0000            427   _SI             BIT 0xc0
0000            428   _ACK            BIT 0xc1
0000            429   _ARBLOST        BIT 0xc2
0000            430   _ACKRQ          BIT 0xc3
0000            431   _STO            BIT 0xc4
0000            432   _STA            BIT 0xc5
0000            433   _TXMODE         BIT 0xc6
0000            434   _MASTER         BIT 0xc7
0000            435   _SPIEN          BIT 0xf8
0000            436   _TXNF           BIT 0xf9
0000            437   _NSSMD0         BIT 0xfa
0000            438   _NSSMD1         BIT 0xfb
0000            439   _RXOVRN         BIT 0xfc
0000            440   _MODF           BIT 0xfd
0000            441   _WCOL           BIT 0xfe
0000            442   _SPIF           BIT 0xff
0000            443   _IT0            BIT 0x88
0000            444   _IE0            BIT 0x89
0000            445   _IT1            BIT 0x8a
0000            446   _IE1            BIT 0x8b
0000            447   _TR0            BIT 0x8c
0000            448   _TF0            BIT 0x8d
0000            449   _TR1            BIT 0x8e
0000            450   _TF1            BIT 0x8f
0000            451   _T2XCLK0        BIT 0xc8
0000            452   _T2XCLK1        BIT 0xc9
0000            453   _TR2            BIT 0xca
0000            454   _T2SPLIT        BIT 0xcb
0000            455   _TF2CEN         BIT 0xcc
0000            456   _TF2LEN         BIT 0xcd
0000            457   _TF2L           BIT 0xce
0000            458   _TF2H           BIT 0xcf
0000            459   _T4XCLK0        BIT 0x98
0000            460   _T4XCLK1        BIT 0x99
0000            461   _TR4            BIT 0x9a
0000            462   _T4SPLIT        BIT 0x9b
0000            463   _TF4CEN         BIT 0x9c
0000            464   _TF4LEN         BIT 0x9d
0000            465   _TF4L           BIT 0x9e
0000            466   _TF4H           BIT 0x9f
0000            467   _T5XCLK0        BIT 0xc0
0000            468   _T5XCLK1        BIT 0xc1
0000            469   _TR5            BIT 0xc2
0000            470   _T5SPLIT        BIT 0xc3
0000            471   _TF5CEN         BIT 0xc4
0000            472   _TF5LEN         BIT 0xc5
0000            473   _TF5L           BIT 0xc6
0000            474   _TF5H           BIT 0xc7
0000            475   _RIE            BIT 0xd8
0000            476   _RXTO0          BIT 0xd9
0000            477   _RXTO1          BIT 0xda
0000            478   _RFRQ           BIT 0xdb
0000            479   _TIE            BIT 0xdc
0000            480   _TXHOLD         BIT 0xdd
0000            481   _TXNF1          BIT 0xde
0000            482   _TFRQ           BIT 0xdf
0000            483   ;--------------------------------------------------------
0000            484   ; overlayable register banks
0000            485   ;--------------------------------------------------------
0000            486            rbank0 segment data overlay
0000            487   ;--------------------------------------------------------
0000            488   ; internal ram data
0000            489   ;--------------------------------------------------------
0000            490            rseg R_DSEG
0000            491   _stepFlag:
0000            492            ds 1
0001            493   _stepCount:
0001            494            ds 2
0003            495   _totalSteps:
0003            496            ds 2
0005            497   _getsn_PARM_2:
0005            498            ds 2
0007            499   _getsn_buff_1_51:
0007            500            ds 3
000A            501   _getsn_sloc0_1_0:
000A            502            ds 2
000C            503   _main_vReadings_1_71:
000C            504            ds 12
0018            505   _main_voltages_1_71:
0018            506            ds 12
0024            507   _main_dir_1_71:
0024            508            ds 4
0028            509   _main_direction_1_71:
0028            510            ds 1
0029            511   _main_measureCount_1_71:
0029            512            ds 2
002B            513   _main_sloc0_1_0:
002B            514            ds 4
002F            515   _main_sloc1_1_0:
002F            516            ds 4
0033            517   ;--------------------------------------------------------
0033            518   ; overlayable items in internal ram 
0033            519   ;--------------------------------------------------------
0000            520            rseg    R_OSEG
0000            521            rseg    R_OSEG
0000            522            rseg    R_OSEG
0000            523   ;--------------------------------------------------------
0000            524   ; indirectly addressable internal ram data
0000            525   ;--------------------------------------------------------
0000            526            rseg R_ISEG
0000            527   ;--------------------------------------------------------
0000            528   ; absolute internal ram data
0000            529   ;--------------------------------------------------------
0000            530            DSEG
0000            531   ;--------------------------------------------------------
0000            532   ; bit data
0000            533   ;--------------------------------------------------------
0000            534            rseg R_BSEG
0000            535   ;--------------------------------------------------------
0000            536   ; paged external ram data
0000            537   ;--------------------------------------------------------
0000            538            rseg R_PSEG
0000            539   ;--------------------------------------------------------
0000            540   ; external ram data
0000            541   ;--------------------------------------------------------
0000            542            rseg R_XSEG
0000            543   ;--------------------------------------------------------
0000            544   ; absolute external ram data
0000            545   ;--------------------------------------------------------
0000            546            XSEG
0000            547   ;--------------------------------------------------------
0000            548   ; external initialized ram data
0000            549   ;--------------------------------------------------------
0000            550            rseg R_IXSEG
0000            551            rseg R_HOME
0000            552            rseg R_GSINIT
0000            553            rseg R_CSEG
0000            554   ;--------------------------------------------------------
0000            555   ; Reset entry point and interrupt vectors
0000            556   ;--------------------------------------------------------
0000            557            CSEG at 0x0000
0000 020100     558            ljmp    _crt0
002B            559            CSEG at 0x002b
002B 020100     560            ljmp    _Timer2_ISR
002E            561   ;--------------------------------------------------------
002E            562   ; global & static initialisations
002E            563   ;--------------------------------------------------------
0000            564            rseg R_HOME
0000            565            rseg R_GSINIT
0000            566            rseg R_GSINIT
0000            567   ;--------------------------------------------------------
0000            568   ; data variables initialization
0000            569   ;--------------------------------------------------------
0000            570            rseg R_DINIT
0000            571   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:32: volatile unsigned char stepFlag = 1;
0000 751801     572            mov     _stepFlag,#0x01
0003            573   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:34: int stepCount = 0;
0003 E4         574            clr     a
0004 F5D8       575            mov     _stepCount,a
0006 F5D9       576            mov     (_stepCount + 1),a
0008            577   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:35: int totalSteps = 0;
0008 E4         578            clr     a
0009 F598       579            mov     _totalSteps,a
000B F599       580            mov     (_totalSteps + 1),a
000D            581            ; The linker places a 'ret' at the end of segment R_DINIT.
000D            582   ;--------------------------------------------------------
000D            583   ; code
000D            584   ;--------------------------------------------------------
0000            585            rseg R_CSEG
0000            586   ;------------------------------------------------------------
0000            587   ;Allocation info for local variables in function '_c51_external_startup'
0000            588   ;------------------------------------------------------------
0000            589   ;------------------------------------------------------------
0000            590   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:37: char _c51_external_startup (void)
0000            591   ;        -----------------------------------------
0000            592   ;         function _c51_external_startup
0000            593   ;        -----------------------------------------
0000            594   __c51_external_startup:
0000            595            using   0
0000            596   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:40: SFRPAGE = 0x00;
0000 75A700     597            mov     _SFRPAGE,#0x00
0003            598   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:41: WDTCN = 0xDE; //First key
0003 7597DE     599            mov     _WDTCN,#0xDE
0006            600   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:42: WDTCN = 0xAD; //Second key
0006 7597AD     601            mov     _WDTCN,#0xAD
0009            602   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:44: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     603            mov     _VDM0CN,#0x80
000C            604   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:45: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     605            mov     _RSTSRC,#0x06
000F            606   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:52: SFRPAGE = 0x10;
000F 75A710     607            mov     _SFRPAGE,#0x10
0012            608   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:53: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     609            mov     _PFE0CN,#0x20
0015            610   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:54: SFRPAGE = 0x00;
0015 75A700     611            mov     _SFRPAGE,#0x00
0018            612   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:75: CLKSEL = 0x00;
0018 75A900     613            mov     _CLKSEL,#0x00
001B            614   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:76: CLKSEL = 0x00;
001B 75A900     615            mov     _CLKSEL,#0x00
001E            616   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:77: while ((CLKSEL & 0x80) == 0);
001E            617   L002001?:
001E E5A9       618            mov     a,_CLKSEL
0020 30E7C8     619            jnb     acc.7,L002001?
0023            620   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:78: CLKSEL = 0x03;
0023 75A903     621            mov     _CLKSEL,#0x03
0026            622   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:79: CLKSEL = 0x03;
0026 75A903     623            mov     _CLKSEL,#0x03
0029            624   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:80: while ((CLKSEL & 0x80) == 0);
0029            625   L002004?:
0029 E5A9       626            mov     a,_CLKSEL
002B 30E748     627            jnb     acc.7,L002004?
002E            628   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:85: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     629            orl     _P0MDOUT,#0x10
0031            630   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:86: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)  
0031 75E101     631            mov     _XBR0,#0x01
0034            632   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:89: XBR1     = 0X02; //Enable PCA I/O and route CEX0 and CEX1 only (check reference manual page 120)
0034 75E202     633            mov     _XBR1,#0x02
0037            634   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:91: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     635            mov     _XBR2,#0x40
003A            636   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:97: SCON0 = 0x10;
003A 759810     637            mov     _SCON0,#0x10
003D            638   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:98: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     639            mov     _TH1,#0xE6
0040            640   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:99: TL1 = TH1;      // Init Timer1
0040 858D8B     641            mov     _TL1,_TH1
0043            642   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:100: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     643            anl     _TMOD,#0x0F
0046            644   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:101: TMOD |=  0x20;                       
0046 438920     645            orl     _TMOD,#0x20
0049            646   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:102: TR1 = 1; // START Timer1
0049 D28E       647            setb    _TR1
004B            648   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:103: TI = 1;  // Indicate TX0 ready
004B D299       649            setb    _TI
004D            650   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:106: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
004D 75C800     651            mov     _TMR2CN0,#0x00
0050            652   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:107: CKCON0|=0b_0001_0000; // Timer 2 uses the system clock
0050 438E10     653            orl     _CKCON0,#0x10
0053            654   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:108: TMR2RL=(0x10000L-(SYSCLK/(2*TIMER_2_FREQ))); // Initialize reload value
0053 75CAC0     655            mov     _TMR2RL,#0xC0
0056 75CBE6     656            mov     (_TMR2RL >> 8),#0xE6
0059            657   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:109: TMR2=0xffff;   // Set to reload immediately
0059 75CEFF     658            mov     _TMR2,#0xFF
005C 75CFFF     659            mov     (_TMR2 >> 8),#0xFF
005F            660   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:110: ET2=1;         // Enable Timer2 interrupts
005F D2AD       661            setb    _ET2
0061            662   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:111: TR2=1;         // Start Timer2 (TMR2CN is bit addressable)
0061 D2CA       663            setb    _TR2
0063            664   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:113: EA=1; // Enable interrupts
0063 D2AF       665            setb    _EA
0065            666   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:115: return 0;
0065 758200     667            mov     dpl,#0x00
0068 22         668            ret
0069            669   ;------------------------------------------------------------
0069            670   ;Allocation info for local variables in function 'Timer3us'
0069            671   ;------------------------------------------------------------
0069            672   ;us                        Allocated to registers r2 
0069            673   ;i                         Allocated to registers r3 
0069            674   ;------------------------------------------------------------
0069            675   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:119: void Timer3us(unsigned char us)
0069            676   ;        -----------------------------------------
0069            677   ;         function Timer3us
0069            678   ;        -----------------------------------------
0069            679   _Timer3us:
0069 AA82       680            mov     r2,dpl
006B            681   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:124: CKCON0|=0b_0100_0000;
006B 438E40     682            orl     _CKCON0,#0x40
006E            683   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:126: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
006E 7592B8     684            mov     _TMR3RL,#0xB8
0071 7593FF     685            mov     (_TMR3RL >> 8),#0xFF
0074            686   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:127: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0074 859294     687            mov     _TMR3,_TMR3RL
0077 859395     688            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007A            689   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:129: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007A 759104     690            mov     _TMR3CN0,#0x04
007D            691   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:130: for (i = 0; i < us; i++)       // Count <us> overflows
007D 7B00       692            mov     r3,#0x00
007F            693   L003004?:
007F C3         694            clr     c
0080 EB         695            mov     a,r3
0081 9A         696            subb    a,r2
0082 5001       697            jnc     L003007?
0084            698   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:132: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0084            699   L003001?:
0084 E591       700            mov     a,_TMR3CN0
0086 30E748     701            jnb     acc.7,L003001?
0089            702   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:133: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
0089 53917F     703            anl     _TMR3CN0,#0x7F
008C            704   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:130: for (i = 0; i < us; i++)       // Count <us> overflows
008C 0B         705            inc     r3
008D 8001       706            sjmp    L003004?
008F            707   L003007?:
008F            708   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:135: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
008F 759100     709            mov     _TMR3CN0,#0x00
0092 22         710            ret
0093            711   ;------------------------------------------------------------
0093            712   ;Allocation info for local variables in function 'Timer2_ISR'
0093            713   ;------------------------------------------------------------
0093            714   ;------------------------------------------------------------
0093            715   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:139: void Timer2_ISR (void) interrupt INTERRUPT_TIMER2
0093            716   ;        -----------------------------------------
0093            717   ;         function Timer2_ISR
0093            718   ;        -----------------------------------------
0093            719   _Timer2_ISR:
0093            720   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:141: SFRPAGE=0x0;
0093 75A700     721            mov     _SFRPAGE,#0x00
0096            722   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:142: TF2H = 0; // Clear Timer2 interrupt flag
0096 C2CF       723            clr     _TF2H
0098            724   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:145: stepFlag = 1;
0098 751801     725            mov     _stepFlag,#0x01
009B 32         726            reti
009C            727   ;        eliminated unneeded push/pop psw
009C            728   ;        eliminated unneeded push/pop dpl
009C            729   ;        eliminated unneeded push/pop dph
009C            730   ;        eliminated unneeded push/pop b
009C            731   ;        eliminated unneeded push/pop acc
009C            732   ;------------------------------------------------------------
009C            733   ;Allocation info for local variables in function 'waitms'
009C            734   ;------------------------------------------------------------
009C            735   ;ms                        Allocated to registers r2 r3 
009C            736   ;j                         Allocated to registers r4 r5 
009C            737   ;k                         Allocated to registers r6 
009C            738   ;------------------------------------------------------------
009C            739   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:148: void waitms (unsigned int ms)
009C            740   ;        -----------------------------------------
009C            741   ;         function waitms
009C            742   ;        -----------------------------------------
009C            743   _waitms:
009C AA82       744            mov     r2,dpl
009E AB83       745            mov     r3,dph
00A0            746   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:152: for(j=0; j<ms; j++)
00A0 7C00       747            mov     r4,#0x00
00A2 7D00       748            mov     r5,#0x00
00A4            749   L005005?:
00A4 C3         750            clr     c
00A5 EC         751            mov     a,r4
00A6 9A         752            subb    a,r2
00A7 ED         753            mov     a,r5
00A8 9B         754            subb    a,r3
00A9 5001       755            jnc     L005009?
00AB            756   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:153: for (k=0; k<4; k++) Timer3us(250);
00AB 7E00       757            mov     r6,#0x00
00AD            758   L005001?:
00AD BE0488     759            cjne    r6,#0x04,L005018?
00B0            760   L005018?:
00B0 5001       761            jnc     L005007?
00B2 7582FA     762            mov     dpl,#0xFA
00B5 C002       763            push    ar2
00B7 C003       764            push    ar3
00B9 C004       765            push    ar4
00BB C005       766            push    ar5
00BD C006       767            push    ar6
00BF 120100     768            lcall   _Timer3us
00C2 D006       769            pop     ar6
00C4 D005       770            pop     ar5
00C6 D004       771            pop     ar4
00C8 D003       772            pop     ar3
00CA D002       773            pop     ar2
00CC 0E         774            inc     r6
00CD 8001       775            sjmp    L005001?
00CF            776   L005007?:
00CF            777   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:152: for(j=0; j<ms; j++)
00CF 0C         778            inc     r4
00D0 BC00C8     779            cjne    r4,#0x00,L005005?
00D3 0D         780            inc     r5
00D4 8001       781            sjmp    L005005?
00D6            782   L005009?:
00D6 22         783            ret
00D7            784   ;------------------------------------------------------------
00D7            785   ;Allocation info for local variables in function 'getsn'
00D7            786   ;------------------------------------------------------------
00D7            787   ;len                       Allocated with name '_getsn_PARM_2'
00D7            788   ;buff                      Allocated with name '_getsn_buff_1_51'
00D7            789   ;j                         Allocated with name '_getsn_sloc0_1_0'
00D7            790   ;c                         Allocated to registers r3 
00D7            791   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
00D7            792   ;------------------------------------------------------------
00D7            793   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:156: int getsn (char * buff, int len)
00D7            794   ;        -----------------------------------------
00D7            795   ;         function getsn
00D7            796   ;        -----------------------------------------
00D7            797   _getsn:
00D7 8582F8     798            mov     _getsn_buff_1_51,dpl
00DA 8583F9     799            mov     (_getsn_buff_1_51 + 1),dph
00DD 85F0FA     800            mov     (_getsn_buff_1_51 + 2),b
00E0            801   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:161: for(j=0; j<(len-1); j++)
00E0 E4         802            clr     a
00E1 F548       803            mov     _getsn_sloc0_1_0,a
00E3 F549       804            mov     (_getsn_sloc0_1_0 + 1),a
00E5 E558       805            mov     a,_getsn_PARM_2
00E7 24FF       806            add     a,#0xff
00E9 FF         807            mov     r7,a
00EA E559       808            mov     a,(_getsn_PARM_2 + 1)
00EC 34FF       809            addc    a,#0xff
00EE F8         810            mov     r0,a
00EF 7900       811            mov     r1,#0x00
00F1 7A00       812            mov     r2,#0x00
00F3            813   L006005?:
00F3 C3         814            clr     c
00F4 E9         815            mov     a,r1
00F5 9F         816            subb    a,r7
00F6 EA         817            mov     a,r2
00F7 6480       818            xrl     a,#0x80
00F9 88F0       819            mov     b,r0
00FB 63F080     820            xrl     b,#0x80
00FE 95F0       821            subb    a,b
0100 5001       822            jnc     L006008?
0102            823   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:163: c=getchar();
0102 C002       824            push    ar2
0104 C007       825            push    ar7
0106 C000       826            push    ar0
0108 C001       827            push    ar1
010A 120100     828            lcall   _getchar
010D AB82       829            mov     r3,dpl
010F D001       830            pop     ar1
0111 D000       831            pop     ar0
0113 D007       832            pop     ar7
0115 D002       833            pop     ar2
0117            834   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:164: if ( (c=='\n') || (c=='\r') )
0117 BB0A08     835            cjne    r3,#0x0A,L006015?
011A 8001       836            sjmp    L006001?
011C            837   L006015?:
011C BB0D88     838            cjne    r3,#0x0D,L006002?
011F            839   L006001?:
011F            840   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:166: buff[j]=0;
011F E548       841            mov     a,_getsn_sloc0_1_0
0121 25F8       842            add     a,_getsn_buff_1_51
0123 FC         843            mov     r4,a
0124 E549       844            mov     a,(_getsn_sloc0_1_0 + 1)
0126 35F9       845            addc    a,(_getsn_buff_1_51 + 1)
0128 FD         846            mov     r5,a
0129 AEFA       847            mov     r6,(_getsn_buff_1_51 + 2)
012B 8C82       848            mov     dpl,r4
012D 8D83       849            mov     dph,r5
012F 8EF0       850            mov     b,r6
0131 E4         851            clr     a
0132 120100     852            lcall   __gptrput
0135            853   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:167: return j;
0135 854882     854            mov     dpl,_getsn_sloc0_1_0
0138 854983     855            mov     dph,(_getsn_sloc0_1_0 + 1)
013B 22         856            ret
013C            857   L006002?:
013C            858   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:171: buff[j]=c;
013C E9         859            mov     a,r1
013D 25F8       860            add     a,_getsn_buff_1_51
013F FC         861            mov     r4,a
0140 EA         862            mov     a,r2
0141 35F9       863            addc    a,(_getsn_buff_1_51 + 1)
0143 FD         864            mov     r5,a
0144 AEFA       865            mov     r6,(_getsn_buff_1_51 + 2)
0146 8C82       866            mov     dpl,r4
0148 8D83       867            mov     dph,r5
014A 8EF0       868            mov     b,r6
014C EB         869            mov     a,r3
014D 120100     870            lcall   __gptrput
0150            871   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:161: for(j=0; j<(len-1); j++)
0150 09         872            inc     r1
0151 B90008     873            cjne    r1,#0x00,L006018?
0154 0A         874            inc     r2
0155            875   L006018?:
0155 8948       876            mov     _getsn_sloc0_1_0,r1
0157 8A49       877            mov     (_getsn_sloc0_1_0 + 1),r2
0159 8001       878            sjmp    L006005?
015B            879   L006008?:
015B            880   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:174: buff[j]=0;
015B E548       881            mov     a,_getsn_sloc0_1_0
015D 25F8       882            add     a,_getsn_buff_1_51
015F FA         883            mov     r2,a
0160 E549       884            mov     a,(_getsn_sloc0_1_0 + 1)
0162 35F9       885            addc    a,(_getsn_buff_1_51 + 1)
0164 FB         886            mov     r3,a
0165 ACFA       887            mov     r4,(_getsn_buff_1_51 + 2)
0167 8A82       888            mov     dpl,r2
0169 8B83       889            mov     dph,r3
016B 8CF0       890            mov     b,r4
016D E4         891            clr     a
016E 120100     892            lcall   __gptrput
0171            893   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:175: return len;
0171 855882     894            mov     dpl,_getsn_PARM_2
0174 855983     895            mov     dph,(_getsn_PARM_2 + 1)
0177 22         896            ret
0178            897   ;------------------------------------------------------------
0178            898   ;Allocation info for local variables in function 'InitADC'
0178            899   ;------------------------------------------------------------
0178            900   ;------------------------------------------------------------
0178            901   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:178: void InitADC (void)
0178            902   ;        -----------------------------------------
0178            903   ;         function InitADC
0178            904   ;        -----------------------------------------
0178            905   _InitADC:
0178            906   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:180: SFRPAGE = 0x00;
0178 75A700     907            mov     _SFRPAGE,#0x00
017B            908   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:181: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
017B 75B280     909            mov     _ADC0CN1,#0x80
017E            910   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:182: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
017E 75BCF8     911            mov     _ADC0CF0,#0xF8
0181            912   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:183: ADC0CF1 = 0b_0_0_011110; // Same as default for now
0181 75B91E     913            mov     _ADC0CF1,#0x1E
0184            914   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:184: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
0184 75E800     915            mov     _ADC0CN0,#0x00
0187            916   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:185: ADC0CF2 = 0b_0_01_11111 ; // GND pin, Vref=VDD
0187 75DF3F     917            mov     _ADC0CF2,#0x3F
018A            918   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:186: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
018A 75B300     919            mov     _ADC0CN2,#0x00
018D            920   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:187: ADEN=1; // Enable ADC
018D D2EF       921            setb    _ADEN
018F 22         922            ret
0190            923   ;------------------------------------------------------------
0190            924   ;Allocation info for local variables in function 'ADC_at_Pin'
0190            925   ;------------------------------------------------------------
0190            926   ;pin                       Allocated to registers 
0190            927   ;------------------------------------------------------------
0190            928   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:190: unsigned int ADC_at_Pin(unsigned char pin)
0190            929   ;        -----------------------------------------
0190            930   ;         function ADC_at_Pin
0190            931   ;        -----------------------------------------
0190            932   _ADC_at_Pin:
0190 8582BB     933            mov     _ADC0MX,dpl
0193            934   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:193: ADBUSY=1;       // Dummy conversion first to select new pin
0193 D2EC       935            setb    _ADBUSY
0195            936   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:194: while (ADBUSY); // Wait for dummy conversion to finish
0195            937   L008001?:
0195 20EC48     938            jb      _ADBUSY,L008001?
0198            939   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:195: ADBUSY = 1;     // Convert voltage at the pin
0198 D2EC       940            setb    _ADBUSY
019A            941   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:196: while (ADBUSY); // Wait for conversion to complete
019A            942   L008004?:
019A 20EC88     943            jb      _ADBUSY,L008004?
019D            944   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:197: return (ADC0);
019D 85BD82     945            mov     dpl,_ADC0
01A0 85BE83     946            mov     dph,(_ADC0 >> 8)
01A3 22         947            ret
01A4            948   ;------------------------------------------------------------
01A4            949   ;Allocation info for local variables in function 'Volts_at_Pin'
01A4            950   ;------------------------------------------------------------
01A4            951   ;pin                       Allocated to registers r2 
01A4            952   ;------------------------------------------------------------
01A4            953   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:200: float Volts_at_Pin(unsigned char pin)
01A4            954   ;        -----------------------------------------
01A4            955   ;         function Volts_at_Pin
01A4            956   ;        -----------------------------------------
01A4            957   _Volts_at_Pin:
01A4            958   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:202: return ((ADC_at_Pin(pin)*VDD)/16383.0);
01A4 120100     959            lcall   _ADC_at_Pin
01A7 120100     960            lcall   ___uint2fs
01AA AA82       961            mov     r2,dpl
01AC AB83       962            mov     r3,dph
01AE ACF0       963            mov     r4,b
01B0 FD         964            mov     r5,a
01B1 C002       965            push    ar2
01B3 C003       966            push    ar3
01B5 C004       967            push    ar4
01B7 C005       968            push    ar5
01B9 909FBE     969            mov     dptr,#0x9FBE
01BC 75F052     970            mov     b,#0x52
01BF 7440       971            mov     a,#0x40
01C1 120100     972            lcall   ___fsmul
01C4 AA82       973            mov     r2,dpl
01C6 AB83       974            mov     r3,dph
01C8 ACF0       975            mov     r4,b
01CA FD         976            mov     r5,a
01CB E581       977            mov     a,sp
01CD 24FC       978            add     a,#0xfc
01CF F581       979            mov     sp,a
01D1 E4         980            clr     a
01D2 C0E0       981            push    acc
01D4 74FC       982            mov     a,#0xFC
01D6 C0E0       983            push    acc
01D8 747F       984            mov     a,#0x7F
01DA C0E0       985            push    acc
01DC 7446       986            mov     a,#0x46
01DE C0E0       987            push    acc
01E0 8A82       988            mov     dpl,r2
01E2 8B83       989            mov     dph,r3
01E4 8CF0       990            mov     b,r4
01E6 ED         991            mov     a,r5
01E7 120100     992            lcall   ___fsdiv
01EA AA82       993            mov     r2,dpl
01EC AB83       994            mov     r3,dph
01EE ACF0       995            mov     r4,b
01F0 FD         996            mov     r5,a
01F1 E581       997            mov     a,sp
01F3 24FC       998            add     a,#0xfc
01F5 F581       999            mov     sp,a
01F7 8A82      1000            mov     dpl,r2
01F9 8B83      1001            mov     dph,r3
01FB 8CF0      1002            mov     b,r4
01FD ED        1003            mov     a,r5
01FE 22        1004            ret
01FF           1005   ;------------------------------------------------------------
01FF           1006   ;Allocation info for local variables in function 'ConfigPCA0'
01FF           1007   ;------------------------------------------------------------
01FF           1008   ;------------------------------------------------------------
01FF           1009   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:205: void ConfigPCA0()
01FF           1010   ;        -----------------------------------------
01FF           1011   ;         function ConfigPCA0
01FF           1012   ;        -----------------------------------------
01FF           1013   _ConfigPCA0:
01FF           1014   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:207: SFRPAGE = 0x00; //Navigate to SFR page for register write
01FF 75A700    1015            mov     _SFRPAGE,#0x00
0202           1016   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:209: PCA0POL = 0b_0000_0000; //Set the output polarity for all channels to default (no inversion)
0202 759600    1017            mov     _PCA0POL,#0x00
0205           1018   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:211: PCA0MD = 0b_0000_0000; //Set PCA mode to operate even in idle mode with SYSCLK/12
0205 75D900    1019            mov     _PCA0MD,#0x00
0208           1020   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:212: PCA0PWM = 0b_0000_0000;        //Enable 8-bit PWM with no overflow flag set and no interrupts enabled
0208 75F700    1021            mov     _PCA0PWM,#0x00
020B           1022   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:213: PCA0CLR = 0b_0000_0000; //Disable comparator clear for all modules
020B 759C00    1023            mov     _PCA0CLR,#0x00
020E           1024   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:214: PCA0CENT = 0b_0000_0000; //Set all modules to edge aligned mode
020E 759E00    1025            mov     _PCA0CENT,#0x00
0211           1026   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:216: PCA0CN0 = 0b_0100_0000; //Start the PCA counter/timer (CR bit)         
0211 75D840    1027            mov     _PCA0CN0,#0x40
0214           1028   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:219: PCA0CPM0 = 0b_0100_0010;//Configure Channel 0 to function in 8-bit PWM mode
0214 75DA42    1029            mov     _PCA0CPM0,#0x42
0217           1030   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:220: PCA0CPH0 = 0b_0100_0000; //Load the PCA0CP0 high byte with an initial value of 128(binary 1000_0000)
0217 75FC40    1031            mov     _PCA0CPH0,#0x40
021A           1032   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:223: PCA0CPM1 = 0b_0100_0010; //Configure Channel 1 to function in 8-bit PWM mode
021A 75DB42    1033            mov     _PCA0CPM1,#0x42
021D           1034   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:224: PCA0CPH1 = 0b_1000_0000; //Load the PCA0CP1 high byte
021D 75EA80    1035            mov     _PCA0CPH1,#0x80
0220 22        1036            ret
0221           1037   ;------------------------------------------------------------
0221           1038   ;Allocation info for local variables in function 'takeStep'
0221           1039   ;------------------------------------------------------------
0221           1040   ;instr                     Allocated to registers r2 
0221           1041   ;------------------------------------------------------------
0221           1042   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:228: void takeStep(char instr)
0221           1043   ;        -----------------------------------------
0221           1044   ;         function takeStep
0221           1045   ;        -----------------------------------------
0221           1046   _takeStep:
0221 AA82      1047            mov     r2,dpl
0223           1048   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:230: if(instr == 'F') //If the instruction is to move forward...
0223 BA46C8    1049            cjne    r2,#0x46,L011012?
0226           1050   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:232: switch(stepCount)
0226 E4        1051            clr     a
0227 B5D808    1052            cjne    a,_stepCount,L011030?
022A E4        1053            clr     a
022B B5D908    1054            cjne    a,(_stepCount + 1),L011030?
022E 8001      1055            sjmp    L011001?
0230           1056   L011030?:
0230 7401      1057            mov     a,#0x01
0232 B5D888    1058            cjne    a,_stepCount,L011031?
0235 E4        1059            clr     a
0236 B5D988    1060            cjne    a,(_stepCount + 1),L011031?
0239 8001      1061            sjmp    L011002?
023B           1062   L011031?:
023B 7402      1063            mov     a,#0x02
023D B5D808    1064            cjne    a,_stepCount,L011032?
0240 E4        1065            clr     a
0241 B5D908    1066            cjne    a,(_stepCount + 1),L011032?
0244 8001      1067            sjmp    L011003?
0246           1068   L011032?:
0246 7403      1069            mov     a,#0x03
0248 B5D888    1070            cjne    a,_stepCount,L011033?
024B E4        1071            clr     a
024C B5D988    1072            cjne    a,(_stepCount + 1),L011033?
024F 8001      1073            sjmp    L011004?
0251           1074   L011033?:
0251 020100    1075            ljmp    L011013?
0254           1076   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:234: case 0: //Step 0
0254           1077   L011001?:
0254           1078   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:235: PORT1 = 1;
0254 D2A1      1079            setb    _P2_1
0256           1080   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:236: PORT2 = 1;
0256 D2A2      1081            setb    _P2_2
0258           1082   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:237: PORT3 = 0;
0258 C2A3      1083            clr     _P2_3
025A           1084   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:238: PORT4 = 0;
025A C2A4      1085            clr     _P2_4
025C           1086   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:239: break;
025C           1087   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:241: case 1: //Step 1
025C 8001      1088            sjmp    L011013?
025E           1089   L011002?:
025E           1090   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:242: PORT1 = 0;
025E C2A1      1091            clr     _P2_1
0260           1092   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:243: PORT2 = 1;
0260 D2A2      1093            setb    _P2_2
0262           1094   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:244: PORT3 = 1;
0262 D2A3      1095            setb    _P2_3
0264           1096   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:245: PORT4 = 0;
0264 C2A4      1097            clr     _P2_4
0266           1098   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:246: break;
0266           1099   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:248: case 2: //Step 2
0266 8001      1100            sjmp    L011013?
0268           1101   L011003?:
0268           1102   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:249: PORT1 = 0;
0268 C2A1      1103            clr     _P2_1
026A           1104   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:250: PORT2 = 0;
026A C2A2      1105            clr     _P2_2
026C           1106   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:251: PORT3 = 1;
026C D2A3      1107            setb    _P2_3
026E           1108   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:252: PORT4 = 1;
026E D2A4      1109            setb    _P2_4
0270           1110   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:253: break;
0270           1111   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:255: case 3: //Step 3
0270 8001      1112            sjmp    L011013?
0272           1113   L011004?:
0272           1114   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:256: PORT1 = 1;
0272 D2A1      1115            setb    _P2_1
0274           1116   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:257: PORT2 = 0;
0274 C2A2      1117            clr     _P2_2
0276           1118   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:258: PORT3 = 0;
0276 C2A3      1119            clr     _P2_3
0278           1120   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:259: PORT4 = 1;
0278 D2A4      1121            setb    _P2_4
027A           1122   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:261: }
027A 8001      1123            sjmp    L011013?
027C           1124   L011012?:
027C           1125   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:265: switch(stepCount)
027C E4        1126            clr     a
027D B5D848    1127            cjne    a,_stepCount,L011034?
0280 E4        1128            clr     a
0281 B5D948    1129            cjne    a,(_stepCount + 1),L011034?
0284 8001      1130            sjmp    L011006?
0286           1131   L011034?:
0286 7401      1132            mov     a,#0x01
0288 B5D8C8    1133            cjne    a,_stepCount,L011035?
028B E4        1134            clr     a
028C B5D9C8    1135            cjne    a,(_stepCount + 1),L011035?
028F 8001      1136            sjmp    L011007?
0291           1137   L011035?:
0291 7402      1138            mov     a,#0x02
0293 B5D848    1139            cjne    a,_stepCount,L011036?
0296 E4        1140            clr     a
0297 B5D948    1141            cjne    a,(_stepCount + 1),L011036?
029A 8001      1142            sjmp    L011008?
029C           1143   L011036?:
029C 7403      1144            mov     a,#0x03
029E B5D8C8    1145            cjne    a,_stepCount,L011037?
02A1 E4        1146            clr     a
02A2 B5D9C8    1147            cjne    a,(_stepCount + 1),L011037?
02A5 8001      1148            sjmp    L011009?
02A7           1149   L011037?:
02A7           1150   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:267: case 0: //Step 0
02A7 8001      1151            sjmp    L011013?
02A9           1152   L011006?:
02A9           1153   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:268: PORT1 = 1;
02A9 D2A1      1154            setb    _P2_1
02AB           1155   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:269: PORT2 = 0;
02AB C2A2      1156            clr     _P2_2
02AD           1157   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:270: PORT3 = 0;
02AD C2A3      1158            clr     _P2_3
02AF           1159   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:271: PORT4 = 1;
02AF D2A4      1160            setb    _P2_4
02B1           1161   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:272: break;
02B1           1162   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:274: case 1: //Step 1
02B1 8001      1163            sjmp    L011013?
02B3           1164   L011007?:
02B3           1165   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:275: PORT1 = 0;
02B3 C2A1      1166            clr     _P2_1
02B5           1167   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:276: PORT2 = 0;
02B5 C2A2      1168            clr     _P2_2
02B7           1169   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:277: PORT3 = 1;
02B7 D2A3      1170            setb    _P2_3
02B9           1171   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:278: PORT4 = 1;
02B9 D2A4      1172            setb    _P2_4
02BB           1173   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:279: break;
02BB           1174   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:281: case 2: //Step 2
02BB 8001      1175            sjmp    L011013?
02BD           1176   L011008?:
02BD           1177   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:282: PORT1 = 0;
02BD C2A1      1178            clr     _P2_1
02BF           1179   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:283: PORT2 = 1;
02BF D2A2      1180            setb    _P2_2
02C1           1181   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:284: PORT3 = 1;
02C1 D2A3      1182            setb    _P2_3
02C3           1183   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:285: PORT4 = 0;
02C3 C2A4      1184            clr     _P2_4
02C5           1185   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:286: break;
02C5           1186   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:288: case 3: //Step 3
02C5 8001      1187            sjmp    L011013?
02C7           1188   L011009?:
02C7           1189   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:289: PORT1 = 1;
02C7 D2A1      1190            setb    _P2_1
02C9           1191   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:290: PORT2 = 1;
02C9 D2A2      1192            setb    _P2_2
02CB           1193   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:291: PORT3 = 0;
02CB C2A3      1194            clr     _P2_3
02CD           1195   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:292: PORT4 = 0;
02CD C2A4      1196            clr     _P2_4
02CF           1197   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:294: }
02CF           1198   L011013?:
02CF           1199   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:296: stepCount++;
02CF 05D8      1200            inc     _stepCount
02D1 E4        1201            clr     a
02D2 B5D848    1202            cjne    a,_stepCount,L011038?
02D5 05D9      1203            inc     (_stepCount + 1)
02D7           1204   L011038?:
02D7           1205   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:297: totalSteps++;
02D7 0598      1206            inc     _totalSteps
02D9 E4        1207            clr     a
02DA B59888    1208            cjne    a,_totalSteps,L011039?
02DD 0599      1209            inc     (_totalSteps + 1)
02DF           1210   L011039?:
02DF           1211   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:298: if(stepCount > 3)
02DF C3        1212            clr     c
02E0 7403      1213            mov     a,#0x03
02E2 95D8      1214            subb    a,_stepCount
02E4 E4        1215            clr     a
02E5 6480      1216            xrl     a,#0x80
02E7 85D9F0    1217            mov     b,(_stepCount + 1)
02EA 63F080    1218            xrl     b,#0x80
02ED 95F0      1219            subb    a,b
02EF 5001      1220            jnc     L011016?
02F1           1221   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:299: stepCount = 0;
02F1 E4        1222            clr     a
02F2 F5D8      1223            mov     _stepCount,a
02F4 F5D9      1224            mov     (_stepCount + 1),a
02F6           1225   L011016?:
02F6 22        1226            ret
02F7           1227   ;------------------------------------------------------------
02F7           1228   ;Allocation info for local variables in function 'ConfigurePins'
02F7           1229   ;------------------------------------------------------------
02F7           1230   ;------------------------------------------------------------
02F7           1231   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:302: void ConfigurePins()
02F7           1232   ;        -----------------------------------------
02F7           1233   ;         function ConfigurePins
02F7           1234   ;        -----------------------------------------
02F7           1235   _ConfigurePins:
02F7           1236   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:304: P0SKIP |= 0b_1100_1111; //Skip all P0 bits except bits 4 and 5 (UART0)
02F7 43D4CF    1237            orl     _P0SKIP,#0xCF
02FA           1238   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:306: SFRPAGE = 0x20;
02FA 75A720    1239            mov     _SFRPAGE,#0x20
02FD           1240   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:308: P1MDIN &= 0b_1000_1111; //Set P1 bits 4,5,6 to analog input for ADC
02FD 53F28F    1241            anl     _P1MDIN,#0x8F
0300           1242   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:310: SFRPAGE = 0x00;
0300 75A700    1243            mov     _SFRPAGE,#0x00
0303           1244   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:312: P1SKIP |= 0b_0111_1111; //Skip all P1 bits except bit 7
0303 43D57F    1245            orl     _P1SKIP,#0x7F
0306           1246   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:314: P2MDOUT |= 0b_0111_1111; //Set P2 bits 0, 1, 2, 3, 4, 5 to push-pull output mode
0306 43A67F    1247            orl     _P2MDOUT,#0x7F
0309           1248   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:315: P1MDOUT |= 0b_1000_0000; //Set P1 bit 7 to push-pull output mode       
0309 43A580    1249            orl     _P1MDOUT,#0x80
030C 22        1250            ret
030D           1251   ;------------------------------------------------------------
030D           1252   ;Allocation info for local variables in function 'main'
030D           1253   ;------------------------------------------------------------
030D           1254   ;vReadings                 Allocated with name '_main_vReadings_1_71'
030D           1255   ;voltages                  Allocated with name '_main_voltages_1_71'
030D           1256   ;dir                       Allocated with name '_main_dir_1_71'
030D           1257   ;direction                 Allocated with name '_main_direction_1_71'
030D           1258   ;measureCount              Allocated with name '_main_measureCount_1_71'
030D           1259   ;totalMeasurements         Allocated to registers 
030D           1260   ;sloc0                     Allocated with name '_main_sloc0_1_0'
030D           1261   ;sloc1                     Allocated with name '_main_sloc1_1_0'
030D           1262   ;------------------------------------------------------------
030D           1263   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:318: void main (void) 
030D           1264   ;        -----------------------------------------
030D           1265   ;         function main
030D           1266   ;        -----------------------------------------
030D           1267   _main:
030D           1268   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:330: int measureCount = 0;
030D E4        1269            clr     a
030E F5C8      1270            mov     _main_measureCount_1_71,a
0310 F5C9      1271            mov     (_main_measureCount_1_71 + 1),a
0312           1272   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:333: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0312 7408      1273            mov     a,#__str_0
0314 C0E0      1274            push    acc
0316 74C7      1275            mov     a,#(__str_0 >> 8)
0318 C0E0      1276            push    acc
031A 7480      1277            mov     a,#0x80
031C C0E0      1278            push    acc
031E 120100    1279            lcall   _printf
0321 1581      1280            dec     sp
0323 1581      1281            dec     sp
0325 1581      1282            dec     sp
0327           1283   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:338: __FILE__, __DATE__, __TIME__);
0327           1284   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:337: "Compiled: %s, %s\n\n",
0327 7488      1285            mov     a,#__str_4
0329 C0E0      1286            push    acc
032B 74C7      1287            mov     a,#(__str_4 >> 8)
032D C0E0      1288            push    acc
032F 7480      1289            mov     a,#0x80
0331 C0E0      1290            push    acc
0333 74C8      1291            mov     a,#__str_3
0335 C0E0      1292            push    acc
0337 74C7      1293            mov     a,#(__str_3 >> 8)
0339 C0E0      1294            push    acc
033B 7480      1295            mov     a,#0x80
033D C0E0      1296            push    acc
033F 7408      1297            mov     a,#__str_2
0341 C0E0      1298            push    acc
0343 74C8      1299            mov     a,#(__str_2 >> 8)
0345 C0E0      1300            push    acc
0347 7480      1301            mov     a,#0x80
0349 C0E0      1302            push    acc
034B 7448      1303            mov     a,#__str_1
034D C0E0      1304            push    acc
034F 74C8      1305            mov     a,#(__str_1 >> 8)
0351 C0E0      1306            push    acc
0353 7480      1307            mov     a,#0x80
0355 C0E0      1308            push    acc
0357 120100    1309            lcall   _printf
035A E581      1310            mov     a,sp
035C 24F4      1311            add     a,#0xf4
035E F581      1312            mov     sp,a
0360           1313   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:341: ConfigurePins();
0360 120100    1314            lcall   _ConfigurePins
0363           1315   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:342: printf("Pin configuration done.\n");
0363 7488      1316            mov     a,#__str_5
0365 C0E0      1317            push    acc
0367 74C8      1318            mov     a,#(__str_5 >> 8)
0369 C0E0      1319            push    acc
036B 7480      1320            mov     a,#0x80
036D C0E0      1321            push    acc
036F 120100    1322            lcall   _printf
0372 1581      1323            dec     sp
0374 1581      1324            dec     sp
0376 1581      1325            dec     sp
0378           1326   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:344: ConfigPCA0();
0378 120100    1327            lcall   _ConfigPCA0
037B           1328   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:345: printf("PCA configuration done.\n");
037B 74C8      1329            mov     a,#__str_6
037D C0E0      1330            push    acc
037F 74C8      1331            mov     a,#(__str_6 >> 8)
0381 C0E0      1332            push    acc
0383 7480      1333            mov     a,#0x80
0385 C0E0      1334            push    acc
0387 120100    1335            lcall   _printf
038A 1581      1336            dec     sp
038C 1581      1337            dec     sp
038E 1581      1338            dec     sp
0390           1339   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:347: InitADC();
0390 120100    1340            lcall   _InitADC
0393           1341   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:348: printf("ADC configuration done.\n");
0393 7408      1342            mov     a,#__str_7
0395 C0E0      1343            push    acc
0397 74C9      1344            mov     a,#(__str_7 >> 8)
0399 C0E0      1345            push    acc
039B 7480      1346            mov     a,#0x80
039D C0E0      1347            push    acc
039F 120100    1348            lcall   _printf
03A2 1581      1349            dec     sp
03A4 1581      1350            dec     sp
03A6 1581      1351            dec     sp
03A8           1352   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:350: printf("\n");
03A8 7448      1353            mov     a,#__str_8
03AA C0E0      1354            push    acc
03AC 74C9      1355            mov     a,#(__str_8 >> 8)
03AE C0E0      1356            push    acc
03B0 7480      1357            mov     a,#0x80
03B2 C0E0      1358            push    acc
03B4 120100    1359            lcall   _printf
03B7 1581      1360            dec     sp
03B9 1581      1361            dec     sp
03BB 1581      1362            dec     sp
03BD           1363   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:352: printf("Enter direction of rotation:\n");
03BD 7488      1364            mov     a,#__str_9
03BF C0E0      1365            push    acc
03C1 74C9      1366            mov     a,#(__str_9 >> 8)
03C3 C0E0      1367            push    acc
03C5 7480      1368            mov     a,#0x80
03C7 C0E0      1369            push    acc
03C9 120100    1370            lcall   _printf
03CC 1581      1371            dec     sp
03CE 1581      1372            dec     sp
03D0 1581      1373            dec     sp
03D2           1374   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:353: getsn(dir,sizeof(dir));
03D2 755804    1375            mov     _getsn_PARM_2,#0x04
03D5 E4        1376            clr     a
03D6 F559      1377            mov     (_getsn_PARM_2 + 1),a
03D8 90B928    1378            mov     dptr,#_main_dir_1_71
03DB 75F040    1379            mov     b,#0x40
03DE 120100    1380            lcall   _getsn
03E1           1381   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:355: sscanf(dir,"%c",&direction);
03E1 7478      1382            mov     a,#_main_direction_1_71
03E3 C0E0      1383            push    acc
03E5 74B9      1384            mov     a,#(_main_direction_1_71 >> 8)
03E7 C0E0      1385            push    acc
03E9 7440      1386            mov     a,#0x40
03EB C0E0      1387            push    acc
03ED 74C8      1388            mov     a,#__str_10
03EF C0E0      1389            push    acc
03F1 74C9      1390            mov     a,#(__str_10 >> 8)
03F3 C0E0      1391            push    acc
03F5 7480      1392            mov     a,#0x80
03F7 C0E0      1393            push    acc
03F9 7428      1394            mov     a,#_main_dir_1_71
03FB C0E0      1395            push    acc
03FD 74B9      1396            mov     a,#(_main_dir_1_71 >> 8)
03FF C0E0      1397            push    acc
0401 7440      1398            mov     a,#0x40
0403 C0E0      1399            push    acc
0405 120100    1400            lcall   _sscanf
0408 E581      1401            mov     a,sp
040A 24F7      1402            add     a,#0xf7
040C F581      1403            mov     sp,a
040E           1404   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:357: if(direction == 'F')
040E 7446      1405            mov     a,#0x46
0410 B57848    1406            cjne    a,_main_direction_1_71,L013002?
0413           1407   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:358: printf("Moving forward.\n");
0413 7488      1408            mov     a,#__str_11
0415 C0E0      1409            push    acc
0417 74CA      1410            mov     a,#(__str_11 >> 8)
0419 C0E0      1411            push    acc
041B 7480      1412            mov     a,#0x80
041D C0E0      1413            push    acc
041F 120100    1414            lcall   _printf
0422 1581      1415            dec     sp
0424 1581      1416            dec     sp
0426 1581      1417            dec     sp
0428 8001      1418            sjmp    L013010?
042A           1419   L013002?:
042A           1420   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:360: printf("Moving backwards.\n");
042A 7408      1421            mov     a,#__str_12
042C C0E0      1422            push    acc
042E 74CB      1423            mov     a,#(__str_12 >> 8)
0430 C0E0      1424            push    acc
0432 7480      1425            mov     a,#0x80
0434 C0E0      1426            push    acc
0436 120100    1427            lcall   _printf
0439 1581      1428            dec     sp
043B 1581      1429            dec     sp
043D 1581      1430            dec     sp
043F           1431   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:362: while(1)
043F           1432   L013010?:
043F           1433   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:364: if(stepFlag == 1)
043F 7401      1434            mov     a,#0x01
0441 B51848    1435            cjne    a,_stepFlag,L013005?
0444           1436   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:366: takeStep(direction);
0444 857882    1437            mov     dpl,_main_direction_1_71
0447 120100    1438            lcall   _takeStep
044A           1439   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:367: stepFlag = 0;
044A 751800    1440            mov     _stepFlag,#0x00
044D           1441   L013005?:
044D           1442   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:370: TIMER_OUT_2 = stepFlag;
044D E518      1443            mov     a,_stepFlag
044F 24FF      1444            add     a,#0xff
0451 92A5      1445            mov     _P2_5,c
0453           1446   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:373: if(measureCount < totalMeasurements)
0453 C3        1447            clr     c
0454 E5C8      1448            mov     a,_main_measureCount_1_71
0456 94F4      1449            subb    a,#0xF4
0458 E5C9      1450            mov     a,(_main_measureCount_1_71 + 1)
045A 6480      1451            xrl     a,#0x80
045C 9481      1452            subb    a,#0x81
045E 4001      1453            jc      L013022?
0460 020100    1454            ljmp    L013007?
0463           1455   L013022?:
0463           1456   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:376: voltages[0] += Volts_at_Pin(QFP32_MUX_P1_4);
0463 85E808    1457            mov     _main_sloc0_1_0,_main_voltages_1_71
0466 85E909    1458            mov     (_main_sloc0_1_0 + 1),(_main_voltages_1_71 + 1)
0469 85EA0A    1459            mov     (_main_sloc0_1_0 + 2),(_main_voltages_1_71 + 2)
046C 85EB0B    1460            mov     (_main_sloc0_1_0 + 3),(_main_voltages_1_71 + 3)
046F 75820A    1461            mov     dpl,#0x0A
0472 120100    1462            lcall   _Volts_at_Pin
0475 AA82      1463            mov     r2,dpl
0477 AB83      1464            mov     r3,dph
0479 ACF0      1465            mov     r4,b
047B FD        1466            mov     r5,a
047C C002      1467            push    ar2
047E C003      1468            push    ar3
0480 C004      1469            push    ar4
0482 C005      1470            push    ar5
0484 850882    1471            mov     dpl,_main_sloc0_1_0
0487 850983    1472            mov     dph,(_main_sloc0_1_0 + 1)
048A 850AF0    1473            mov     b,(_main_sloc0_1_0 + 2)
048D E50B      1474            mov     a,(_main_sloc0_1_0 + 3)
048F 120100    1475            lcall   ___fsadd
0492 AA82      1476            mov     r2,dpl
0494 AB83      1477            mov     r3,dph
0496 ACF0      1478            mov     r4,b
0498 FD        1479            mov     r5,a
0499 E581      1480            mov     a,sp
049B 24FC      1481            add     a,#0xfc
049D F581      1482            mov     sp,a
049F 8AE8      1483            mov     _main_voltages_1_71,r2
04A1 8BE9      1484            mov     (_main_voltages_1_71 + 1),r3
04A3 8CEA      1485            mov     (_main_voltages_1_71 + 2),r4
04A5 8DEB      1486            mov     (_main_voltages_1_71 + 3),r5
04A7           1487   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:377: voltages[1] += Volts_at_Pin(QFP32_MUX_P1_5);
04A7 85EC08    1488            mov     _main_sloc0_1_0,(_main_voltages_1_71 + 0x0004)
04AA 85ED09    1489            mov     (_main_sloc0_1_0 + 1),((_main_voltages_1_71 + 0x0004) + 1)
04AD 85EE0A    1490            mov     (_main_sloc0_1_0 + 2),((_main_voltages_1_71 + 0x0004) + 2)
04B0 85EF0B    1491            mov     (_main_sloc0_1_0 + 3),((_main_voltages_1_71 + 0x0004) + 3)
04B3 75820B    1492            mov     dpl,#0x0B
04B6 120100    1493            lcall   _Volts_at_Pin
04B9 AE82      1494            mov     r6,dpl
04BB AF83      1495            mov     r7,dph
04BD AAF0      1496            mov     r2,b
04BF FB        1497            mov     r3,a
04C0 C006      1498            push    ar6
04C2 C007      1499            push    ar7
04C4 C002      1500            push    ar2
04C6 C003      1501            push    ar3
04C8 850882    1502            mov     dpl,_main_sloc0_1_0
04CB 850983    1503            mov     dph,(_main_sloc0_1_0 + 1)
04CE 850AF0    1504            mov     b,(_main_sloc0_1_0 + 2)
04D1 E50B      1505            mov     a,(_main_sloc0_1_0 + 3)
04D3 120100    1506            lcall   ___fsadd
04D6 AA82      1507            mov     r2,dpl
04D8 AB83      1508            mov     r3,dph
04DA ACF0      1509            mov     r4,b
04DC FD        1510            mov     r5,a
04DD E581      1511            mov     a,sp
04DF 24FC      1512            add     a,#0xfc
04E1 F581      1513            mov     sp,a
04E3 8AEC      1514            mov     (_main_voltages_1_71 + 0x0004),r2
04E5 8BED      1515            mov     ((_main_voltages_1_71 + 0x0004) + 1),r3
04E7 8CEE      1516            mov     ((_main_voltages_1_71 + 0x0004) + 2),r4
04E9 8DEF      1517            mov     ((_main_voltages_1_71 + 0x0004) + 3),r5
04EB           1518   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:378: voltages[2] += Volts_at_Pin(QFP32_MUX_P1_6);
04EB 85F008    1519            mov     _main_sloc0_1_0,(_main_voltages_1_71 + 0x0008)
04EE 85F109    1520            mov     (_main_sloc0_1_0 + 1),((_main_voltages_1_71 + 0x0008) + 1)
04F1 85F20A    1521            mov     (_main_sloc0_1_0 + 2),((_main_voltages_1_71 + 0x0008) + 2)
04F4 85F30B    1522            mov     (_main_sloc0_1_0 + 3),((_main_voltages_1_71 + 0x0008) + 3)
04F7 75820C    1523            mov     dpl,#0x0C
04FA 120100    1524            lcall   _Volts_at_Pin
04FD AE82      1525            mov     r6,dpl
04FF AF83      1526            mov     r7,dph
0501 AAF0      1527            mov     r2,b
0503 FB        1528            mov     r3,a
0504 C006      1529            push    ar6
0506 C007      1530            push    ar7
0508 C002      1531            push    ar2
050A C003      1532            push    ar3
050C 850882    1533            mov     dpl,_main_sloc0_1_0
050F 850983    1534            mov     dph,(_main_sloc0_1_0 + 1)
0512 850AF0    1535            mov     b,(_main_sloc0_1_0 + 2)
0515 E50B      1536            mov     a,(_main_sloc0_1_0 + 3)
0517 120100    1537            lcall   ___fsadd
051A AA82      1538            mov     r2,dpl
051C AB83      1539            mov     r3,dph
051E ACF0      1540            mov     r4,b
0520 FD        1541            mov     r5,a
0521 E581      1542            mov     a,sp
0523 24FC      1543            add     a,#0xfc
0525 F581      1544            mov     sp,a
0527 8AF0      1545            mov     (_main_voltages_1_71 + 0x0008),r2
0529 8BF1      1546            mov     ((_main_voltages_1_71 + 0x0008) + 1),r3
052B 8CF2      1547            mov     ((_main_voltages_1_71 + 0x0008) + 2),r4
052D 8DF3      1548            mov     ((_main_voltages_1_71 + 0x0008) + 3),r5
052F           1549   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:381: measureCount++;
052F 05C8      1550            inc     _main_measureCount_1_71
0531 E4        1551            clr     a
0532 B5C848    1552            cjne    a,_main_measureCount_1_71,L013023?
0535 05C9      1553            inc     (_main_measureCount_1_71 + 1)
0537           1554   L013023?:
0537 020100    1555            ljmp    L013010?
053A           1556   L013007?:
053A           1557   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:386: vReadings[0] = voltages[0]/totalMeasurements;
053A E4        1558            clr     a
053B C0E0      1559            push    acc
053D C0E0      1560            push    acc
053F 74FA      1561            mov     a,#0xFA
0541 C0E0      1562            push    acc
0543 7443      1563            mov     a,#0x43
0545 C0E0      1564            push    acc
0547 85E882    1565            mov     dpl,_main_voltages_1_71
054A 85E983    1566            mov     dph,(_main_voltages_1_71 + 1)
054D 85EAF0    1567            mov     b,(_main_voltages_1_71 + 2)
0550 E5EB      1568            mov     a,(_main_voltages_1_71 + 3)
0552 120100    1569            lcall   ___fsdiv
0555 858208    1570            mov     _main_sloc0_1_0,dpl
0558 858309    1571            mov     (_main_sloc0_1_0 + 1),dph
055B 85F00A    1572            mov     (_main_sloc0_1_0 + 2),b
055E F50B      1573            mov     (_main_sloc0_1_0 + 3),a
0560 E581      1574            mov     a,sp
0562 24FC      1575            add     a,#0xfc
0564 F581      1576            mov     sp,a
0566 850898    1577            mov     _main_vReadings_1_71,_main_sloc0_1_0
0569 850999    1578            mov     (_main_vReadings_1_71 + 1),(_main_sloc0_1_0 + 1)
056C 850A9A    1579            mov     (_main_vReadings_1_71 + 2),(_main_sloc0_1_0 + 2)
056F 850B9B    1580            mov     (_main_vReadings_1_71 + 3),(_main_sloc0_1_0 + 3)
0572           1581   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:387: vReadings[1] = voltages[1]/totalMeasurements;
0572 E4        1582            clr     a
0573 C0E0      1583            push    acc
0575 C0E0      1584            push    acc
0577 74FA      1585            mov     a,#0xFA
0579 C0E0      1586            push    acc
057B 7443      1587            mov     a,#0x43
057D C0E0      1588            push    acc
057F 85EC82    1589            mov     dpl,(_main_voltages_1_71 + 0x0004)
0582 85ED83    1590            mov     dph,((_main_voltages_1_71 + 0x0004) + 1)
0585 85EEF0    1591            mov     b,((_main_voltages_1_71 + 0x0004) + 2)
0588 E5EF      1592            mov     a,((_main_voltages_1_71 + 0x0004) + 3)
058A 120100    1593            lcall   ___fsdiv
058D 858248    1594            mov     _main_sloc1_1_0,dpl
0590 858349    1595            mov     (_main_sloc1_1_0 + 1),dph
0593 85F04A    1596            mov     (_main_sloc1_1_0 + 2),b
0596 F54B      1597            mov     (_main_sloc1_1_0 + 3),a
0598 E581      1598            mov     a,sp
059A 24FC      1599            add     a,#0xfc
059C F581      1600            mov     sp,a
059E 85489C    1601            mov     (_main_vReadings_1_71 + 0x0004),_main_sloc1_1_0
05A1 85499D    1602            mov     ((_main_vReadings_1_71 + 0x0004) + 1),(_main_sloc1_1_0 + 1)
05A4 854A9E    1603            mov     ((_main_vReadings_1_71 + 0x0004) + 2),(_main_sloc1_1_0 + 2)
05A7 854B9F    1604            mov     ((_main_vReadings_1_71 + 0x0004) + 3),(_main_sloc1_1_0 + 3)
05AA           1605   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:388: vReadings[2] = voltages[2]/totalMeasurements;
05AA E4        1606            clr     a
05AB C0E0      1607            push    acc
05AD C0E0      1608            push    acc
05AF 74FA      1609            mov     a,#0xFA
05B1 C0E0      1610            push    acc
05B3 7443      1611            mov     a,#0x43
05B5 C0E0      1612            push    acc
05B7 85F082    1613            mov     dpl,(_main_voltages_1_71 + 0x0008)
05BA 85F183    1614            mov     dph,((_main_voltages_1_71 + 0x0008) + 1)
05BD 85F2F0    1615            mov     b,((_main_voltages_1_71 + 0x0008) + 2)
05C0 E5F3      1616            mov     a,((_main_voltages_1_71 + 0x0008) + 3)
05C2 120100    1617            lcall   ___fsdiv
05C5 AC82      1618            mov     r4,dpl
05C7 AD83      1619            mov     r5,dph
05C9 AAF0      1620            mov     r2,b
05CB FB        1621            mov     r3,a
05CC E581      1622            mov     a,sp
05CE 24FC      1623            add     a,#0xfc
05D0 F581      1624            mov     sp,a
05D2 8CA0      1625            mov     (_main_vReadings_1_71 + 0x0008),r4
05D4 8DA1      1626            mov     ((_main_vReadings_1_71 + 0x0008) + 1),r5
05D6 8AA2      1627            mov     ((_main_vReadings_1_71 + 0x0008) + 2),r2
05D8 8BA3      1628            mov     ((_main_vReadings_1_71 + 0x0008) + 3),r3
05DA           1629   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:391: printf("V(P1.4)=%4.2fV, V(P1.5)=%4.2fV, V(P1.6)=%4.2fV\r", vReadings[0], vReadings[1], vReadings[2]);
05DA C004      1630            push    ar4
05DC C005      1631            push    ar5
05DE C002      1632            push    ar2
05E0 C003      1633            push    ar3
05E2 C048      1634            push    _main_sloc1_1_0
05E4 C049      1635            push    (_main_sloc1_1_0 + 1)
05E6 C04A      1636            push    (_main_sloc1_1_0 + 2)
05E8 C04B      1637            push    (_main_sloc1_1_0 + 3)
05EA C008      1638            push    _main_sloc0_1_0
05EC C009      1639            push    (_main_sloc0_1_0 + 1)
05EE C00A      1640            push    (_main_sloc0_1_0 + 2)
05F0 C00B      1641            push    (_main_sloc0_1_0 + 3)
05F2 7488      1642            mov     a,#__str_13
05F4 C0E0      1643            push    acc
05F6 74CC      1644            mov     a,#(__str_13 >> 8)
05F8 C0E0      1645            push    acc
05FA 7480      1646            mov     a,#0x80
05FC C0E0      1647            push    acc
05FE 120100    1648            lcall   _printf
0601 E581      1649            mov     a,sp
0603 24F1      1650            add     a,#0xf1
0605 F581      1651            mov     sp,a
0607           1652   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:394: measureCount = 0;
0607           1653   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:395: voltages[0] = 0;
0607 E4        1654            clr a
0608 F5C8      1655            mov _main_measureCount_1_71,a
060A F5C9      1656            mov (_main_measureCount_1_71 + 1),a
060C F5E8      1657            mov _main_voltages_1_71,a
060E F5E9      1658            mov (_main_voltages_1_71 + 1),a
0610 F5EA      1659            mov (_main_voltages_1_71 + 2),a
0612 F5EB      1660            mov (_main_voltages_1_71 + 3),a
0614           1661   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:396: voltages[1] = 0;
0614 75EC00    1662            mov     (_main_voltages_1_71 + 0x0004),#0x00
0617 75ED00    1663            mov     ((_main_voltages_1_71 + 0x0004) + 1),#0x00
061A 75EE00    1664            mov     ((_main_voltages_1_71 + 0x0004) + 2),#0x00
061D 75EF00    1665            mov     ((_main_voltages_1_71 + 0x0004) + 3),#0x00
0620           1666   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:397: voltages[2] = 0;
0620 75F000    1667            mov     (_main_voltages_1_71 + 0x0008),#0x00
0623 75F100    1668            mov     ((_main_voltages_1_71 + 0x0008) + 1),#0x00
0626 75F200    1669            mov     ((_main_voltages_1_71 + 0x0008) + 2),#0x00
0629 75F300    1670            mov     ((_main_voltages_1_71 + 0x0008) + 3),#0x00
062C 020100    1671            ljmp    L013010?
062F           1672            rseg R_CSEG
062F           1673   
0000           1674            rseg R_XINIT
0000           1675   
0000           1676            rseg R_CONST
0000           1677   __str_0:
0000 1B        1678            db 0x1B
0001 5B324A    1679            db '[2J'
0004 00        1680            db 0x00
0005           1681   __str_1:
0005 50434130  1682            db 'PCA0 in 8-bit PWM mode test program'
     20696E20
     382D6269
     74205057
     4D206D6F
     64652074
     65737420
     70726F67
     72616D
0028 0A        1683            db 0x0A
0029 46696C65  1684            db 'File: %s'
     3A202573
0031 0A        1685            db 0x0A
0032 436F6D70  1686            db 'Compiled: %s, %'
     696C6564
     3A202573
     2C2025
0041 73        1687            db 's'
0042 0A        1688            db 0x0A
0043 0A        1689            db 0x0A
0044 00        1690            db 0x00
0045           1691   __str_2:
0045 433A      1692            db 'C:'
0047 5C        1693            db 0x5C
0048 55736572  1694            db 'Users'
     73
004D 5C        1695            db 0x5C
004E 46616269  1696            db 'Fabian Lozano'
     616E204C
     6F7A616E
     6F
005B 5C        1697            db 0x5C
005C 4465736B  1698            db 'Desktop'
     746F70
0063 5C        1699            db 0x5C
0064 554243    1700            db 'UBC'
0067 5C        1701            db 0x5C
0068 55424333  1702            db 'UBC3rdYear'
     72645965
     6172
0072 5C        1703            db 0x5C
0073 5465726D  1704            db 'Term 2'
     2032
0079 5C        1705            db 0x5C
007A 454C4543  1706            db 'ELEC 39'
     203339
0081 31        1707            db '1'
0082 5C        1708            db 0x5C
0083 436F6E74  1709            db 'Controller'
     726F6C6C
     6572
008D 5C        1710            db 0x5C
008E 436F6465  1711            db 'Code'
0092 5C        1712            db 0x5C
0093 5043412E  1713            db 'PCA.c'
     63
0098 00        1714            db 0x00
0099           1715   __str_3:
0099 46656220  1716            db 'Feb 14 2019'
     31342032
     303139
00A4 00        1717            db 0x00
00A5           1718   __str_4:
00A5 30393A34  1719            db '09:48:44'
     383A3434
00AD 00        1720            db 0x00
00AE           1721   __str_5:
00AE 50696E20  1722            db 'Pin configuration done.'
     636F6E66
     69677572
     6174696F
     6E20646F
     6E652E
00C5 0A        1723            db 0x0A
00C6 00        1724            db 0x00
00C7           1725   __str_6:
00C7 50434120  1726            db 'PCA configuration done.'
     636F6E66
     69677572
     6174696F
     6E20646F
     6E652E
00DE 0A        1727            db 0x0A
00DF 00        1728            db 0x00
00E0           1729   __str_7:
00E0 41444320  1730            db 'ADC configuration done.'
     636F6E66
     69677572
     6174696F
     6E20646F
     6E652E
00F7 0A        1731            db 0x0A
00F8 00        1732            db 0x00
00F9           1733   __str_8:
00F9 0A        1734            db 0x0A
00FA 00        1735            db 0x00
00FB           1736   __str_9:
00FB 456E7465  1737            db 'Enter direction of rotation:'
     72206469
     72656374
     696F6E20
     6F662072
     6F746174
     696F6E3A
0117 0A        1738            db 0x0A
0118 00        1739            db 0x00
0119           1740   __str_10:
0119 2563      1741            db '%c'
011B 00        1742            db 0x00
011C           1743   __str_11:
011C 4D6F7669  1744            db 'Moving forward.'
     6E672066
     6F727761
     72642E
012B 0A        1745            db 0x0A
012C 00        1746            db 0x00
012D           1747   __str_12:
012D 4D6F7669  1748            db 'Moving backwards.'
     6E672062
     61636B77
     61726473
     2E
013E 0A        1749            db 0x0A
013F 00        1750            db 0x00
0140           1751   __str_13:
0140 56285031  1752            db 'V(P1.4)=%4.2fV, V(P1.5)=%4.2fV, V(P1.6)=%4.2fV'
     2E34293D
     25342E32
     66562C20
     56285031
     2E35293D
     25342E32
     66562C20
     56285031
     2E36293D
     25342E32
     6656
016E 0D        1753            db 0x0D
016F 00        1754            db 0x00
0170           1755   
002E           1756            CSEG
002E           1757   
002E           1758   end
