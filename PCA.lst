0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Sun Mar 03 20:39:01 2019
0000              5   ;--------------------------------------------------------
                  5   $name PCA
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _ConfigurePins
0000             29            public _ConfigPCA0
0000             30            public _Volts_at_Pin
0000             31            public _ADC_at_Pin
0000             32            public _InitADC
0000             33            public _getsn
0000             34            public _Timer3_ISR
0000             35            public _Timer2_ISR
0000             36            public __c51_external_startup
0000             37            public _getsn_PARM_2
0000             38            public _totalSteps
0000             39            public _interruptCount
0000             40            public _stepCount
0000             41            public _direction
0000             42            public _adcFlag
0000             43   ;--------------------------------------------------------
0000             44   ; Special Function Registers
0000             45   ;--------------------------------------------------------
0000             46   _ACC            DATA 0xe0
0000             47   _ADC0ASAH       DATA 0xb6
0000             48   _ADC0ASAL       DATA 0xb5
0000             49   _ADC0ASCF       DATA 0xa1
0000             50   _ADC0ASCT       DATA 0xc7
0000             51   _ADC0CF0        DATA 0xbc
0000             52   _ADC0CF1        DATA 0xb9
0000             53   _ADC0CF2        DATA 0xdf
0000             54   _ADC0CN0        DATA 0xe8
0000             55   _ADC0CN1        DATA 0xb2
0000             56   _ADC0CN2        DATA 0xb3
0000             57   _ADC0GTH        DATA 0xc4
0000             58   _ADC0GTL        DATA 0xc3
0000             59   _ADC0H          DATA 0xbe
0000             60   _ADC0L          DATA 0xbd
0000             61   _ADC0LTH        DATA 0xc6
0000             62   _ADC0LTL        DATA 0xc5
0000             63   _ADC0MX         DATA 0xbb
0000             64   _B              DATA 0xf0
0000             65   _CKCON0         DATA 0x8e
0000             66   _CKCON1         DATA 0xa6
0000             67   _CLEN0          DATA 0xc6
0000             68   _CLIE0          DATA 0xc7
0000             69   _CLIF0          DATA 0xe8
0000             70   _CLKSEL         DATA 0xa9
0000             71   _CLOUT0         DATA 0xd1
0000             72   _CLU0CF         DATA 0xb1
0000             73   _CLU0FN         DATA 0xaf
0000             74   _CLU0MX         DATA 0x84
0000             75   _CLU1CF         DATA 0xb3
0000             76   _CLU1FN         DATA 0xb2
0000             77   _CLU1MX         DATA 0x85
0000             78   _CLU2CF         DATA 0xb6
0000             79   _CLU2FN         DATA 0xb5
0000             80   _CLU2MX         DATA 0x91
0000             81   _CLU3CF         DATA 0xbf
0000             82   _CLU3FN         DATA 0xbe
0000             83   _CLU3MX         DATA 0xae
0000             84   _CMP0CN0        DATA 0x9b
0000             85   _CMP0CN1        DATA 0x99
0000             86   _CMP0MD         DATA 0x9d
0000             87   _CMP0MX         DATA 0x9f
0000             88   _CMP1CN0        DATA 0xbf
0000             89   _CMP1CN1        DATA 0xac
0000             90   _CMP1MD         DATA 0xab
0000             91   _CMP1MX         DATA 0xaa
0000             92   _CRC0CN0        DATA 0xce
0000             93   _CRC0CN1        DATA 0x86
0000             94   _CRC0CNT        DATA 0xd3
0000             95   _CRC0DAT        DATA 0xcb
0000             96   _CRC0FLIP       DATA 0xcf
0000             97   _CRC0IN         DATA 0xca
0000             98   _CRC0ST         DATA 0xd2
0000             99   _DAC0CF0        DATA 0x91
0000            100   _DAC0CF1        DATA 0x92
0000            101   _DAC0H          DATA 0x85
0000            102   _DAC0L          DATA 0x84
0000            103   _DAC1CF0        DATA 0x93
0000            104   _DAC1CF1        DATA 0x94
0000            105   _DAC1H          DATA 0x8a
0000            106   _DAC1L          DATA 0x89
0000            107   _DAC2CF0        DATA 0x95
0000            108   _DAC2CF1        DATA 0x96
0000            109   _DAC2H          DATA 0x8c
0000            110   _DAC2L          DATA 0x8b
0000            111   _DAC3CF0        DATA 0x9a
0000            112   _DAC3CF1        DATA 0x9c
0000            113   _DAC3H          DATA 0x8e
0000            114   _DAC3L          DATA 0x8d
0000            115   _DACGCF0        DATA 0x88
0000            116   _DACGCF1        DATA 0x98
0000            117   _DACGCF2        DATA 0xa2
0000            118   _DERIVID        DATA 0xad
0000            119   _DEVICEID       DATA 0xb5
0000            120   _DPH            DATA 0x83
0000            121   _DPL            DATA 0x82
0000            122   _EIE1           DATA 0xe6
0000            123   _EIE2           DATA 0xf3
0000            124   _EIP1           DATA 0xbb
0000            125   _EIP1H          DATA 0xee
0000            126   _EIP2           DATA 0xed
0000            127   _EIP2H          DATA 0xf6
0000            128   _EMI0CN         DATA 0xe7
0000            129   _FLKEY          DATA 0xb7
0000            130   _HFO0CAL        DATA 0xc7
0000            131   _HFO1CAL        DATA 0xd6
0000            132   _HFOCN          DATA 0xef
0000            133   _I2C0ADM        DATA 0xff
0000            134   _I2C0CN0        DATA 0xba
0000            135   _I2C0DIN        DATA 0xbc
0000            136   _I2C0DOUT       DATA 0xbb
0000            137   _I2C0FCN0       DATA 0xad
0000            138   _I2C0FCN1       DATA 0xab
0000            139   _I2C0FCT        DATA 0xf5
0000            140   _I2C0SLAD       DATA 0xbd
0000            141   _I2C0STAT       DATA 0xb9
0000            142   _IE             DATA 0xa8
0000            143   _IP             DATA 0xb8
0000            144   _IPH            DATA 0xf2
0000            145   _IT01CF         DATA 0xe4
0000            146   _LFO0CN         DATA 0xb1
0000            147   _P0             DATA 0x80
0000            148   _P0MASK         DATA 0xfe
0000            149   _P0MAT          DATA 0xfd
0000            150   _P0MDIN         DATA 0xf1
0000            151   _P0MDOUT        DATA 0xa4
0000            152   _P0SKIP         DATA 0xd4
0000            153   _P1             DATA 0x90
0000            154   _P1MASK         DATA 0xee
0000            155   _P1MAT          DATA 0xed
0000            156   _P1MDIN         DATA 0xf2
0000            157   _P1MDOUT        DATA 0xa5
0000            158   _P1SKIP         DATA 0xd5
0000            159   _P2             DATA 0xa0
0000            160   _P2MASK         DATA 0xfc
0000            161   _P2MAT          DATA 0xfb
0000            162   _P2MDIN         DATA 0xf3
0000            163   _P2MDOUT        DATA 0xa6
0000            164   _P2SKIP         DATA 0xcc
0000            165   _P3             DATA 0xb0
0000            166   _P3MDIN         DATA 0xf4
0000            167   _P3MDOUT        DATA 0x9c
0000            168   _PCA0CENT       DATA 0x9e
0000            169   _PCA0CLR        DATA 0x9c
0000            170   _PCA0CN0        DATA 0xd8
0000            171   _PCA0CPH0       DATA 0xfc
0000            172   _PCA0CPH1       DATA 0xea
0000            173   _PCA0CPH2       DATA 0xec
0000            174   _PCA0CPH3       DATA 0xf5
0000            175   _PCA0CPH4       DATA 0x85
0000            176   _PCA0CPH5       DATA 0xde
0000            177   _PCA0CPL0       DATA 0xfb
0000            178   _PCA0CPL1       DATA 0xe9
0000            179   _PCA0CPL2       DATA 0xeb
0000            180   _PCA0CPL3       DATA 0xf4
0000            181   _PCA0CPL4       DATA 0x84
0000            182   _PCA0CPL5       DATA 0xdd
0000            183   _PCA0CPM0       DATA 0xda
0000            184   _PCA0CPM1       DATA 0xdb
0000            185   _PCA0CPM2       DATA 0xdc
0000            186   _PCA0CPM3       DATA 0xae
0000            187   _PCA0CPM4       DATA 0xaf
0000            188   _PCA0CPM5       DATA 0xcc
0000            189   _PCA0H          DATA 0xfa
0000            190   _PCA0L          DATA 0xf9
0000            191   _PCA0MD         DATA 0xd9
0000            192   _PCA0POL        DATA 0x96
0000            193   _PCA0PWM        DATA 0xf7
0000            194   _PCON0          DATA 0x87
0000            195   _PCON1          DATA 0xcd
0000            196   _PFE0CN         DATA 0xc1
0000            197   _PRTDRV         DATA 0xf6
0000            198   _PSCTL          DATA 0x8f
0000            199   _PSTAT0         DATA 0xaa
0000            200   _PSW            DATA 0xd0
0000            201   _REF0CN         DATA 0xd1
0000            202   _REG0CN         DATA 0xc9
0000            203   _REVID          DATA 0xb6
0000            204   _RSTSRC         DATA 0xef
0000            205   _SBCON1         DATA 0x94
0000            206   _SBRLH1         DATA 0x96
0000            207   _SBRLL1         DATA 0x95
0000            208   _SBUF           DATA 0x99
0000            209   _SBUF0          DATA 0x99
0000            210   _SBUF1          DATA 0x92
0000            211   _SCON           DATA 0x98
0000            212   _SCON0          DATA 0x98
0000            213   _SCON1          DATA 0xc8
0000            214   _SFRPAGE        DATA 0xa7
0000            215   _SFRPGCN        DATA 0xbc
0000            216   _SFRSTACK       DATA 0xd7
0000            217   _SMB0ADM        DATA 0xd6
0000            218   _SMB0ADR        DATA 0xd7
0000            219   _SMB0CF         DATA 0xc1
0000            220   _SMB0CN0        DATA 0xc0
0000            221   _SMB0DAT        DATA 0xc2
0000            222   _SMB0FCN0       DATA 0xc3
0000            223   _SMB0FCN1       DATA 0xc4
0000            224   _SMB0FCT        DATA 0xef
0000            225   _SMB0RXLN       DATA 0xc5
0000            226   _SMB0TC         DATA 0xac
0000            227   _SMOD1          DATA 0x93
0000            228   _SP             DATA 0x81
0000            229   _SPI0CFG        DATA 0xa1
0000            230   _SPI0CKR        DATA 0xa2
0000            231   _SPI0CN0        DATA 0xf8
0000            232   _SPI0DAT        DATA 0xa3
0000            233   _SPI0FCN0       DATA 0x9a
0000            234   _SPI0FCN1       DATA 0x9b
0000            235   _SPI0FCT        DATA 0xf7
0000            236   _SPI0PCF        DATA 0xdf
0000            237   _TCON           DATA 0x88
0000            238   _TH0            DATA 0x8c
0000            239   _TH1            DATA 0x8d
0000            240   _TL0            DATA 0x8a
0000            241   _TL1            DATA 0x8b
0000            242   _TMOD           DATA 0x89
0000            243   _TMR2CN0        DATA 0xc8
0000            244   _TMR2CN1        DATA 0xfd
0000            245   _TMR2H          DATA 0xcf
0000            246   _TMR2L          DATA 0xce
0000            247   _TMR2RLH        DATA 0xcb
0000            248   _TMR2RLL        DATA 0xca
0000            249   _TMR3CN0        DATA 0x91
0000            250   _TMR3CN1        DATA 0xfe
0000            251   _TMR3H          DATA 0x95
0000            252   _TMR3L          DATA 0x94
0000            253   _TMR3RLH        DATA 0x93
0000            254   _TMR3RLL        DATA 0x92
0000            255   _TMR4CN0        DATA 0x98
0000            256   _TMR4CN1        DATA 0xff
0000            257   _TMR4H          DATA 0xa5
0000            258   _TMR4L          DATA 0xa4
0000            259   _TMR4RLH        DATA 0xa3
0000            260   _TMR4RLL        DATA 0xa2
0000            261   _TMR5CN0        DATA 0xc0
0000            262   _TMR5CN1        DATA 0xf1
0000            263   _TMR5H          DATA 0xd5
0000            264   _TMR5L          DATA 0xd4
0000            265   _TMR5RLH        DATA 0xd3
0000            266   _TMR5RLL        DATA 0xd2
0000            267   _UART0PCF       DATA 0xd9
0000            268   _UART1FCN0      DATA 0x9d
0000            269   _UART1FCN1      DATA 0xd8
0000            270   _UART1FCT       DATA 0xfa
0000            271   _UART1LIN       DATA 0x9e
0000            272   _UART1PCF       DATA 0xda
0000            273   _VDM0CN         DATA 0xff
0000            274   _WDTCN          DATA 0x97
0000            275   _XBR0           DATA 0xe1
0000            276   _XBR1           DATA 0xe2
0000            277   _XBR2           DATA 0xe3
0000            278   _XOSC0CN        DATA 0x86
0000            279   _DPTR           DATA 0x8382
0000            280   _TMR2RL         DATA 0xcbca
0000            281   _TMR3RL         DATA 0x9392
0000            282   _TMR4RL         DATA 0xa3a2
0000            283   _TMR5RL         DATA 0xd3d2
0000            284   _TMR0           DATA 0x8c8a
0000            285   _TMR1           DATA 0x8d8b
0000            286   _TMR2           DATA 0xcfce
0000            287   _TMR3           DATA 0x9594
0000            288   _TMR4           DATA 0xa5a4
0000            289   _TMR5           DATA 0xd5d4
0000            290   _SBRL1          DATA 0x9695
0000            291   _PCA0           DATA 0xfaf9
0000            292   _PCA0CP0        DATA 0xfcfb
0000            293   _PCA0CP1        DATA 0xeae9
0000            294   _PCA0CP2        DATA 0xeceb
0000            295   _PCA0CP3        DATA 0xf5f4
0000            296   _PCA0CP4        DATA 0x8584
0000            297   _PCA0CP5        DATA 0xdedd
0000            298   _ADC0ASA        DATA 0xb6b5
0000            299   _ADC0GT         DATA 0xc4c3
0000            300   _ADC0           DATA 0xbebd
0000            301   _ADC0LT         DATA 0xc6c5
0000            302   _DAC0           DATA 0x8584
0000            303   _DAC1           DATA 0x8a89
0000            304   _DAC2           DATA 0x8c8b
0000            305   _DAC3           DATA 0x8e8d
0000            306   ;--------------------------------------------------------
0000            307   ; special function bits
0000            308   ;--------------------------------------------------------
0000            309   _ACC_0          BIT 0xe0
0000            310   _ACC_1          BIT 0xe1
0000            311   _ACC_2          BIT 0xe2
0000            312   _ACC_3          BIT 0xe3
0000            313   _ACC_4          BIT 0xe4
0000            314   _ACC_5          BIT 0xe5
0000            315   _ACC_6          BIT 0xe6
0000            316   _ACC_7          BIT 0xe7
0000            317   _TEMPE          BIT 0xe8
0000            318   _ADGN0          BIT 0xe9
0000            319   _ADGN1          BIT 0xea
0000            320   _ADWINT         BIT 0xeb
0000            321   _ADBUSY         BIT 0xec
0000            322   _ADINT          BIT 0xed
0000            323   _IPOEN          BIT 0xee
0000            324   _ADEN           BIT 0xef
0000            325   _B_0            BIT 0xf0
0000            326   _B_1            BIT 0xf1
0000            327   _B_2            BIT 0xf2
0000            328   _B_3            BIT 0xf3
0000            329   _B_4            BIT 0xf4
0000            330   _B_5            BIT 0xf5
0000            331   _B_6            BIT 0xf6
0000            332   _B_7            BIT 0xf7
0000            333   _C0FIF          BIT 0xe8
0000            334   _C0RIF          BIT 0xe9
0000            335   _C1FIF          BIT 0xea
0000            336   _C1RIF          BIT 0xeb
0000            337   _C2FIF          BIT 0xec
0000            338   _C2RIF          BIT 0xed
0000            339   _C3FIF          BIT 0xee
0000            340   _C3RIF          BIT 0xef
0000            341   _D1SRC0         BIT 0x88
0000            342   _D1SRC1         BIT 0x89
0000            343   _D1AMEN         BIT 0x8a
0000            344   _D01REFSL       BIT 0x8b
0000            345   _D3SRC0         BIT 0x8c
0000            346   _D3SRC1         BIT 0x8d
0000            347   _D3AMEN         BIT 0x8e
0000            348   _D23REFSL       BIT 0x8f
0000            349   _D0UDIS         BIT 0x98
0000            350   _D1UDIS         BIT 0x99
0000            351   _D2UDIS         BIT 0x9a
0000            352   _D3UDIS         BIT 0x9b
0000            353   _EX0            BIT 0xa8
0000            354   _ET0            BIT 0xa9
0000            355   _EX1            BIT 0xaa
0000            356   _ET1            BIT 0xab
0000            357   _ES0            BIT 0xac
0000            358   _ET2            BIT 0xad
0000            359   _ESPI0          BIT 0xae
0000            360   _EA             BIT 0xaf
0000            361   _PX0            BIT 0xb8
0000            362   _PT0            BIT 0xb9
0000            363   _PX1            BIT 0xba
0000            364   _PT1            BIT 0xbb
0000            365   _PS0            BIT 0xbc
0000            366   _PT2            BIT 0xbd
0000            367   _PSPI0          BIT 0xbe
0000            368   _P0_0           BIT 0x80
0000            369   _P0_1           BIT 0x81
0000            370   _P0_2           BIT 0x82
0000            371   _P0_3           BIT 0x83
0000            372   _P0_4           BIT 0x84
0000            373   _P0_5           BIT 0x85
0000            374   _P0_6           BIT 0x86
0000            375   _P0_7           BIT 0x87
0000            376   _P1_0           BIT 0x90
0000            377   _P1_1           BIT 0x91
0000            378   _P1_2           BIT 0x92
0000            379   _P1_3           BIT 0x93
0000            380   _P1_4           BIT 0x94
0000            381   _P1_5           BIT 0x95
0000            382   _P1_6           BIT 0x96
0000            383   _P1_7           BIT 0x97
0000            384   _P2_0           BIT 0xa0
0000            385   _P2_1           BIT 0xa1
0000            386   _P2_2           BIT 0xa2
0000            387   _P2_3           BIT 0xa3
0000            388   _P2_4           BIT 0xa4
0000            389   _P2_5           BIT 0xa5
0000            390   _P2_6           BIT 0xa6
0000            391   _P3_0           BIT 0xb0
0000            392   _P3_1           BIT 0xb1
0000            393   _P3_2           BIT 0xb2
0000            394   _P3_3           BIT 0xb3
0000            395   _P3_4           BIT 0xb4
0000            396   _P3_7           BIT 0xb7
0000            397   _CCF0           BIT 0xd8
0000            398   _CCF1           BIT 0xd9
0000            399   _CCF2           BIT 0xda
0000            400   _CCF3           BIT 0xdb
0000            401   _CCF4           BIT 0xdc
0000            402   _CCF5           BIT 0xdd
0000            403   _CR             BIT 0xde
0000            404   _CF             BIT 0xdf
0000            405   _PARITY         BIT 0xd0
0000            406   _F1             BIT 0xd1
0000            407   _OV             BIT 0xd2
0000            408   _RS0            BIT 0xd3
0000            409   _RS1            BIT 0xd4
0000            410   _F0             BIT 0xd5
0000            411   _AC             BIT 0xd6
0000            412   _CY             BIT 0xd7
0000            413   _RI             BIT 0x98
0000            414   _TI             BIT 0x99
0000            415   _RB8            BIT 0x9a
0000            416   _TB8            BIT 0x9b
0000            417   _REN            BIT 0x9c
0000            418   _CE             BIT 0x9d
0000            419   _SMODE          BIT 0x9e
0000            420   _RI1            BIT 0xc8
0000            421   _TI1            BIT 0xc9
0000            422   _RBX1           BIT 0xca
0000            423   _TBX1           BIT 0xcb
0000            424   _REN1           BIT 0xcc
0000            425   _PERR1          BIT 0xcd
0000            426   _OVR1           BIT 0xce
0000            427   _SI             BIT 0xc0
0000            428   _ACK            BIT 0xc1
0000            429   _ARBLOST        BIT 0xc2
0000            430   _ACKRQ          BIT 0xc3
0000            431   _STO            BIT 0xc4
0000            432   _STA            BIT 0xc5
0000            433   _TXMODE         BIT 0xc6
0000            434   _MASTER         BIT 0xc7
0000            435   _SPIEN          BIT 0xf8
0000            436   _TXNF           BIT 0xf9
0000            437   _NSSMD0         BIT 0xfa
0000            438   _NSSMD1         BIT 0xfb
0000            439   _RXOVRN         BIT 0xfc
0000            440   _MODF           BIT 0xfd
0000            441   _WCOL           BIT 0xfe
0000            442   _SPIF           BIT 0xff
0000            443   _IT0            BIT 0x88
0000            444   _IE0            BIT 0x89
0000            445   _IT1            BIT 0x8a
0000            446   _IE1            BIT 0x8b
0000            447   _TR0            BIT 0x8c
0000            448   _TF0            BIT 0x8d
0000            449   _TR1            BIT 0x8e
0000            450   _TF1            BIT 0x8f
0000            451   _T2XCLK0        BIT 0xc8
0000            452   _T2XCLK1        BIT 0xc9
0000            453   _TR2            BIT 0xca
0000            454   _T2SPLIT        BIT 0xcb
0000            455   _TF2CEN         BIT 0xcc
0000            456   _TF2LEN         BIT 0xcd
0000            457   _TF2L           BIT 0xce
0000            458   _TF2H           BIT 0xcf
0000            459   _T4XCLK0        BIT 0x98
0000            460   _T4XCLK1        BIT 0x99
0000            461   _TR4            BIT 0x9a
0000            462   _T4SPLIT        BIT 0x9b
0000            463   _TF4CEN         BIT 0x9c
0000            464   _TF4LEN         BIT 0x9d
0000            465   _TF4L           BIT 0x9e
0000            466   _TF4H           BIT 0x9f
0000            467   _T5XCLK0        BIT 0xc0
0000            468   _T5XCLK1        BIT 0xc1
0000            469   _TR5            BIT 0xc2
0000            470   _T5SPLIT        BIT 0xc3
0000            471   _TF5CEN         BIT 0xc4
0000            472   _TF5LEN         BIT 0xc5
0000            473   _TF5L           BIT 0xc6
0000            474   _TF5H           BIT 0xc7
0000            475   _RIE            BIT 0xd8
0000            476   _RXTO0          BIT 0xd9
0000            477   _RXTO1          BIT 0xda
0000            478   _RFRQ           BIT 0xdb
0000            479   _TIE            BIT 0xdc
0000            480   _TXHOLD         BIT 0xdd
0000            481   _TXNF1          BIT 0xde
0000            482   _TFRQ           BIT 0xdf
0000            483   ;--------------------------------------------------------
0000            484   ; overlayable register banks
0000            485   ;--------------------------------------------------------
0000            486            rbank0 segment data overlay
0000            487   ;--------------------------------------------------------
0000            488   ; internal ram data
0000            489   ;--------------------------------------------------------
0000            490            rseg R_DSEG
0000            491   _adcFlag:
0000            492            ds 1
0001            493   _direction:
0001            494            ds 1
0002            495   _stepCount:
0002            496            ds 1
0003            497   _interruptCount:
0003            498            ds 1
0004            499   _totalSteps:
0004            500            ds 2
0006            501   _getsn_PARM_2:
0006            502            ds 2
0008            503   _getsn_buff_1_59:
0008            504            ds 3
000B            505   _getsn_sloc0_1_0:
000B            506            ds 2
000D            507   _main_vReadings_1_73:
000D            508            ds 8
0015            509   _main_voltages_1_73:
0015            510            ds 8
001D            511   _main_measureCount_1_73:
001D            512            ds 2
001F            513   _main_sloc0_1_0:
001F            514            ds 4
0023            515   ;--------------------------------------------------------
0023            516   ; overlayable items in internal ram 
0023            517   ;--------------------------------------------------------
0000            518            rseg    R_OSEG
0000            519   ;--------------------------------------------------------
0000            520   ; indirectly addressable internal ram data
0000            521   ;--------------------------------------------------------
0000            522            rseg R_ISEG
0000            523   ;--------------------------------------------------------
0000            524   ; absolute internal ram data
0000            525   ;--------------------------------------------------------
0000            526            DSEG
0000            527   ;--------------------------------------------------------
0000            528   ; bit data
0000            529   ;--------------------------------------------------------
0000            530            rseg R_BSEG
0000            531   ;--------------------------------------------------------
0000            532   ; paged external ram data
0000            533   ;--------------------------------------------------------
0000            534            rseg R_PSEG
0000            535   ;--------------------------------------------------------
0000            536   ; external ram data
0000            537   ;--------------------------------------------------------
0000            538            rseg R_XSEG
0000            539   ;--------------------------------------------------------
0000            540   ; absolute external ram data
0000            541   ;--------------------------------------------------------
0000            542            XSEG
0000            543   ;--------------------------------------------------------
0000            544   ; external initialized ram data
0000            545   ;--------------------------------------------------------
0000            546            rseg R_IXSEG
0000            547            rseg R_HOME
0000            548            rseg R_GSINIT
0000            549            rseg R_CSEG
0000            550   ;--------------------------------------------------------
0000            551   ; Reset entry point and interrupt vectors
0000            552   ;--------------------------------------------------------
0000            553            CSEG at 0x0000
0000 020100     554            ljmp    _crt0
002B            555            CSEG at 0x002b
002B 020100     556            ljmp    _Timer2_ISR
0073            557            CSEG at 0x0073
0073 020100     558            ljmp    _Timer3_ISR
0076            559   ;--------------------------------------------------------
0076            560   ; global & static initialisations
0076            561   ;--------------------------------------------------------
0000            562            rseg R_HOME
0000            563            rseg R_GSINIT
0000            564            rseg R_GSINIT
0000            565   ;--------------------------------------------------------
0000            566   ; data variables initialization
0000            567   ;--------------------------------------------------------
0000            568            rseg R_DINIT
0000            569   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:34: volatile unsigned char adcFlag = 1;
0000 751801     570            mov     _adcFlag,#0x01
0003            571   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:35: volatile unsigned char direction = 1;
0003 75D801     572            mov     _direction,#0x01
0006            573   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:37: volatile unsigned char stepCount = 0;
0006 759800     574            mov     _stepCount,#0x00
0009            575   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:38: volatile unsigned char interruptCount = 0;
0009 755800     576            mov     _interruptCount,#0x00
000C            577   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:40: int totalSteps = 0;
000C E4         578            clr     a
000D F518       579            mov     _totalSteps,a
000F F519       580            mov     (_totalSteps + 1),a
0011            581            ; The linker places a 'ret' at the end of segment R_DINIT.
0011            582   ;--------------------------------------------------------
0011            583   ; code
0011            584   ;--------------------------------------------------------
0000            585            rseg R_CSEG
0000            586   ;------------------------------------------------------------
0000            587   ;Allocation info for local variables in function '_c51_external_startup'
0000            588   ;------------------------------------------------------------
0000            589   ;------------------------------------------------------------
0000            590   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:42: char _c51_external_startup (void)
0000            591   ;        -----------------------------------------
0000            592   ;         function _c51_external_startup
0000            593   ;        -----------------------------------------
0000            594   __c51_external_startup:
0000            595            using   0
0000            596   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:45: SFRPAGE = 0x00;
0000 75A700     597            mov     _SFRPAGE,#0x00
0003            598   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:46: WDTCN = 0xDE; //First key
0003 7597DE     599            mov     _WDTCN,#0xDE
0006            600   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:47: WDTCN = 0xAD; //Second key
0006 7597AD     601            mov     _WDTCN,#0xAD
0009            602   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:49: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     603            mov     _VDM0CN,#0x80
000C            604   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:50: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     605            mov     _RSTSRC,#0x06
000F            606   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:57: SFRPAGE = 0x10;
000F 75A710     607            mov     _SFRPAGE,#0x10
0012            608   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:58: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     609            mov     _PFE0CN,#0x20
0015            610   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:59: SFRPAGE = 0x00;
0015 75A700     611            mov     _SFRPAGE,#0x00
0018            612   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:80: CLKSEL = 0x00;
0018 75A900     613            mov     _CLKSEL,#0x00
001B            614   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:81: CLKSEL = 0x00;
001B 75A900     615            mov     _CLKSEL,#0x00
001E            616   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:82: while ((CLKSEL & 0x80) == 0);
001E            617   L002001?:
001E E5A9       618            mov     a,_CLKSEL
0020 30E778     619            jnb     acc.7,L002001?
0023            620   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:83: CLKSEL = 0x03;
0023 75A903     621            mov     _CLKSEL,#0x03
0026            622   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:84: CLKSEL = 0x03;
0026 75A903     623            mov     _CLKSEL,#0x03
0029            624   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:85: while ((CLKSEL & 0x80) == 0);
0029            625   L002004?:
0029 E5A9       626            mov     a,_CLKSEL
002B 30E7F8     627            jnb     acc.7,L002004?
002E            628   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:90: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     629            orl     _P0MDOUT,#0x10
0031            630   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:91: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)  
0031 75E101     631            mov     _XBR0,#0x01
0034            632   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:94: XBR1     = 0X02; //Enable PCA I/O and route CEX0 and CEX1 only (check reference manual page 120)
0034 75E202     633            mov     _XBR1,#0x02
0037            634   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:96: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     635            mov     _XBR2,#0x40
003A            636   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:102: SCON0 = 0x10;
003A 759810     637            mov     _SCON0,#0x10
003D            638   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:103: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     639            mov     _TH1,#0xE6
0040            640   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:104: TL1 = TH1;      // Init Timer1
0040 858D8B     641            mov     _TL1,_TH1
0043            642   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:105: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     643            anl     _TMOD,#0x0F
0046            644   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:106: TMOD |=  0x20;                       
0046 438920     645            orl     _TMOD,#0x20
0049            646   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:107: TR1 = 1; // START Timer1
0049 D28E       647            setb    _TR1
004B            648   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:108: TI = 1;  // Indicate TX0 ready
004B D299       649            setb    _TI
004D            650   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:111: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
004D 75C800     651            mov     _TMR2CN0,#0x00
0050            652   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:112: CKCON0|=0b_0001_0000; // Timer 2 uses the system clock
0050 438E10     653            orl     _CKCON0,#0x10
0053            654   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:113: TMR2RL=(0x10000L-(SYSCLK/(2*TIMER_2_FREQ))); // Initialize reload value
0053 75CA60     655            mov     _TMR2RL,#0x60
0056 75CB73     656            mov     (_TMR2RL >> 8),#0x73
0059            657   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:114: TMR2=0xffff;   // Set to reload immediately
0059 75CEFF     658            mov     _TMR2,#0xFF
005C 75CFFF     659            mov     (_TMR2 >> 8),#0xFF
005F            660   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:115: ET2=1;         // Enable Timer2 interrupts
005F D2AD       661            setb    _ET2
0061            662   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:116: TR2=1;         // Start Timer2 (TMR2CN is bit addressable)
0061 D2CA       663            setb    _TR2
0063            664   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:119: TMR3CN0=0x00;   // Stop Timer3; Clear TF3;
0063 759100     665            mov     _TMR3CN0,#0x00
0066            666   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:120: CKCON0|=0b_0100_0000; // Timer 3 uses the system clock
0066 438E40     667            orl     _CKCON0,#0x40
0069            668   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:121: TMR3RL=(0x10000L-(SYSCLK/(2*TIMER_3_FREQ))); // Initialize reload value
0069 7592B0     669            mov     _TMR3RL,#0xB0
006C 7593B9     670            mov     (_TMR3RL >> 8),#0xB9
006F            671   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:122: TMR3=0xffff;   // Set to reload immediately
006F 7594FF     672            mov     _TMR3,#0xFF
0072 7595FF     673            mov     (_TMR3 >> 8),#0xFF
0075            674   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:123: EIE1|=0b_1000_0000;     // Enable Timer3 interrupts
0075 43E680     675            orl     _EIE1,#0x80
0078            676   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:124: TMR3CN0|=0b_0000_0100;  // Start Timer3 (TMR3CN0 is not bit addressable)
0078 439104     677            orl     _TMR3CN0,#0x04
007B            678   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:126: EA=1; // Enable interrupts
007B D2AF       679            setb    _EA
007D            680   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:128: return 0;
007D 758200     681            mov     dpl,#0x00
0080 22         682            ret
0081            683   ;------------------------------------------------------------
0081            684   ;Allocation info for local variables in function 'Timer2_ISR'
0081            685   ;------------------------------------------------------------
0081            686   ;------------------------------------------------------------
0081            687   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:132: void Timer2_ISR (void) interrupt INTERRUPT_TIMER2
0081            688   ;        -----------------------------------------
0081            689   ;         function Timer2_ISR
0081            690   ;        -----------------------------------------
0081            691   _Timer2_ISR:
0081 C0E0       692            push    acc
0083 C0D0       693            push    psw
0085 75D000     694            mov     psw,#0x00
0088            695   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:134: SFRPAGE=0x0;
0088 75A700     696            mov     _SFRPAGE,#0x00
008B            697   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:135: TF2H = 0; // Clear Timer2 interrupt flag
008B C2CF       698            clr     _TF2H
008D            699   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:140: if(interruptCount == 3)
008D 7403       700            mov     a,#0x03
008F B558B8     701            cjne    a,_interruptCount,L003038?
0092 8001       702            sjmp    L003039?
0094            703   L003038?:
0094 020100     704            ljmp    L003025?
0097            705   L003039?:
0097            706   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:142: TIMER_OUT_2 = !TIMER_OUT_2;
0097 B2A5       707            cpl     _P2_5
0099            708   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:143: interruptCount = 0;
0099 755800     709            mov     _interruptCount,#0x00
009C            710   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:144: if(direction == 1)
009C 7401       711            mov     a,#0x01
009E B5D878     712            cjne    a,_direction,L003020?
00A1            713   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:146: if(stepCount == 0)
00A1 E598       714            mov     a,_stepCount
00A3 7001       715            jnz     L003008?
00A5            716   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:148: PORT1 = 1;
00A5 D2A1       717            setb    _P2_1
00A7            718   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:149: PORT2 = 1;
00A7 D2A2       719            setb    _P2_2
00A9            720   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:150: PORT3 = 0;
00A9 C2A3       721            clr     _P2_3
00AB            722   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:151: PORT4 = 0;
00AB C2A4       723            clr     _P2_4
00AD 8001       724            sjmp    L003021?
00AF            725   L003008?:
00AF            726   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:153: else if(stepCount == 1)
00AF 7401       727            mov     a,#0x01
00B1 B59838     728            cjne    a,_stepCount,L003005?
00B4            729   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:155: PORT1 = 0;
00B4 C2A1       730            clr     _P2_1
00B6            731   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:156: PORT2 = 1;
00B6 D2A2       732            setb    _P2_2
00B8            733   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:157: PORT3 = 1;
00B8 D2A3       734            setb    _P2_3
00BA            735   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:158: PORT4 = 0;
00BA C2A4       736            clr     _P2_4
00BC 8001       737            sjmp    L003021?
00BE            738   L003005?:
00BE            739   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:160: else if(stepCount == 2)
00BE 7402       740            mov     a,#0x02
00C0 B59878     741            cjne    a,_stepCount,L003002?
00C3            742   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:162: PORT1 = 0;
00C3 C2A1       743            clr     _P2_1
00C5            744   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:163: PORT2 = 0;
00C5 C2A2       745            clr     _P2_2
00C7            746   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:164: PORT3 = 1;
00C7 D2A3       747            setb    _P2_3
00C9            748   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:165: PORT4 = 1;
00C9 D2A4       749            setb    _P2_4
00CB 8001       750            sjmp    L003021?
00CD            751   L003002?:
00CD            752   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:169: PORT1 = 1;
00CD D2A1       753            setb    _P2_1
00CF            754   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:170: PORT2 = 0;
00CF C2A2       755            clr     _P2_2
00D1            756   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:171: PORT3 = 0;
00D1 C2A3       757            clr     _P2_3
00D3            758   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:172: PORT4 = 1;
00D3 D2A4       759            setb    _P2_4
00D5 8001       760            sjmp    L003021?
00D7            761   L003020?:
00D7            762   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:177: if(stepCount == 0)
00D7 E598       763            mov     a,_stepCount
00D9 7001       764            jnz     L003017?
00DB            765   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:179: PORT1 = 1;
00DB D2A1       766            setb    _P2_1
00DD            767   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:180: PORT2 = 0;
00DD C2A2       768            clr     _P2_2
00DF            769   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:181: PORT3 = 0;
00DF C2A3       770            clr     _P2_3
00E1            771   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:182: PORT4 = 1;
00E1 D2A4       772            setb    _P2_4
00E3 8001       773            sjmp    L003021?
00E5            774   L003017?:
00E5            775   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:184: else if(stepCount == 1)
00E5 7401       776            mov     a,#0x01
00E7 B598F8     777            cjne    a,_stepCount,L003014?
00EA            778   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:186: PORT1 = 0;
00EA C2A1       779            clr     _P2_1
00EC            780   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:187: PORT2 = 0;
00EC C2A2       781            clr     _P2_2
00EE            782   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:188: PORT3 = 1;
00EE D2A3       783            setb    _P2_3
00F0            784   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:189: PORT4 = 1;
00F0 D2A4       785            setb    _P2_4
00F2 8001       786            sjmp    L003021?
00F4            787   L003014?:
00F4            788   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:191: else if(stepCount == 2)
00F4 7402       789            mov     a,#0x02
00F6 B59838     790            cjne    a,_stepCount,L003011?
00F9            791   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:193: PORT1 = 0;
00F9 C2A1       792            clr     _P2_1
00FB            793   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:194: PORT2 = 1;
00FB D2A2       794            setb    _P2_2
00FD            795   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:195: PORT3 = 1;
00FD D2A3       796            setb    _P2_3
00FF            797   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:196: PORT4 = 0;
00FF C2A4       798            clr     _P2_4
0101 8001       799            sjmp    L003021?
0103            800   L003011?:
0103            801   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:200: PORT1 = 1;
0103 D2A1       802            setb    _P2_1
0105            803   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:201: PORT2 = 1;
0105 D2A2       804            setb    _P2_2
0107            805   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:202: PORT3 = 0;
0107 C2A3       806            clr     _P2_3
0109            807   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:203: PORT4 = 1;
0109 D2A4       808            setb    _P2_4
010B            809   L003021?:
010B            810   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:209: stepCount++;
010B 0598       811            inc     _stepCount
010D            812   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:210: totalSteps++;
010D 0518       813            inc     _totalSteps
010F E4         814            clr     a
0110 B51878     815            cjne    a,_totalSteps,L003052?
0113 0519       816            inc     (_totalSteps + 1)
0115            817   L003052?:
0115            818   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:211: if(stepCount > 3)
0115 E598       819            mov     a,_stepCount
0117 24FC       820            add     a,#0xff - 0x03
0119 5001       821            jnc     L003027?
011B            822   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:212: stepCount = 0;
011B 759800     823            mov     _stepCount,#0x00
011E 8001       824            sjmp    L003027?
0120            825   L003025?:
0120            826   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:215: interruptCount++;
0120 0558       827            inc     _interruptCount
0122            828   L003027?:
0122 D0D0       829            pop     psw
0124 D0E0       830            pop     acc
0126 32         831            reti
0127            832   ;        eliminated unneeded push/pop dpl
0127            833   ;        eliminated unneeded push/pop dph
0127            834   ;        eliminated unneeded push/pop b
0127            835   ;------------------------------------------------------------
0127            836   ;Allocation info for local variables in function 'Timer3_ISR'
0127            837   ;------------------------------------------------------------
0127            838   ;------------------------------------------------------------
0127            839   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:219: void Timer3_ISR (void) interrupt INTERRUPT_TIMER3
0127            840   ;        -----------------------------------------
0127            841   ;         function Timer3_ISR
0127            842   ;        -----------------------------------------
0127            843   _Timer3_ISR:
0127            844   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:221: SFRPAGE=0x0;
0127 75A700     845            mov     _SFRPAGE,#0x00
012A            846   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:222: TMR3CN0&=0b_0011_1111; // Clear Timer3 interrupt flags
012A 53913F     847            anl     _TMR3CN0,#0x3F
012D            848   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:224: adcFlag = 1;
012D 751801     849            mov     _adcFlag,#0x01
0130 32         850            reti
0131            851   ;        eliminated unneeded push/pop psw
0131            852   ;        eliminated unneeded push/pop dpl
0131            853   ;        eliminated unneeded push/pop dph
0131            854   ;        eliminated unneeded push/pop b
0131            855   ;        eliminated unneeded push/pop acc
0131            856   ;------------------------------------------------------------
0131            857   ;Allocation info for local variables in function 'getsn'
0131            858   ;------------------------------------------------------------
0131            859   ;len                       Allocated with name '_getsn_PARM_2'
0131            860   ;buff                      Allocated with name '_getsn_buff_1_59'
0131            861   ;j                         Allocated with name '_getsn_sloc0_1_0'
0131            862   ;c                         Allocated to registers r3 
0131            863   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
0131            864   ;------------------------------------------------------------
0131            865   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:227: int getsn (char * buff, int len)
0131            866   ;        -----------------------------------------
0131            867   ;         function getsn
0131            868   ;        -----------------------------------------
0131            869   _getsn:
0131 858278     870            mov     _getsn_buff_1_59,dpl
0134 858379     871            mov     (_getsn_buff_1_59 + 1),dph
0137 85F07A     872            mov     (_getsn_buff_1_59 + 2),b
013A            873   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:232: for(j=0; j<(len-1); j++)
013A E4         874            clr     a
013B F5C8       875            mov     _getsn_sloc0_1_0,a
013D F5C9       876            mov     (_getsn_sloc0_1_0 + 1),a
013F E5D8       877            mov     a,_getsn_PARM_2
0141 24FF       878            add     a,#0xff
0143 FF         879            mov     r7,a
0144 E5D9       880            mov     a,(_getsn_PARM_2 + 1)
0146 34FF       881            addc    a,#0xff
0148 F8         882            mov     r0,a
0149 7900       883            mov     r1,#0x00
014B 7A00       884            mov     r2,#0x00
014D            885   L005005?:
014D C3         886            clr     c
014E E9         887            mov     a,r1
014F 9F         888            subb    a,r7
0150 EA         889            mov     a,r2
0151 6480       890            xrl     a,#0x80
0153 88F0       891            mov     b,r0
0155 63F080     892            xrl     b,#0x80
0158 95F0       893            subb    a,b
015A 5001       894            jnc     L005008?
015C            895   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:234: c=getchar();
015C C002       896            push    ar2
015E C007       897            push    ar7
0160 C000       898            push    ar0
0162 C001       899            push    ar1
0164 120100     900            lcall   _getchar
0167 AB82       901            mov     r3,dpl
0169 D001       902            pop     ar1
016B D000       903            pop     ar0
016D D007       904            pop     ar7
016F D002       905            pop     ar2
0171            906   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:235: if ( (c=='\n') || (c=='\r') )
0171 BB0A40     907            cjne    r3,#0x0A,L005015?
0174 8001       908            sjmp    L005001?
0176            909   L005015?:
0176 BB0DC0     910            cjne    r3,#0x0D,L005002?
0179            911   L005001?:
0179            912   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:237: buff[j]=0;
0179 E5C8       913            mov     a,_getsn_sloc0_1_0
017B 2578       914            add     a,_getsn_buff_1_59
017D FC         915            mov     r4,a
017E E5C9       916            mov     a,(_getsn_sloc0_1_0 + 1)
0180 3579       917            addc    a,(_getsn_buff_1_59 + 1)
0182 FD         918            mov     r5,a
0183 AE7A       919            mov     r6,(_getsn_buff_1_59 + 2)
0185 8C82       920            mov     dpl,r4
0187 8D83       921            mov     dph,r5
0189 8EF0       922            mov     b,r6
018B E4         923            clr     a
018C 120100     924            lcall   __gptrput
018F            925   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:238: return j;
018F 85C882     926            mov     dpl,_getsn_sloc0_1_0
0192 85C983     927            mov     dph,(_getsn_sloc0_1_0 + 1)
0195 22         928            ret
0196            929   L005002?:
0196            930   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:242: buff[j]=c;
0196 E9         931            mov     a,r1
0197 2578       932            add     a,_getsn_buff_1_59
0199 FC         933            mov     r4,a
019A EA         934            mov     a,r2
019B 3579       935            addc    a,(_getsn_buff_1_59 + 1)
019D FD         936            mov     r5,a
019E AE7A       937            mov     r6,(_getsn_buff_1_59 + 2)
01A0 8C82       938            mov     dpl,r4
01A2 8D83       939            mov     dph,r5
01A4 8EF0       940            mov     b,r6
01A6 EB         941            mov     a,r3
01A7 120100     942            lcall   __gptrput
01AA            943   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:232: for(j=0; j<(len-1); j++)
01AA 09         944            inc     r1
01AB B90040     945            cjne    r1,#0x00,L005018?
01AE 0A         946            inc     r2
01AF            947   L005018?:
01AF 89C8       948            mov     _getsn_sloc0_1_0,r1
01B1 8AC9       949            mov     (_getsn_sloc0_1_0 + 1),r2
01B3 8001       950            sjmp    L005005?
01B5            951   L005008?:
01B5            952   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:245: buff[j]=0;
01B5 E5C8       953            mov     a,_getsn_sloc0_1_0
01B7 2578       954            add     a,_getsn_buff_1_59
01B9 FA         955            mov     r2,a
01BA E5C9       956            mov     a,(_getsn_sloc0_1_0 + 1)
01BC 3579       957            addc    a,(_getsn_buff_1_59 + 1)
01BE FB         958            mov     r3,a
01BF AC7A       959            mov     r4,(_getsn_buff_1_59 + 2)
01C1 8A82       960            mov     dpl,r2
01C3 8B83       961            mov     dph,r3
01C5 8CF0       962            mov     b,r4
01C7 E4         963            clr     a
01C8 120100     964            lcall   __gptrput
01CB            965   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:246: return len;
01CB 85D882     966            mov     dpl,_getsn_PARM_2
01CE 85D983     967            mov     dph,(_getsn_PARM_2 + 1)
01D1 22         968            ret
01D2            969   ;------------------------------------------------------------
01D2            970   ;Allocation info for local variables in function 'InitADC'
01D2            971   ;------------------------------------------------------------
01D2            972   ;------------------------------------------------------------
01D2            973   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:249: void InitADC (void)
01D2            974   ;        -----------------------------------------
01D2            975   ;         function InitADC
01D2            976   ;        -----------------------------------------
01D2            977   _InitADC:
01D2            978   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:251: SFRPAGE = 0x00;
01D2 75A700     979            mov     _SFRPAGE,#0x00
01D5            980   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:252: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
01D5 75B280     981            mov     _ADC0CN1,#0x80
01D8            982   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:253: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
01D8 75BCF8     983            mov     _ADC0CF0,#0xF8
01DB            984   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:254: ADC0CF1 = 0b_0_0_011110; // Same as default for now
01DB 75B91E     985            mov     _ADC0CF1,#0x1E
01DE            986   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:255: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
01DE 75E800     987            mov     _ADC0CN0,#0x00
01E1            988   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:256: ADC0CF2 = 0b_0_01_11111 ; // GND pin, Vref=VDD
01E1 75DF3F     989            mov     _ADC0CF2,#0x3F
01E4            990   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:257: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
01E4 75B300     991            mov     _ADC0CN2,#0x00
01E7            992   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:258: ADEN=1; // Enable ADC
01E7 D2EF       993            setb    _ADEN
01E9 22         994            ret
01EA            995   ;------------------------------------------------------------
01EA            996   ;Allocation info for local variables in function 'ADC_at_Pin'
01EA            997   ;------------------------------------------------------------
01EA            998   ;pin                       Allocated to registers 
01EA            999   ;------------------------------------------------------------
01EA           1000   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:261: unsigned int ADC_at_Pin(unsigned char pin)
01EA           1001   ;        -----------------------------------------
01EA           1002   ;         function ADC_at_Pin
01EA           1003   ;        -----------------------------------------
01EA           1004   _ADC_at_Pin:
01EA 8582BB    1005            mov     _ADC0MX,dpl
01ED           1006   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:264: ADBUSY=1;       // Dummy conversion first to select new pin
01ED D2EC      1007            setb    _ADBUSY
01EF           1008   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:265: while (ADBUSY); // Wait for dummy conversion to finish
01EF           1009   L007001?:
01EF 20EC80    1010            jb      _ADBUSY,L007001?
01F2           1011   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:266: ADBUSY = 1;     // Convert voltage at the pin
01F2 D2EC      1012            setb    _ADBUSY
01F4           1013   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:267: while (ADBUSY); // Wait for conversion to complete
01F4           1014   L007004?:
01F4 20ECC0    1015            jb      _ADBUSY,L007004?
01F7           1016   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:268: return (ADC0);
01F7 85BD82    1017            mov     dpl,_ADC0
01FA 85BE83    1018            mov     dph,(_ADC0 >> 8)
01FD 22        1019            ret
01FE           1020   ;------------------------------------------------------------
01FE           1021   ;Allocation info for local variables in function 'Volts_at_Pin'
01FE           1022   ;------------------------------------------------------------
01FE           1023   ;pin                       Allocated to registers r2 
01FE           1024   ;------------------------------------------------------------
01FE           1025   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:271: float Volts_at_Pin(unsigned char pin)
01FE           1026   ;        -----------------------------------------
01FE           1027   ;         function Volts_at_Pin
01FE           1028   ;        -----------------------------------------
01FE           1029   _Volts_at_Pin:
01FE           1030   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:273: return ((ADC_at_Pin(pin)*VDD)/16383.0);
01FE 120100    1031            lcall   _ADC_at_Pin
0201 120100    1032            lcall   ___uint2fs
0204 AA82      1033            mov     r2,dpl
0206 AB83      1034            mov     r3,dph
0208 ACF0      1035            mov     r4,b
020A FD        1036            mov     r5,a
020B C002      1037            push    ar2
020D C003      1038            push    ar3
020F C004      1039            push    ar4
0211 C005      1040            push    ar5
0213 909FBE    1041            mov     dptr,#0x9FBE
0216 75F052    1042            mov     b,#0x52
0219 7440      1043            mov     a,#0x40
021B 120100    1044            lcall   ___fsmul
021E AA82      1045            mov     r2,dpl
0220 AB83      1046            mov     r3,dph
0222 ACF0      1047            mov     r4,b
0224 FD        1048            mov     r5,a
0225 E581      1049            mov     a,sp
0227 24FC      1050            add     a,#0xfc
0229 F581      1051            mov     sp,a
022B E4        1052            clr     a
022C C0E0      1053            push    acc
022E 74FC      1054            mov     a,#0xFC
0230 C0E0      1055            push    acc
0232 747F      1056            mov     a,#0x7F
0234 C0E0      1057            push    acc
0236 7446      1058            mov     a,#0x46
0238 C0E0      1059            push    acc
023A 8A82      1060            mov     dpl,r2
023C 8B83      1061            mov     dph,r3
023E 8CF0      1062            mov     b,r4
0240 ED        1063            mov     a,r5
0241 120100    1064            lcall   ___fsdiv
0244 AA82      1065            mov     r2,dpl
0246 AB83      1066            mov     r3,dph
0248 ACF0      1067            mov     r4,b
024A FD        1068            mov     r5,a
024B E581      1069            mov     a,sp
024D 24FC      1070            add     a,#0xfc
024F F581      1071            mov     sp,a
0251 8A82      1072            mov     dpl,r2
0253 8B83      1073            mov     dph,r3
0255 8CF0      1074            mov     b,r4
0257 ED        1075            mov     a,r5
0258 22        1076            ret
0259           1077   ;------------------------------------------------------------
0259           1078   ;Allocation info for local variables in function 'ConfigPCA0'
0259           1079   ;------------------------------------------------------------
0259           1080   ;------------------------------------------------------------
0259           1081   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:276: void ConfigPCA0()
0259           1082   ;        -----------------------------------------
0259           1083   ;         function ConfigPCA0
0259           1084   ;        -----------------------------------------
0259           1085   _ConfigPCA0:
0259           1086   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:278: SFRPAGE = 0x00; //Navigate to SFR page for register write
0259 75A700    1087            mov     _SFRPAGE,#0x00
025C           1088   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:280: PCA0POL = 0b_0000_0000; //Set the output polarity for all channels to default (no inversion)
025C 759600    1089            mov     _PCA0POL,#0x00
025F           1090   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:282: PCA0MD = 0b_0000_0000; //Set PCA mode to operate even in idle mode with SYSCLK/12
025F 75D900    1091            mov     _PCA0MD,#0x00
0262           1092   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:283: PCA0PWM = 0b_0000_0000;        //Enable 8-bit PWM with no overflow flag set and no interrupts enabled
0262 75F700    1093            mov     _PCA0PWM,#0x00
0265           1094   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:284: PCA0CLR = 0b_0000_0000; //Disable comparator clear for all modules
0265 759C00    1095            mov     _PCA0CLR,#0x00
0268           1096   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:285: PCA0CENT = 0b_00_000000; //Set all modules to edge aligned mode (bits 6 and 7 are reserved and must be 00)
0268 759E00    1097            mov     _PCA0CENT,#0x00
026B           1098   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:287: PCA0CN0 = 0b_0100_0000; //Start the PCA counter/timer (CR bit)         
026B 75D840    1099            mov     _PCA0CN0,#0x40
026E           1100   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:290: PCA0CPM0 = 0b_0100_0010;//Configure Channel 0 to function in 8-bit PWM mode
026E 75DA42    1101            mov     _PCA0CPM0,#0x42
0271           1102   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:291: PCA0CPH0 = 205; //Load the PCA0CP0 high byte with an initial value of 128(binary 1000_0000)
0271 75FCCD    1103            mov     _PCA0CPH0,#0xCD
0274           1104   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:294: PCA0CPM1 = 0b_0100_0010; //Configure Channel 1 to function in 8-bit PWM mode
0274 75DB42    1105            mov     _PCA0CPM1,#0x42
0277           1106   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:295: PCA0CPH1 = 128; //Load the PCA0CP1 high byte 
0277 75EA80    1107            mov     _PCA0CPH1,#0x80
027A 22        1108            ret
027B           1109   ;------------------------------------------------------------
027B           1110   ;Allocation info for local variables in function 'ConfigurePins'
027B           1111   ;------------------------------------------------------------
027B           1112   ;------------------------------------------------------------
027B           1113   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:299: void ConfigurePins()
027B           1114   ;        -----------------------------------------
027B           1115   ;         function ConfigurePins
027B           1116   ;        -----------------------------------------
027B           1117   _ConfigurePins:
027B           1118   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:301: P0SKIP |= 0b_1100_1111; //Skip all P0 bits except bits 4 and 5 (UART0)
027B 43D4CF    1119            orl     _P0SKIP,#0xCF
027E           1120   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:303: SFRPAGE = 0x20;
027E 75A720    1121            mov     _SFRPAGE,#0x20
0281           1122   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:305: P0MDIN &= 0b_1111_1011; //Set P0 bit 2 to analog input for ADC
0281 53F1FB    1123            anl     _P0MDIN,#0xFB
0284           1124   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:306: P1MDIN &= 0b_1110_1111; //Set P1 bit 4 to analog input for ADC
0284 53F2EF    1125            anl     _P1MDIN,#0xEF
0287           1126   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:308: SFRPAGE = 0x00;
0287 75A700    1127            mov     _SFRPAGE,#0x00
028A           1128   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:310: P1SKIP |= 0b_0111_1111; //Skip all P1 bits except bit 7
028A 43D57F    1129            orl     _P1SKIP,#0x7F
028D           1130   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:312: P2MDOUT |= 0b_0111_1111; //Set P2 bits 0, 1, 2, 3, 4, 5 to push-pull output mode
028D 43A67F    1131            orl     _P2MDOUT,#0x7F
0290           1132   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:313: P1MDOUT |= 0b_1000_0000; //Set P1 bit 7 to push-pull output mode       
0290 43A580    1133            orl     _P1MDOUT,#0x80
0293 22        1134            ret
0294           1135   ;------------------------------------------------------------
0294           1136   ;Allocation info for local variables in function 'main'
0294           1137   ;------------------------------------------------------------
0294           1138   ;vReadings                 Allocated with name '_main_vReadings_1_73'
0294           1139   ;voltages                  Allocated with name '_main_voltages_1_73'
0294           1140   ;measureCount              Allocated with name '_main_measureCount_1_73'
0294           1141   ;totalMeasurements         Allocated to registers 
0294           1142   ;errorConstant             Allocated to registers 
0294           1143   ;readingADCCounter         Allocated to registers r4 r5 
0294           1144   ;readingADCTotalInterrupts Allocated to registers 
0294           1145   ;sloc0                     Allocated with name '_main_sloc0_1_0'
0294           1146   ;------------------------------------------------------------
0294           1147   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:316: void main (void) 
0294           1148   ;        -----------------------------------------
0294           1149   ;         function main
0294           1150   ;        -----------------------------------------
0294           1151   _main:
0294           1152   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:324: int measureCount = 0;
0294           1153   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:329: int readingADCCounter = 0;
0294 E4        1154            clr     a
0295 F5B8      1155            mov     _main_measureCount_1_73,a
0297 F5B9      1156            mov     (_main_measureCount_1_73 + 1),a
0299 FC        1157            mov     r4,a
029A FD        1158            mov     r5,a
029B           1159   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:333: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
029B C004      1160            push    ar4
029D C005      1161            push    ar5
029F 7400      1162            mov     a,#__str_0
02A1 C0E0      1163            push    acc
02A3 74C3      1164            mov     a,#(__str_0 >> 8)
02A5 C0E0      1165            push    acc
02A7 7480      1166            mov     a,#0x80
02A9 C0E0      1167            push    acc
02AB 120100    1168            lcall   _printf
02AE 1581      1169            dec     sp
02B0 1581      1170            dec     sp
02B2 1581      1171            dec     sp
02B4           1172   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:335: ConfigurePins();
02B4 120100    1173            lcall   _ConfigurePins
02B7           1174   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:337: ConfigPCA0();
02B7 120100    1175            lcall   _ConfigPCA0
02BA           1176   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:339: InitADC();
02BA 120100    1177            lcall   _InitADC
02BD D005      1178            pop     ar5
02BF D004      1179            pop     ar4
02C1           1180   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:341: while(1) //Main loop of the program begins here
02C1           1181   L011010?:
02C1           1182   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:345: if(adcFlag == 1)
02C1 7401      1183            mov     a,#0x01
02C3 B51880    1184            cjne    a,_adcFlag,L011010?
02C6           1185   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:348: adcFlag = 0;
02C6 751800    1186            mov     _adcFlag,#0x00
02C9           1187   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:351: if(readingADCCounter < readingADCTotalInterrupts)
02C9 C3        1188            clr     c
02CA EC        1189            mov     a,r4
02CB 9432      1190            subb    a,#0x32
02CD ED        1191            mov     a,r5
02CE 6480      1192            xrl     a,#0x80
02D0 9480      1193            subb    a,#0x80
02D2 5001      1194            jnc     L011005?
02D4           1195   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:352: readingADCCounter++;
02D4 0C        1196            inc     r4
02D5 BC0080    1197            cjne    r4,#0x00,L011010?
02D8 0D        1198            inc     r5
02D9 8001      1199            sjmp    L011010?
02DB           1200   L011005?:
02DB           1201   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:356: if(measureCount < totalMeasurements)
02DB C3        1202            clr     c
02DC E5B8      1203            mov     a,_main_measureCount_1_73
02DE 9414      1204            subb    a,#0x14
02E0 E5B9      1205            mov     a,(_main_measureCount_1_73 + 1)
02E2 6480      1206            xrl     a,#0x80
02E4 9480      1207            subb    a,#0x80
02E6 4001      1208            jc      L011022?
02E8 020100    1209            ljmp    L011002?
02EB           1210   L011022?:
02EB           1211   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:359: voltages[0] += Volts_at_Pin(QFP32_MUX_P1_4);
02EB 8568F8    1212            mov     _main_sloc0_1_0,_main_voltages_1_73
02EE 8569F9    1213            mov     (_main_sloc0_1_0 + 1),(_main_voltages_1_73 + 1)
02F1 856AFA    1214            mov     (_main_sloc0_1_0 + 2),(_main_voltages_1_73 + 2)
02F4 856BFB    1215            mov     (_main_sloc0_1_0 + 3),(_main_voltages_1_73 + 3)
02F7 75820A    1216            mov     dpl,#0x0A
02FA 120100    1217            lcall   _Volts_at_Pin
02FD AA82      1218            mov     r2,dpl
02FF AB83      1219            mov     r3,dph
0301 AEF0      1220            mov     r6,b
0303 FF        1221            mov     r7,a
0304 C002      1222            push    ar2
0306 C003      1223            push    ar3
0308 C006      1224            push    ar6
030A C007      1225            push    ar7
030C 85F882    1226            mov     dpl,_main_sloc0_1_0
030F 85F983    1227            mov     dph,(_main_sloc0_1_0 + 1)
0312 85FAF0    1228            mov     b,(_main_sloc0_1_0 + 2)
0315 E5FB      1229            mov     a,(_main_sloc0_1_0 + 3)
0317 120100    1230            lcall   ___fsadd
031A AA82      1231            mov     r2,dpl
031C AB83      1232            mov     r3,dph
031E AEF0      1233            mov     r6,b
0320 FF        1234            mov     r7,a
0321 E581      1235            mov     a,sp
0323 24FC      1236            add     a,#0xfc
0325 F581      1237            mov     sp,a
0327 8A68      1238            mov     _main_voltages_1_73,r2
0329 8B69      1239            mov     (_main_voltages_1_73 + 1),r3
032B 8E6A      1240            mov     (_main_voltages_1_73 + 2),r6
032D 8F6B      1241            mov     (_main_voltages_1_73 + 3),r7
032F           1242   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:360: voltages[1] += Volts_at_Pin(QFP32_MUX_P0_2);
032F 856CF8    1243            mov     _main_sloc0_1_0,(_main_voltages_1_73 + 0x0004)
0332 856DF9    1244            mov     (_main_sloc0_1_0 + 1),((_main_voltages_1_73 + 0x0004) + 1)
0335 856EFA    1245            mov     (_main_sloc0_1_0 + 2),((_main_voltages_1_73 + 0x0004) + 2)
0338 856FFB    1246            mov     (_main_sloc0_1_0 + 3),((_main_voltages_1_73 + 0x0004) + 3)
033B 758201    1247            mov     dpl,#0x01
033E 120100    1248            lcall   _Volts_at_Pin
0341 AA82      1249            mov     r2,dpl
0343 AB83      1250            mov     r3,dph
0345 AEF0      1251            mov     r6,b
0347 FF        1252            mov     r7,a
0348 C002      1253            push    ar2
034A C003      1254            push    ar3
034C C006      1255            push    ar6
034E C007      1256            push    ar7
0350 85F882    1257            mov     dpl,_main_sloc0_1_0
0353 85F983    1258            mov     dph,(_main_sloc0_1_0 + 1)
0356 85FAF0    1259            mov     b,(_main_sloc0_1_0 + 2)
0359 E5FB      1260            mov     a,(_main_sloc0_1_0 + 3)
035B 120100    1261            lcall   ___fsadd
035E AA82      1262            mov     r2,dpl
0360 AB83      1263            mov     r3,dph
0362 AEF0      1264            mov     r6,b
0364 FF        1265            mov     r7,a
0365 E581      1266            mov     a,sp
0367 24FC      1267            add     a,#0xfc
0369 F581      1268            mov     sp,a
036B 8A6C      1269            mov     (_main_voltages_1_73 + 0x0004),r2
036D 8B6D      1270            mov     ((_main_voltages_1_73 + 0x0004) + 1),r3
036F 8E6E      1271            mov     ((_main_voltages_1_73 + 0x0004) + 2),r6
0371 8F6F      1272            mov     ((_main_voltages_1_73 + 0x0004) + 3),r7
0373           1273   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:363: measureCount++;
0373 05B8      1274            inc     _main_measureCount_1_73
0375 E4        1275            clr     a
0376 B5B8C0    1276            cjne    a,_main_measureCount_1_73,L011023?
0379 05B9      1277            inc     (_main_measureCount_1_73 + 1)
037B           1278   L011023?:
037B 020100    1279            ljmp    L011003?
037E           1280   L011002?:
037E           1281   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:368: vReadings[0] = (voltages[0]/totalMeasurements) - errorConstant;
037E E4        1282            clr     a
037F C0E0      1283            push    acc
0381 C0E0      1284            push    acc
0383 74A0      1285            mov     a,#0xA0
0385 C0E0      1286            push    acc
0387 7441      1287            mov     a,#0x41
0389 C0E0      1288            push    acc
038B 856882    1289            mov     dpl,_main_voltages_1_73
038E 856983    1290            mov     dph,(_main_voltages_1_73 + 1)
0391 856AF0    1291            mov     b,(_main_voltages_1_73 + 2)
0394 E56B      1292            mov     a,(_main_voltages_1_73 + 3)
0396 120100    1293            lcall   ___fsdiv
0399 AA82      1294            mov     r2,dpl
039B AB83      1295            mov     r3,dph
039D AEF0      1296            mov     r6,b
039F FF        1297            mov     r7,a
03A0 E581      1298            mov     a,sp
03A2 24FC      1299            add     a,#0xfc
03A4 F581      1300            mov     sp,a
03A6 74B8      1301            mov     a,#0xB8
03A8 C0E0      1302            push    acc
03AA 741E      1303            mov     a,#0x1E
03AC C0E0      1304            push    acc
03AE 7405      1305            mov     a,#0x05
03B0 C0E0      1306            push    acc
03B2 743E      1307            mov     a,#0x3E
03B4 C0E0      1308            push    acc
03B6 8A82      1309            mov     dpl,r2
03B8 8B83      1310            mov     dph,r3
03BA 8EF0      1311            mov     b,r6
03BC EF        1312            mov     a,r7
03BD 120100    1313            lcall   ___fssub
03C0 8582F8    1314            mov     _main_sloc0_1_0,dpl
03C3 8583F9    1315            mov     (_main_sloc0_1_0 + 1),dph
03C6 85F0FA    1316            mov     (_main_sloc0_1_0 + 2),b
03C9 F5FB      1317            mov     (_main_sloc0_1_0 + 3),a
03CB E581      1318            mov     a,sp
03CD 24FC      1319            add     a,#0xfc
03CF F581      1320            mov     sp,a
03D1 85F818    1321            mov     _main_vReadings_1_73,_main_sloc0_1_0
03D4 85F919    1322            mov     (_main_vReadings_1_73 + 1),(_main_sloc0_1_0 + 1)
03D7 85FA1A    1323            mov     (_main_vReadings_1_73 + 2),(_main_sloc0_1_0 + 2)
03DA 85FB1B    1324            mov     (_main_vReadings_1_73 + 3),(_main_sloc0_1_0 + 3)
03DD           1325   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:369: vReadings[1] = (voltages[1]/totalMeasurements) - errorConstant;
03DD E4        1326            clr     a
03DE C0E0      1327            push    acc
03E0 C0E0      1328            push    acc
03E2 74A0      1329            mov     a,#0xA0
03E4 C0E0      1330            push    acc
03E6 7441      1331            mov     a,#0x41
03E8 C0E0      1332            push    acc
03EA 856C82    1333            mov     dpl,(_main_voltages_1_73 + 0x0004)
03ED 856D83    1334            mov     dph,((_main_voltages_1_73 + 0x0004) + 1)
03F0 856EF0    1335            mov     b,((_main_voltages_1_73 + 0x0004) + 2)
03F3 E56F      1336            mov     a,((_main_voltages_1_73 + 0x0004) + 3)
03F5 120100    1337            lcall   ___fsdiv
03F8 AA82      1338            mov     r2,dpl
03FA AB83      1339            mov     r3,dph
03FC AEF0      1340            mov     r6,b
03FE FF        1341            mov     r7,a
03FF E581      1342            mov     a,sp
0401 24FC      1343            add     a,#0xfc
0403 F581      1344            mov     sp,a
0405 74B8      1345            mov     a,#0xB8
0407 C0E0      1346            push    acc
0409 741E      1347            mov     a,#0x1E
040B C0E0      1348            push    acc
040D 7405      1349            mov     a,#0x05
040F C0E0      1350            push    acc
0411 743E      1351            mov     a,#0x3E
0413 C0E0      1352            push    acc
0415 8A82      1353            mov     dpl,r2
0417 8B83      1354            mov     dph,r3
0419 8EF0      1355            mov     b,r6
041B EF        1356            mov     a,r7
041C 120100    1357            lcall   ___fssub
041F AA82      1358            mov     r2,dpl
0421 AB83      1359            mov     r3,dph
0423 AEF0      1360            mov     r6,b
0425 FF        1361            mov     r7,a
0426 E581      1362            mov     a,sp
0428 24FC      1363            add     a,#0xfc
042A F581      1364            mov     sp,a
042C 8A1C      1365            mov     (_main_vReadings_1_73 + 0x0004),r2
042E 8B1D      1366            mov     ((_main_vReadings_1_73 + 0x0004) + 1),r3
0430 8E1E      1367            mov     ((_main_vReadings_1_73 + 0x0004) + 2),r6
0432 8F1F      1368            mov     ((_main_vReadings_1_73 + 0x0004) + 3),r7
0434           1369   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:372: printf("V(P1.4)=%4.2fV, V(P0.2)=%4.2fV\r", vReadings[0], vReadings[1]);
0434 C002      1370            push    ar2
0436 C003      1371            push    ar3
0438 C006      1372            push    ar6
043A C007      1373            push    ar7
043C C0F8      1374            push    _main_sloc0_1_0
043E C0F9      1375            push    (_main_sloc0_1_0 + 1)
0440 C0FA      1376            push    (_main_sloc0_1_0 + 2)
0442 C0FB      1377            push    (_main_sloc0_1_0 + 3)
0444 7480      1378            mov     a,#__str_1
0446 C0E0      1379            push    acc
0448 74C5      1380            mov     a,#(__str_1 >> 8)
044A C0E0      1381            push    acc
044C 7480      1382            mov     a,#0x80
044E C0E0      1383            push    acc
0450 120100    1384            lcall   _printf
0453 E581      1385            mov     a,sp
0455 24F5      1386            add     a,#0xf5
0457 F581      1387            mov     sp,a
0459           1388   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:375: measureCount = 0;
0459           1389   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:376: voltages[0] = 0;
0459 E4        1390            clr a
045A F5B8      1391            mov _main_measureCount_1_73,a
045C F5B9      1392            mov (_main_measureCount_1_73 + 1),a
045E F568      1393            mov _main_voltages_1_73,a
0460 F569      1394            mov (_main_voltages_1_73 + 1),a
0462 F56A      1395            mov (_main_voltages_1_73 + 2),a
0464 F56B      1396            mov (_main_voltages_1_73 + 3),a
0466           1397   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:377: voltages[1] = 0;
0466 756C00    1398            mov     (_main_voltages_1_73 + 0x0004),#0x00
0469 756D00    1399            mov     ((_main_voltages_1_73 + 0x0004) + 1),#0x00
046C 756E00    1400            mov     ((_main_voltages_1_73 + 0x0004) + 2),#0x00
046F 756F00    1401            mov     ((_main_voltages_1_73 + 0x0004) + 3),#0x00
0472           1402   L011003?:
0472           1403   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:381: readingADCCounter = 0;
0472 7C00      1404            mov     r4,#0x00
0474 7D00      1405            mov     r5,#0x00
0476 020100    1406            ljmp    L011010?
0479           1407            rseg R_CSEG
0479           1408   
0000           1409            rseg R_XINIT
0000           1410   
0000           1411            rseg R_CONST
0000           1412   __str_0:
0000 1B        1413            db 0x1B
0001 5B324A    1414            db '[2J'
0004 00        1415            db 0x00
0005           1416   __str_1:
0005 56285031  1417            db 'V(P1.4)=%4.2fV, V(P0.2)=%4.2fV'
     2E34293D
     25342E32
     66562C20
     56285030
     2E32293D
     25342E32
     6656
0023 0D        1418            db 0x0D
0024 00        1419            db 0x00
0025           1420   
0076           1421            CSEG
0076           1422   
0076           1423   end
