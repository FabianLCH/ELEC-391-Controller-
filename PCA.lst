0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Tue Feb 26 10:17:28 2019
0000              5   ;--------------------------------------------------------
                  5   $name PCA
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _ConfigurePins
0000             29            public _takeStep
0000             30            public _ConfigPCA0
0000             31            public _Volts_at_Pin
0000             32            public _ADC_at_Pin
0000             33            public _InitADC
0000             34            public _getsn
0000             35            public _waitms
0000             36            public _Timer2_ISR
0000             37            public _Timer3us
0000             38            public __c51_external_startup
0000             39            public _getsn_PARM_2
0000             40            public _totalSteps
0000             41            public _stepCount
0000             42            public _stepFlag
0000             43   ;--------------------------------------------------------
0000             44   ; Special Function Registers
0000             45   ;--------------------------------------------------------
0000             46   _ACC            DATA 0xe0
0000             47   _ADC0ASAH       DATA 0xb6
0000             48   _ADC0ASAL       DATA 0xb5
0000             49   _ADC0ASCF       DATA 0xa1
0000             50   _ADC0ASCT       DATA 0xc7
0000             51   _ADC0CF0        DATA 0xbc
0000             52   _ADC0CF1        DATA 0xb9
0000             53   _ADC0CF2        DATA 0xdf
0000             54   _ADC0CN0        DATA 0xe8
0000             55   _ADC0CN1        DATA 0xb2
0000             56   _ADC0CN2        DATA 0xb3
0000             57   _ADC0GTH        DATA 0xc4
0000             58   _ADC0GTL        DATA 0xc3
0000             59   _ADC0H          DATA 0xbe
0000             60   _ADC0L          DATA 0xbd
0000             61   _ADC0LTH        DATA 0xc6
0000             62   _ADC0LTL        DATA 0xc5
0000             63   _ADC0MX         DATA 0xbb
0000             64   _B              DATA 0xf0
0000             65   _CKCON0         DATA 0x8e
0000             66   _CKCON1         DATA 0xa6
0000             67   _CLEN0          DATA 0xc6
0000             68   _CLIE0          DATA 0xc7
0000             69   _CLIF0          DATA 0xe8
0000             70   _CLKSEL         DATA 0xa9
0000             71   _CLOUT0         DATA 0xd1
0000             72   _CLU0CF         DATA 0xb1
0000             73   _CLU0FN         DATA 0xaf
0000             74   _CLU0MX         DATA 0x84
0000             75   _CLU1CF         DATA 0xb3
0000             76   _CLU1FN         DATA 0xb2
0000             77   _CLU1MX         DATA 0x85
0000             78   _CLU2CF         DATA 0xb6
0000             79   _CLU2FN         DATA 0xb5
0000             80   _CLU2MX         DATA 0x91
0000             81   _CLU3CF         DATA 0xbf
0000             82   _CLU3FN         DATA 0xbe
0000             83   _CLU3MX         DATA 0xae
0000             84   _CMP0CN0        DATA 0x9b
0000             85   _CMP0CN1        DATA 0x99
0000             86   _CMP0MD         DATA 0x9d
0000             87   _CMP0MX         DATA 0x9f
0000             88   _CMP1CN0        DATA 0xbf
0000             89   _CMP1CN1        DATA 0xac
0000             90   _CMP1MD         DATA 0xab
0000             91   _CMP1MX         DATA 0xaa
0000             92   _CRC0CN0        DATA 0xce
0000             93   _CRC0CN1        DATA 0x86
0000             94   _CRC0CNT        DATA 0xd3
0000             95   _CRC0DAT        DATA 0xcb
0000             96   _CRC0FLIP       DATA 0xcf
0000             97   _CRC0IN         DATA 0xca
0000             98   _CRC0ST         DATA 0xd2
0000             99   _DAC0CF0        DATA 0x91
0000            100   _DAC0CF1        DATA 0x92
0000            101   _DAC0H          DATA 0x85
0000            102   _DAC0L          DATA 0x84
0000            103   _DAC1CF0        DATA 0x93
0000            104   _DAC1CF1        DATA 0x94
0000            105   _DAC1H          DATA 0x8a
0000            106   _DAC1L          DATA 0x89
0000            107   _DAC2CF0        DATA 0x95
0000            108   _DAC2CF1        DATA 0x96
0000            109   _DAC2H          DATA 0x8c
0000            110   _DAC2L          DATA 0x8b
0000            111   _DAC3CF0        DATA 0x9a
0000            112   _DAC3CF1        DATA 0x9c
0000            113   _DAC3H          DATA 0x8e
0000            114   _DAC3L          DATA 0x8d
0000            115   _DACGCF0        DATA 0x88
0000            116   _DACGCF1        DATA 0x98
0000            117   _DACGCF2        DATA 0xa2
0000            118   _DERIVID        DATA 0xad
0000            119   _DEVICEID       DATA 0xb5
0000            120   _DPH            DATA 0x83
0000            121   _DPL            DATA 0x82
0000            122   _EIE1           DATA 0xe6
0000            123   _EIE2           DATA 0xf3
0000            124   _EIP1           DATA 0xbb
0000            125   _EIP1H          DATA 0xee
0000            126   _EIP2           DATA 0xed
0000            127   _EIP2H          DATA 0xf6
0000            128   _EMI0CN         DATA 0xe7
0000            129   _FLKEY          DATA 0xb7
0000            130   _HFO0CAL        DATA 0xc7
0000            131   _HFO1CAL        DATA 0xd6
0000            132   _HFOCN          DATA 0xef
0000            133   _I2C0ADM        DATA 0xff
0000            134   _I2C0CN0        DATA 0xba
0000            135   _I2C0DIN        DATA 0xbc
0000            136   _I2C0DOUT       DATA 0xbb
0000            137   _I2C0FCN0       DATA 0xad
0000            138   _I2C0FCN1       DATA 0xab
0000            139   _I2C0FCT        DATA 0xf5
0000            140   _I2C0SLAD       DATA 0xbd
0000            141   _I2C0STAT       DATA 0xb9
0000            142   _IE             DATA 0xa8
0000            143   _IP             DATA 0xb8
0000            144   _IPH            DATA 0xf2
0000            145   _IT01CF         DATA 0xe4
0000            146   _LFO0CN         DATA 0xb1
0000            147   _P0             DATA 0x80
0000            148   _P0MASK         DATA 0xfe
0000            149   _P0MAT          DATA 0xfd
0000            150   _P0MDIN         DATA 0xf1
0000            151   _P0MDOUT        DATA 0xa4
0000            152   _P0SKIP         DATA 0xd4
0000            153   _P1             DATA 0x90
0000            154   _P1MASK         DATA 0xee
0000            155   _P1MAT          DATA 0xed
0000            156   _P1MDIN         DATA 0xf2
0000            157   _P1MDOUT        DATA 0xa5
0000            158   _P1SKIP         DATA 0xd5
0000            159   _P2             DATA 0xa0
0000            160   _P2MASK         DATA 0xfc
0000            161   _P2MAT          DATA 0xfb
0000            162   _P2MDIN         DATA 0xf3
0000            163   _P2MDOUT        DATA 0xa6
0000            164   _P2SKIP         DATA 0xcc
0000            165   _P3             DATA 0xb0
0000            166   _P3MDIN         DATA 0xf4
0000            167   _P3MDOUT        DATA 0x9c
0000            168   _PCA0CENT       DATA 0x9e
0000            169   _PCA0CLR        DATA 0x9c
0000            170   _PCA0CN0        DATA 0xd8
0000            171   _PCA0CPH0       DATA 0xfc
0000            172   _PCA0CPH1       DATA 0xea
0000            173   _PCA0CPH2       DATA 0xec
0000            174   _PCA0CPH3       DATA 0xf5
0000            175   _PCA0CPH4       DATA 0x85
0000            176   _PCA0CPH5       DATA 0xde
0000            177   _PCA0CPL0       DATA 0xfb
0000            178   _PCA0CPL1       DATA 0xe9
0000            179   _PCA0CPL2       DATA 0xeb
0000            180   _PCA0CPL3       DATA 0xf4
0000            181   _PCA0CPL4       DATA 0x84
0000            182   _PCA0CPL5       DATA 0xdd
0000            183   _PCA0CPM0       DATA 0xda
0000            184   _PCA0CPM1       DATA 0xdb
0000            185   _PCA0CPM2       DATA 0xdc
0000            186   _PCA0CPM3       DATA 0xae
0000            187   _PCA0CPM4       DATA 0xaf
0000            188   _PCA0CPM5       DATA 0xcc
0000            189   _PCA0H          DATA 0xfa
0000            190   _PCA0L          DATA 0xf9
0000            191   _PCA0MD         DATA 0xd9
0000            192   _PCA0POL        DATA 0x96
0000            193   _PCA0PWM        DATA 0xf7
0000            194   _PCON0          DATA 0x87
0000            195   _PCON1          DATA 0xcd
0000            196   _PFE0CN         DATA 0xc1
0000            197   _PRTDRV         DATA 0xf6
0000            198   _PSCTL          DATA 0x8f
0000            199   _PSTAT0         DATA 0xaa
0000            200   _PSW            DATA 0xd0
0000            201   _REF0CN         DATA 0xd1
0000            202   _REG0CN         DATA 0xc9
0000            203   _REVID          DATA 0xb6
0000            204   _RSTSRC         DATA 0xef
0000            205   _SBCON1         DATA 0x94
0000            206   _SBRLH1         DATA 0x96
0000            207   _SBRLL1         DATA 0x95
0000            208   _SBUF           DATA 0x99
0000            209   _SBUF0          DATA 0x99
0000            210   _SBUF1          DATA 0x92
0000            211   _SCON           DATA 0x98
0000            212   _SCON0          DATA 0x98
0000            213   _SCON1          DATA 0xc8
0000            214   _SFRPAGE        DATA 0xa7
0000            215   _SFRPGCN        DATA 0xbc
0000            216   _SFRSTACK       DATA 0xd7
0000            217   _SMB0ADM        DATA 0xd6
0000            218   _SMB0ADR        DATA 0xd7
0000            219   _SMB0CF         DATA 0xc1
0000            220   _SMB0CN0        DATA 0xc0
0000            221   _SMB0DAT        DATA 0xc2
0000            222   _SMB0FCN0       DATA 0xc3
0000            223   _SMB0FCN1       DATA 0xc4
0000            224   _SMB0FCT        DATA 0xef
0000            225   _SMB0RXLN       DATA 0xc5
0000            226   _SMB0TC         DATA 0xac
0000            227   _SMOD1          DATA 0x93
0000            228   _SP             DATA 0x81
0000            229   _SPI0CFG        DATA 0xa1
0000            230   _SPI0CKR        DATA 0xa2
0000            231   _SPI0CN0        DATA 0xf8
0000            232   _SPI0DAT        DATA 0xa3
0000            233   _SPI0FCN0       DATA 0x9a
0000            234   _SPI0FCN1       DATA 0x9b
0000            235   _SPI0FCT        DATA 0xf7
0000            236   _SPI0PCF        DATA 0xdf
0000            237   _TCON           DATA 0x88
0000            238   _TH0            DATA 0x8c
0000            239   _TH1            DATA 0x8d
0000            240   _TL0            DATA 0x8a
0000            241   _TL1            DATA 0x8b
0000            242   _TMOD           DATA 0x89
0000            243   _TMR2CN0        DATA 0xc8
0000            244   _TMR2CN1        DATA 0xfd
0000            245   _TMR2H          DATA 0xcf
0000            246   _TMR2L          DATA 0xce
0000            247   _TMR2RLH        DATA 0xcb
0000            248   _TMR2RLL        DATA 0xca
0000            249   _TMR3CN0        DATA 0x91
0000            250   _TMR3CN1        DATA 0xfe
0000            251   _TMR3H          DATA 0x95
0000            252   _TMR3L          DATA 0x94
0000            253   _TMR3RLH        DATA 0x93
0000            254   _TMR3RLL        DATA 0x92
0000            255   _TMR4CN0        DATA 0x98
0000            256   _TMR4CN1        DATA 0xff
0000            257   _TMR4H          DATA 0xa5
0000            258   _TMR4L          DATA 0xa4
0000            259   _TMR4RLH        DATA 0xa3
0000            260   _TMR4RLL        DATA 0xa2
0000            261   _TMR5CN0        DATA 0xc0
0000            262   _TMR5CN1        DATA 0xf1
0000            263   _TMR5H          DATA 0xd5
0000            264   _TMR5L          DATA 0xd4
0000            265   _TMR5RLH        DATA 0xd3
0000            266   _TMR5RLL        DATA 0xd2
0000            267   _UART0PCF       DATA 0xd9
0000            268   _UART1FCN0      DATA 0x9d
0000            269   _UART1FCN1      DATA 0xd8
0000            270   _UART1FCT       DATA 0xfa
0000            271   _UART1LIN       DATA 0x9e
0000            272   _UART1PCF       DATA 0xda
0000            273   _VDM0CN         DATA 0xff
0000            274   _WDTCN          DATA 0x97
0000            275   _XBR0           DATA 0xe1
0000            276   _XBR1           DATA 0xe2
0000            277   _XBR2           DATA 0xe3
0000            278   _XOSC0CN        DATA 0x86
0000            279   _DPTR           DATA 0x8382
0000            280   _TMR2RL         DATA 0xcbca
0000            281   _TMR3RL         DATA 0x9392
0000            282   _TMR4RL         DATA 0xa3a2
0000            283   _TMR5RL         DATA 0xd3d2
0000            284   _TMR0           DATA 0x8c8a
0000            285   _TMR1           DATA 0x8d8b
0000            286   _TMR2           DATA 0xcfce
0000            287   _TMR3           DATA 0x9594
0000            288   _TMR4           DATA 0xa5a4
0000            289   _TMR5           DATA 0xd5d4
0000            290   _SBRL1          DATA 0x9695
0000            291   _PCA0           DATA 0xfaf9
0000            292   _PCA0CP0        DATA 0xfcfb
0000            293   _PCA0CP1        DATA 0xeae9
0000            294   _PCA0CP2        DATA 0xeceb
0000            295   _PCA0CP3        DATA 0xf5f4
0000            296   _PCA0CP4        DATA 0x8584
0000            297   _PCA0CP5        DATA 0xdedd
0000            298   _ADC0ASA        DATA 0xb6b5
0000            299   _ADC0GT         DATA 0xc4c3
0000            300   _ADC0           DATA 0xbebd
0000            301   _ADC0LT         DATA 0xc6c5
0000            302   _DAC0           DATA 0x8584
0000            303   _DAC1           DATA 0x8a89
0000            304   _DAC2           DATA 0x8c8b
0000            305   _DAC3           DATA 0x8e8d
0000            306   ;--------------------------------------------------------
0000            307   ; special function bits
0000            308   ;--------------------------------------------------------
0000            309   _ACC_0          BIT 0xe0
0000            310   _ACC_1          BIT 0xe1
0000            311   _ACC_2          BIT 0xe2
0000            312   _ACC_3          BIT 0xe3
0000            313   _ACC_4          BIT 0xe4
0000            314   _ACC_5          BIT 0xe5
0000            315   _ACC_6          BIT 0xe6
0000            316   _ACC_7          BIT 0xe7
0000            317   _TEMPE          BIT 0xe8
0000            318   _ADGN0          BIT 0xe9
0000            319   _ADGN1          BIT 0xea
0000            320   _ADWINT         BIT 0xeb
0000            321   _ADBUSY         BIT 0xec
0000            322   _ADINT          BIT 0xed
0000            323   _IPOEN          BIT 0xee
0000            324   _ADEN           BIT 0xef
0000            325   _B_0            BIT 0xf0
0000            326   _B_1            BIT 0xf1
0000            327   _B_2            BIT 0xf2
0000            328   _B_3            BIT 0xf3
0000            329   _B_4            BIT 0xf4
0000            330   _B_5            BIT 0xf5
0000            331   _B_6            BIT 0xf6
0000            332   _B_7            BIT 0xf7
0000            333   _C0FIF          BIT 0xe8
0000            334   _C0RIF          BIT 0xe9
0000            335   _C1FIF          BIT 0xea
0000            336   _C1RIF          BIT 0xeb
0000            337   _C2FIF          BIT 0xec
0000            338   _C2RIF          BIT 0xed
0000            339   _C3FIF          BIT 0xee
0000            340   _C3RIF          BIT 0xef
0000            341   _D1SRC0         BIT 0x88
0000            342   _D1SRC1         BIT 0x89
0000            343   _D1AMEN         BIT 0x8a
0000            344   _D01REFSL       BIT 0x8b
0000            345   _D3SRC0         BIT 0x8c
0000            346   _D3SRC1         BIT 0x8d
0000            347   _D3AMEN         BIT 0x8e
0000            348   _D23REFSL       BIT 0x8f
0000            349   _D0UDIS         BIT 0x98
0000            350   _D1UDIS         BIT 0x99
0000            351   _D2UDIS         BIT 0x9a
0000            352   _D3UDIS         BIT 0x9b
0000            353   _EX0            BIT 0xa8
0000            354   _ET0            BIT 0xa9
0000            355   _EX1            BIT 0xaa
0000            356   _ET1            BIT 0xab
0000            357   _ES0            BIT 0xac
0000            358   _ET2            BIT 0xad
0000            359   _ESPI0          BIT 0xae
0000            360   _EA             BIT 0xaf
0000            361   _PX0            BIT 0xb8
0000            362   _PT0            BIT 0xb9
0000            363   _PX1            BIT 0xba
0000            364   _PT1            BIT 0xbb
0000            365   _PS0            BIT 0xbc
0000            366   _PT2            BIT 0xbd
0000            367   _PSPI0          BIT 0xbe
0000            368   _P0_0           BIT 0x80
0000            369   _P0_1           BIT 0x81
0000            370   _P0_2           BIT 0x82
0000            371   _P0_3           BIT 0x83
0000            372   _P0_4           BIT 0x84
0000            373   _P0_5           BIT 0x85
0000            374   _P0_6           BIT 0x86
0000            375   _P0_7           BIT 0x87
0000            376   _P1_0           BIT 0x90
0000            377   _P1_1           BIT 0x91
0000            378   _P1_2           BIT 0x92
0000            379   _P1_3           BIT 0x93
0000            380   _P1_4           BIT 0x94
0000            381   _P1_5           BIT 0x95
0000            382   _P1_6           BIT 0x96
0000            383   _P1_7           BIT 0x97
0000            384   _P2_0           BIT 0xa0
0000            385   _P2_1           BIT 0xa1
0000            386   _P2_2           BIT 0xa2
0000            387   _P2_3           BIT 0xa3
0000            388   _P2_4           BIT 0xa4
0000            389   _P2_5           BIT 0xa5
0000            390   _P2_6           BIT 0xa6
0000            391   _P3_0           BIT 0xb0
0000            392   _P3_1           BIT 0xb1
0000            393   _P3_2           BIT 0xb2
0000            394   _P3_3           BIT 0xb3
0000            395   _P3_4           BIT 0xb4
0000            396   _P3_7           BIT 0xb7
0000            397   _CCF0           BIT 0xd8
0000            398   _CCF1           BIT 0xd9
0000            399   _CCF2           BIT 0xda
0000            400   _CCF3           BIT 0xdb
0000            401   _CCF4           BIT 0xdc
0000            402   _CCF5           BIT 0xdd
0000            403   _CR             BIT 0xde
0000            404   _CF             BIT 0xdf
0000            405   _PARITY         BIT 0xd0
0000            406   _F1             BIT 0xd1
0000            407   _OV             BIT 0xd2
0000            408   _RS0            BIT 0xd3
0000            409   _RS1            BIT 0xd4
0000            410   _F0             BIT 0xd5
0000            411   _AC             BIT 0xd6
0000            412   _CY             BIT 0xd7
0000            413   _RI             BIT 0x98
0000            414   _TI             BIT 0x99
0000            415   _RB8            BIT 0x9a
0000            416   _TB8            BIT 0x9b
0000            417   _REN            BIT 0x9c
0000            418   _CE             BIT 0x9d
0000            419   _SMODE          BIT 0x9e
0000            420   _RI1            BIT 0xc8
0000            421   _TI1            BIT 0xc9
0000            422   _RBX1           BIT 0xca
0000            423   _TBX1           BIT 0xcb
0000            424   _REN1           BIT 0xcc
0000            425   _PERR1          BIT 0xcd
0000            426   _OVR1           BIT 0xce
0000            427   _SI             BIT 0xc0
0000            428   _ACK            BIT 0xc1
0000            429   _ARBLOST        BIT 0xc2
0000            430   _ACKRQ          BIT 0xc3
0000            431   _STO            BIT 0xc4
0000            432   _STA            BIT 0xc5
0000            433   _TXMODE         BIT 0xc6
0000            434   _MASTER         BIT 0xc7
0000            435   _SPIEN          BIT 0xf8
0000            436   _TXNF           BIT 0xf9
0000            437   _NSSMD0         BIT 0xfa
0000            438   _NSSMD1         BIT 0xfb
0000            439   _RXOVRN         BIT 0xfc
0000            440   _MODF           BIT 0xfd
0000            441   _WCOL           BIT 0xfe
0000            442   _SPIF           BIT 0xff
0000            443   _IT0            BIT 0x88
0000            444   _IE0            BIT 0x89
0000            445   _IT1            BIT 0x8a
0000            446   _IE1            BIT 0x8b
0000            447   _TR0            BIT 0x8c
0000            448   _TF0            BIT 0x8d
0000            449   _TR1            BIT 0x8e
0000            450   _TF1            BIT 0x8f
0000            451   _T2XCLK0        BIT 0xc8
0000            452   _T2XCLK1        BIT 0xc9
0000            453   _TR2            BIT 0xca
0000            454   _T2SPLIT        BIT 0xcb
0000            455   _TF2CEN         BIT 0xcc
0000            456   _TF2LEN         BIT 0xcd
0000            457   _TF2L           BIT 0xce
0000            458   _TF2H           BIT 0xcf
0000            459   _T4XCLK0        BIT 0x98
0000            460   _T4XCLK1        BIT 0x99
0000            461   _TR4            BIT 0x9a
0000            462   _T4SPLIT        BIT 0x9b
0000            463   _TF4CEN         BIT 0x9c
0000            464   _TF4LEN         BIT 0x9d
0000            465   _TF4L           BIT 0x9e
0000            466   _TF4H           BIT 0x9f
0000            467   _T5XCLK0        BIT 0xc0
0000            468   _T5XCLK1        BIT 0xc1
0000            469   _TR5            BIT 0xc2
0000            470   _T5SPLIT        BIT 0xc3
0000            471   _TF5CEN         BIT 0xc4
0000            472   _TF5LEN         BIT 0xc5
0000            473   _TF5L           BIT 0xc6
0000            474   _TF5H           BIT 0xc7
0000            475   _RIE            BIT 0xd8
0000            476   _RXTO0          BIT 0xd9
0000            477   _RXTO1          BIT 0xda
0000            478   _RFRQ           BIT 0xdb
0000            479   _TIE            BIT 0xdc
0000            480   _TXHOLD         BIT 0xdd
0000            481   _TXNF1          BIT 0xde
0000            482   _TFRQ           BIT 0xdf
0000            483   ;--------------------------------------------------------
0000            484   ; overlayable register banks
0000            485   ;--------------------------------------------------------
0000            486            rbank0 segment data overlay
0000            487   ;--------------------------------------------------------
0000            488   ; internal ram data
0000            489   ;--------------------------------------------------------
0000            490            rseg R_DSEG
0000            491   _stepFlag:
0000            492            ds 1
0001            493   _stepCount:
0001            494            ds 2
0003            495   _totalSteps:
0003            496            ds 2
0005            497   _getsn_PARM_2:
0005            498            ds 2
0007            499   _getsn_buff_1_51:
0007            500            ds 3
000A            501   _getsn_sloc0_1_0:
000A            502            ds 2
000C            503   _main_vReadings_1_71:
000C            504            ds 12
0018            505   _main_voltages_1_71:
0018            506            ds 12
0024            507   _main_dir_1_71:
0024            508            ds 4
0028            509   _main_direction_1_71:
0028            510            ds 1
0029            511   _main_measureCount_1_71:
0029            512            ds 2
002B            513   _main_stepsInterruptCounter_1_71:
002B            514            ds 2
002D            515   _main_sloc0_1_0:
002D            516            ds 4
0031            517   _main_sloc1_1_0:
0031            518            ds 4
0035            519   ;--------------------------------------------------------
0035            520   ; overlayable items in internal ram 
0035            521   ;--------------------------------------------------------
0000            522            rseg    R_OSEG
0000            523            rseg    R_OSEG
0000            524            rseg    R_OSEG
0000            525   ;--------------------------------------------------------
0000            526   ; indirectly addressable internal ram data
0000            527   ;--------------------------------------------------------
0000            528            rseg R_ISEG
0000            529   ;--------------------------------------------------------
0000            530   ; absolute internal ram data
0000            531   ;--------------------------------------------------------
0000            532            DSEG
0000            533   ;--------------------------------------------------------
0000            534   ; bit data
0000            535   ;--------------------------------------------------------
0000            536            rseg R_BSEG
0000            537   ;--------------------------------------------------------
0000            538   ; paged external ram data
0000            539   ;--------------------------------------------------------
0000            540            rseg R_PSEG
0000            541   ;--------------------------------------------------------
0000            542   ; external ram data
0000            543   ;--------------------------------------------------------
0000            544            rseg R_XSEG
0000            545   ;--------------------------------------------------------
0000            546   ; absolute external ram data
0000            547   ;--------------------------------------------------------
0000            548            XSEG
0000            549   ;--------------------------------------------------------
0000            550   ; external initialized ram data
0000            551   ;--------------------------------------------------------
0000            552            rseg R_IXSEG
0000            553            rseg R_HOME
0000            554            rseg R_GSINIT
0000            555            rseg R_CSEG
0000            556   ;--------------------------------------------------------
0000            557   ; Reset entry point and interrupt vectors
0000            558   ;--------------------------------------------------------
0000            559            CSEG at 0x0000
0000 020100     560            ljmp    _crt0
002B            561            CSEG at 0x002b
002B 020100     562            ljmp    _Timer2_ISR
002E            563   ;--------------------------------------------------------
002E            564   ; global & static initialisations
002E            565   ;--------------------------------------------------------
0000            566            rseg R_HOME
0000            567            rseg R_GSINIT
0000            568            rseg R_GSINIT
0000            569   ;--------------------------------------------------------
0000            570   ; data variables initialization
0000            571   ;--------------------------------------------------------
0000            572            rseg R_DINIT
0000            573   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:32: volatile unsigned char stepFlag = 1;
0000 751801     574            mov     _stepFlag,#0x01
0003            575   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:34: int stepCount = 0;
0003 E4         576            clr     a
0004 F5D8       577            mov     _stepCount,a
0006 F5D9       578            mov     (_stepCount + 1),a
0008            579   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:35: int totalSteps = 0;
0008 E4         580            clr     a
0009 F598       581            mov     _totalSteps,a
000B F599       582            mov     (_totalSteps + 1),a
000D            583            ; The linker places a 'ret' at the end of segment R_DINIT.
000D            584   ;--------------------------------------------------------
000D            585   ; code
000D            586   ;--------------------------------------------------------
0000            587            rseg R_CSEG
0000            588   ;------------------------------------------------------------
0000            589   ;Allocation info for local variables in function '_c51_external_startup'
0000            590   ;------------------------------------------------------------
0000            591   ;------------------------------------------------------------
0000            592   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:37: char _c51_external_startup (void)
0000            593   ;        -----------------------------------------
0000            594   ;         function _c51_external_startup
0000            595   ;        -----------------------------------------
0000            596   __c51_external_startup:
0000            597            using   0
0000            598   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:40: SFRPAGE = 0x00;
0000 75A700     599            mov     _SFRPAGE,#0x00
0003            600   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:41: WDTCN = 0xDE; //First key
0003 7597DE     601            mov     _WDTCN,#0xDE
0006            602   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:42: WDTCN = 0xAD; //Second key
0006 7597AD     603            mov     _WDTCN,#0xAD
0009            604   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:44: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     605            mov     _VDM0CN,#0x80
000C            606   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:45: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     607            mov     _RSTSRC,#0x06
000F            608   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:52: SFRPAGE = 0x10;
000F 75A710     609            mov     _SFRPAGE,#0x10
0012            610   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:53: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     611            mov     _PFE0CN,#0x20
0015            612   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:54: SFRPAGE = 0x00;
0015 75A700     613            mov     _SFRPAGE,#0x00
0018            614   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:75: CLKSEL = 0x00;
0018 75A900     615            mov     _CLKSEL,#0x00
001B            616   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:76: CLKSEL = 0x00;
001B 75A900     617            mov     _CLKSEL,#0x00
001E            618   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:77: while ((CLKSEL & 0x80) == 0);
001E            619   L002001?:
001E E5A9       620            mov     a,_CLKSEL
0020 30E728     621            jnb     acc.7,L002001?
0023            622   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:78: CLKSEL = 0x03;
0023 75A903     623            mov     _CLKSEL,#0x03
0026            624   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:79: CLKSEL = 0x03;
0026 75A903     625            mov     _CLKSEL,#0x03
0029            626   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:80: while ((CLKSEL & 0x80) == 0);
0029            627   L002004?:
0029 E5A9       628            mov     a,_CLKSEL
002B 30E7A8     629            jnb     acc.7,L002004?
002E            630   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:85: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     631            orl     _P0MDOUT,#0x10
0031            632   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:86: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)  
0031 75E101     633            mov     _XBR0,#0x01
0034            634   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:89: XBR1     = 0X02; //Enable PCA I/O and route CEX0 and CEX1 only (check reference manual page 120)
0034 75E202     635            mov     _XBR1,#0x02
0037            636   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:91: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     637            mov     _XBR2,#0x40
003A            638   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:97: SCON0 = 0x10;
003A 759810     639            mov     _SCON0,#0x10
003D            640   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:98: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     641            mov     _TH1,#0xE6
0040            642   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:99: TL1 = TH1;      // Init Timer1
0040 858D8B     643            mov     _TL1,_TH1
0043            644   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:100: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     645            anl     _TMOD,#0x0F
0046            646   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:101: TMOD |=  0x20;                       
0046 438920     647            orl     _TMOD,#0x20
0049            648   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:102: TR1 = 1; // START Timer1
0049 D28E       649            setb    _TR1
004B            650   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:103: TI = 1;  // Indicate TX0 ready
004B D299       651            setb    _TI
004D            652   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:106: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
004D 75C800     653            mov     _TMR2CN0,#0x00
0050            654   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:107: CKCON0|=0b_0001_0000; // Timer 2 uses the system clock
0050 438E10     655            orl     _CKCON0,#0x10
0053            656   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:108: TMR2RL=(0x10000L-(SYSCLK/(2*TIMER_2_FREQ))); // Initialize reload value
0053 75CAC0     657            mov     _TMR2RL,#0xC0
0056 75CBE6     658            mov     (_TMR2RL >> 8),#0xE6
0059            659   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:109: TMR2=0xffff;   // Set to reload immediately
0059 75CEFF     660            mov     _TMR2,#0xFF
005C 75CFFF     661            mov     (_TMR2 >> 8),#0xFF
005F            662   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:110: ET2=1;         // Enable Timer2 interrupts
005F D2AD       663            setb    _ET2
0061            664   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:111: TR2=1;         // Start Timer2 (TMR2CN is bit addressable)
0061 D2CA       665            setb    _TR2
0063            666   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:113: EA=1; // Enable interrupts
0063 D2AF       667            setb    _EA
0065            668   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:115: return 0;
0065 758200     669            mov     dpl,#0x00
0068 22         670            ret
0069            671   ;------------------------------------------------------------
0069            672   ;Allocation info for local variables in function 'Timer3us'
0069            673   ;------------------------------------------------------------
0069            674   ;us                        Allocated to registers r2 
0069            675   ;i                         Allocated to registers r3 
0069            676   ;------------------------------------------------------------
0069            677   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:119: void Timer3us(unsigned char us)
0069            678   ;        -----------------------------------------
0069            679   ;         function Timer3us
0069            680   ;        -----------------------------------------
0069            681   _Timer3us:
0069 AA82       682            mov     r2,dpl
006B            683   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:124: CKCON0|=0b_0100_0000;
006B 438E40     684            orl     _CKCON0,#0x40
006E            685   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:126: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
006E 7592B8     686            mov     _TMR3RL,#0xB8
0071 7593FF     687            mov     (_TMR3RL >> 8),#0xFF
0074            688   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:127: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0074 859294     689            mov     _TMR3,_TMR3RL
0077 859395     690            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007A            691   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:129: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007A 759104     692            mov     _TMR3CN0,#0x04
007D            693   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:130: for (i = 0; i < us; i++)       // Count <us> overflows
007D 7B00       694            mov     r3,#0x00
007F            695   L003004?:
007F C3         696            clr     c
0080 EB         697            mov     a,r3
0081 9A         698            subb    a,r2
0082 5001       699            jnc     L003007?
0084            700   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:132: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0084            701   L003001?:
0084 E591       702            mov     a,_TMR3CN0
0086 30E7A8     703            jnb     acc.7,L003001?
0089            704   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:133: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
0089 53917F     705            anl     _TMR3CN0,#0x7F
008C            706   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:130: for (i = 0; i < us; i++)       // Count <us> overflows
008C 0B         707            inc     r3
008D 8001       708            sjmp    L003004?
008F            709   L003007?:
008F            710   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:135: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
008F 759100     711            mov     _TMR3CN0,#0x00
0092 22         712            ret
0093            713   ;------------------------------------------------------------
0093            714   ;Allocation info for local variables in function 'Timer2_ISR'
0093            715   ;------------------------------------------------------------
0093            716   ;------------------------------------------------------------
0093            717   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:139: void Timer2_ISR (void) interrupt INTERRUPT_TIMER2
0093            718   ;        -----------------------------------------
0093            719   ;         function Timer2_ISR
0093            720   ;        -----------------------------------------
0093            721   _Timer2_ISR:
0093            722   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:141: SFRPAGE=0x0;
0093 75A700     723            mov     _SFRPAGE,#0x00
0096            724   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:142: TF2H = 0; // Clear Timer2 interrupt flag
0096 C2CF       725            clr     _TF2H
0098            726   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:145: stepFlag = 1;
0098 751801     727            mov     _stepFlag,#0x01
009B 32         728            reti
009C            729   ;        eliminated unneeded push/pop psw
009C            730   ;        eliminated unneeded push/pop dpl
009C            731   ;        eliminated unneeded push/pop dph
009C            732   ;        eliminated unneeded push/pop b
009C            733   ;        eliminated unneeded push/pop acc
009C            734   ;------------------------------------------------------------
009C            735   ;Allocation info for local variables in function 'waitms'
009C            736   ;------------------------------------------------------------
009C            737   ;ms                        Allocated to registers r2 r3 
009C            738   ;j                         Allocated to registers r4 r5 
009C            739   ;k                         Allocated to registers r6 
009C            740   ;------------------------------------------------------------
009C            741   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:150: void waitms (unsigned int ms)
009C            742   ;        -----------------------------------------
009C            743   ;         function waitms
009C            744   ;        -----------------------------------------
009C            745   _waitms:
009C AA82       746            mov     r2,dpl
009E AB83       747            mov     r3,dph
00A0            748   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:154: for(j=0; j<ms; j++)
00A0 7C00       749            mov     r4,#0x00
00A2 7D00       750            mov     r5,#0x00
00A4            751   L005005?:
00A4 C3         752            clr     c
00A5 EC         753            mov     a,r4
00A6 9A         754            subb    a,r2
00A7 ED         755            mov     a,r5
00A8 9B         756            subb    a,r3
00A9 5001       757            jnc     L005009?
00AB            758   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:155: for (k=0; k<4; k++) Timer3us(250);
00AB 7E00       759            mov     r6,#0x00
00AD            760   L005001?:
00AD BE04E8     761            cjne    r6,#0x04,L005018?
00B0            762   L005018?:
00B0 5001       763            jnc     L005007?
00B2 7582FA     764            mov     dpl,#0xFA
00B5 C002       765            push    ar2
00B7 C003       766            push    ar3
00B9 C004       767            push    ar4
00BB C005       768            push    ar5
00BD C006       769            push    ar6
00BF 120100     770            lcall   _Timer3us
00C2 D006       771            pop     ar6
00C4 D005       772            pop     ar5
00C6 D004       773            pop     ar4
00C8 D003       774            pop     ar3
00CA D002       775            pop     ar2
00CC 0E         776            inc     r6
00CD 8001       777            sjmp    L005001?
00CF            778   L005007?:
00CF            779   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:154: for(j=0; j<ms; j++)
00CF 0C         780            inc     r4
00D0 BC0028     781            cjne    r4,#0x00,L005005?
00D3 0D         782            inc     r5
00D4 8001       783            sjmp    L005005?
00D6            784   L005009?:
00D6 22         785            ret
00D7            786   ;------------------------------------------------------------
00D7            787   ;Allocation info for local variables in function 'getsn'
00D7            788   ;------------------------------------------------------------
00D7            789   ;len                       Allocated with name '_getsn_PARM_2'
00D7            790   ;buff                      Allocated with name '_getsn_buff_1_51'
00D7            791   ;j                         Allocated with name '_getsn_sloc0_1_0'
00D7            792   ;c                         Allocated to registers r3 
00D7            793   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
00D7            794   ;------------------------------------------------------------
00D7            795   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:158: int getsn (char * buff, int len)
00D7            796   ;        -----------------------------------------
00D7            797   ;         function getsn
00D7            798   ;        -----------------------------------------
00D7            799   _getsn:
00D7 8582F8     800            mov     _getsn_buff_1_51,dpl
00DA 8583F9     801            mov     (_getsn_buff_1_51 + 1),dph
00DD 85F0FA     802            mov     (_getsn_buff_1_51 + 2),b
00E0            803   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:163: for(j=0; j<(len-1); j++)
00E0 E4         804            clr     a
00E1 F548       805            mov     _getsn_sloc0_1_0,a
00E3 F549       806            mov     (_getsn_sloc0_1_0 + 1),a
00E5 E558       807            mov     a,_getsn_PARM_2
00E7 24FF       808            add     a,#0xff
00E9 FF         809            mov     r7,a
00EA E559       810            mov     a,(_getsn_PARM_2 + 1)
00EC 34FF       811            addc    a,#0xff
00EE F8         812            mov     r0,a
00EF 7900       813            mov     r1,#0x00
00F1 7A00       814            mov     r2,#0x00
00F3            815   L006005?:
00F3 C3         816            clr     c
00F4 E9         817            mov     a,r1
00F5 9F         818            subb    a,r7
00F6 EA         819            mov     a,r2
00F7 6480       820            xrl     a,#0x80
00F9 88F0       821            mov     b,r0
00FB 63F080     822            xrl     b,#0x80
00FE 95F0       823            subb    a,b
0100 5001       824            jnc     L006008?
0102            825   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:165: c=getchar();
0102 C002       826            push    ar2
0104 C007       827            push    ar7
0106 C000       828            push    ar0
0108 C001       829            push    ar1
010A 120100     830            lcall   _getchar
010D AB82       831            mov     r3,dpl
010F D001       832            pop     ar1
0111 D000       833            pop     ar0
0113 D007       834            pop     ar7
0115 D002       835            pop     ar2
0117            836   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:166: if ( (c=='\n') || (c=='\r') )
0117 BB0A68     837            cjne    r3,#0x0A,L006015?
011A 8001       838            sjmp    L006001?
011C            839   L006015?:
011C BB0DE8     840            cjne    r3,#0x0D,L006002?
011F            841   L006001?:
011F            842   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:168: buff[j]=0;
011F E548       843            mov     a,_getsn_sloc0_1_0
0121 25F8       844            add     a,_getsn_buff_1_51
0123 FC         845            mov     r4,a
0124 E549       846            mov     a,(_getsn_sloc0_1_0 + 1)
0126 35F9       847            addc    a,(_getsn_buff_1_51 + 1)
0128 FD         848            mov     r5,a
0129 AEFA       849            mov     r6,(_getsn_buff_1_51 + 2)
012B 8C82       850            mov     dpl,r4
012D 8D83       851            mov     dph,r5
012F 8EF0       852            mov     b,r6
0131 E4         853            clr     a
0132 120100     854            lcall   __gptrput
0135            855   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:169: return j;
0135 854882     856            mov     dpl,_getsn_sloc0_1_0
0138 854983     857            mov     dph,(_getsn_sloc0_1_0 + 1)
013B 22         858            ret
013C            859   L006002?:
013C            860   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:173: buff[j]=c;
013C E9         861            mov     a,r1
013D 25F8       862            add     a,_getsn_buff_1_51
013F FC         863            mov     r4,a
0140 EA         864            mov     a,r2
0141 35F9       865            addc    a,(_getsn_buff_1_51 + 1)
0143 FD         866            mov     r5,a
0144 AEFA       867            mov     r6,(_getsn_buff_1_51 + 2)
0146 8C82       868            mov     dpl,r4
0148 8D83       869            mov     dph,r5
014A 8EF0       870            mov     b,r6
014C EB         871            mov     a,r3
014D 120100     872            lcall   __gptrput
0150            873   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:163: for(j=0; j<(len-1); j++)
0150 09         874            inc     r1
0151 B90068     875            cjne    r1,#0x00,L006018?
0154 0A         876            inc     r2
0155            877   L006018?:
0155 8948       878            mov     _getsn_sloc0_1_0,r1
0157 8A49       879            mov     (_getsn_sloc0_1_0 + 1),r2
0159 8001       880            sjmp    L006005?
015B            881   L006008?:
015B            882   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:176: buff[j]=0;
015B E548       883            mov     a,_getsn_sloc0_1_0
015D 25F8       884            add     a,_getsn_buff_1_51
015F FA         885            mov     r2,a
0160 E549       886            mov     a,(_getsn_sloc0_1_0 + 1)
0162 35F9       887            addc    a,(_getsn_buff_1_51 + 1)
0164 FB         888            mov     r3,a
0165 ACFA       889            mov     r4,(_getsn_buff_1_51 + 2)
0167 8A82       890            mov     dpl,r2
0169 8B83       891            mov     dph,r3
016B 8CF0       892            mov     b,r4
016D E4         893            clr     a
016E 120100     894            lcall   __gptrput
0171            895   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:177: return len;
0171 855882     896            mov     dpl,_getsn_PARM_2
0174 855983     897            mov     dph,(_getsn_PARM_2 + 1)
0177 22         898            ret
0178            899   ;------------------------------------------------------------
0178            900   ;Allocation info for local variables in function 'InitADC'
0178            901   ;------------------------------------------------------------
0178            902   ;------------------------------------------------------------
0178            903   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:180: void InitADC (void)
0178            904   ;        -----------------------------------------
0178            905   ;         function InitADC
0178            906   ;        -----------------------------------------
0178            907   _InitADC:
0178            908   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:182: SFRPAGE = 0x00;
0178 75A700     909            mov     _SFRPAGE,#0x00
017B            910   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:183: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
017B 75B280     911            mov     _ADC0CN1,#0x80
017E            912   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:184: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
017E 75BCF8     913            mov     _ADC0CF0,#0xF8
0181            914   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:185: ADC0CF1 = 0b_0_0_011110; // Same as default for now
0181 75B91E     915            mov     _ADC0CF1,#0x1E
0184            916   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:186: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
0184 75E800     917            mov     _ADC0CN0,#0x00
0187            918   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:187: ADC0CF2 = 0b_0_01_11111 ; // GND pin, Vref=VDD
0187 75DF3F     919            mov     _ADC0CF2,#0x3F
018A            920   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:188: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
018A 75B300     921            mov     _ADC0CN2,#0x00
018D            922   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:189: ADEN=1; // Enable ADC
018D D2EF       923            setb    _ADEN
018F 22         924            ret
0190            925   ;------------------------------------------------------------
0190            926   ;Allocation info for local variables in function 'ADC_at_Pin'
0190            927   ;------------------------------------------------------------
0190            928   ;pin                       Allocated to registers 
0190            929   ;------------------------------------------------------------
0190            930   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:192: unsigned int ADC_at_Pin(unsigned char pin)
0190            931   ;        -----------------------------------------
0190            932   ;         function ADC_at_Pin
0190            933   ;        -----------------------------------------
0190            934   _ADC_at_Pin:
0190 8582BB     935            mov     _ADC0MX,dpl
0193            936   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:195: ADBUSY=1;       // Dummy conversion first to select new pin
0193 D2EC       937            setb    _ADBUSY
0195            938   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:196: while (ADBUSY); // Wait for dummy conversion to finish
0195            939   L008001?:
0195 20ECA8     940            jb      _ADBUSY,L008001?
0198            941   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:197: ADBUSY = 1;     // Convert voltage at the pin
0198 D2EC       942            setb    _ADBUSY
019A            943   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:198: while (ADBUSY); // Wait for conversion to complete
019A            944   L008004?:
019A 20ECE8     945            jb      _ADBUSY,L008004?
019D            946   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:199: return (ADC0);
019D 85BD82     947            mov     dpl,_ADC0
01A0 85BE83     948            mov     dph,(_ADC0 >> 8)
01A3 22         949            ret
01A4            950   ;------------------------------------------------------------
01A4            951   ;Allocation info for local variables in function 'Volts_at_Pin'
01A4            952   ;------------------------------------------------------------
01A4            953   ;pin                       Allocated to registers r2 
01A4            954   ;------------------------------------------------------------
01A4            955   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:202: float Volts_at_Pin(unsigned char pin)
01A4            956   ;        -----------------------------------------
01A4            957   ;         function Volts_at_Pin
01A4            958   ;        -----------------------------------------
01A4            959   _Volts_at_Pin:
01A4            960   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:204: return ((ADC_at_Pin(pin)*VDD)/16383.0);
01A4 120100     961            lcall   _ADC_at_Pin
01A7 120100     962            lcall   ___uint2fs
01AA AA82       963            mov     r2,dpl
01AC AB83       964            mov     r3,dph
01AE ACF0       965            mov     r4,b
01B0 FD         966            mov     r5,a
01B1 C002       967            push    ar2
01B3 C003       968            push    ar3
01B5 C004       969            push    ar4
01B7 C005       970            push    ar5
01B9 909FBE     971            mov     dptr,#0x9FBE
01BC 75F052     972            mov     b,#0x52
01BF 7440       973            mov     a,#0x40
01C1 120100     974            lcall   ___fsmul
01C4 AA82       975            mov     r2,dpl
01C6 AB83       976            mov     r3,dph
01C8 ACF0       977            mov     r4,b
01CA FD         978            mov     r5,a
01CB E581       979            mov     a,sp
01CD 24FC       980            add     a,#0xfc
01CF F581       981            mov     sp,a
01D1 E4         982            clr     a
01D2 C0E0       983            push    acc
01D4 74FC       984            mov     a,#0xFC
01D6 C0E0       985            push    acc
01D8 747F       986            mov     a,#0x7F
01DA C0E0       987            push    acc
01DC 7446       988            mov     a,#0x46
01DE C0E0       989            push    acc
01E0 8A82       990            mov     dpl,r2
01E2 8B83       991            mov     dph,r3
01E4 8CF0       992            mov     b,r4
01E6 ED         993            mov     a,r5
01E7 120100     994            lcall   ___fsdiv
01EA AA82       995            mov     r2,dpl
01EC AB83       996            mov     r3,dph
01EE ACF0       997            mov     r4,b
01F0 FD         998            mov     r5,a
01F1 E581       999            mov     a,sp
01F3 24FC      1000            add     a,#0xfc
01F5 F581      1001            mov     sp,a
01F7 8A82      1002            mov     dpl,r2
01F9 8B83      1003            mov     dph,r3
01FB 8CF0      1004            mov     b,r4
01FD ED        1005            mov     a,r5
01FE 22        1006            ret
01FF           1007   ;------------------------------------------------------------
01FF           1008   ;Allocation info for local variables in function 'ConfigPCA0'
01FF           1009   ;------------------------------------------------------------
01FF           1010   ;------------------------------------------------------------
01FF           1011   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:207: void ConfigPCA0()
01FF           1012   ;        -----------------------------------------
01FF           1013   ;         function ConfigPCA0
01FF           1014   ;        -----------------------------------------
01FF           1015   _ConfigPCA0:
01FF           1016   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:209: SFRPAGE = 0x00; //Navigate to SFR page for register write
01FF 75A700    1017            mov     _SFRPAGE,#0x00
0202           1018   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:211: PCA0POL = 0b_0000_0000; //Set the output polarity for all channels to default (no inversion)
0202 759600    1019            mov     _PCA0POL,#0x00
0205           1020   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:213: PCA0MD = 0b_0000_0000; //Set PCA mode to operate even in idle mode with SYSCLK/12
0205 75D900    1021            mov     _PCA0MD,#0x00
0208           1022   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:214: PCA0PWM = 0b_0000_0000;        //Enable 8-bit PWM with no overflow flag set and no interrupts enabled
0208 75F700    1023            mov     _PCA0PWM,#0x00
020B           1024   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:215: PCA0CLR = 0b_0000_0000; //Disable comparator clear for all modules
020B 759C00    1025            mov     _PCA0CLR,#0x00
020E           1026   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:216: PCA0CENT = 0b_0000_0000; //Set all modules to edge aligned mode
020E 759E00    1027            mov     _PCA0CENT,#0x00
0211           1028   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:218: PCA0CN0 = 0b_0100_0000; //Start the PCA counter/timer (CR bit)         
0211 75D840    1029            mov     _PCA0CN0,#0x40
0214           1030   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:221: PCA0CPM0 = 0b_0100_0010;//Configure Channel 0 to function in 8-bit PWM mode
0214 75DA42    1031            mov     _PCA0CPM0,#0x42
0217           1032   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:222: PCA0CPH0 = 0b_0100_0000; //Load the PCA0CP0 high byte with an initial value of 128(binary 1000_0000)
0217 75FC40    1033            mov     _PCA0CPH0,#0x40
021A           1034   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:225: PCA0CPM1 = 0b_0100_0010; //Configure Channel 1 to function in 8-bit PWM mode
021A 75DB42    1035            mov     _PCA0CPM1,#0x42
021D           1036   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:226: PCA0CPH1 = 0b_1000_0000; //Load the PCA0CP1 high byte
021D 75EA80    1037            mov     _PCA0CPH1,#0x80
0220 22        1038            ret
0221           1039   ;------------------------------------------------------------
0221           1040   ;Allocation info for local variables in function 'takeStep'
0221           1041   ;------------------------------------------------------------
0221           1042   ;instr                     Allocated to registers r2 
0221           1043   ;------------------------------------------------------------
0221           1044   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:230: void takeStep(char instr)
0221           1045   ;        -----------------------------------------
0221           1046   ;         function takeStep
0221           1047   ;        -----------------------------------------
0221           1048   _takeStep:
0221 AA82      1049            mov     r2,dpl
0223           1050   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:232: if(instr == 'F') //If the instruction is to move forward...
0223 BA4628    1051            cjne    r2,#0x46,L011012?
0226           1052   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:234: switch(stepCount)
0226 E4        1053            clr     a
0227 B5D868    1054            cjne    a,_stepCount,L011030?
022A E4        1055            clr     a
022B B5D968    1056            cjne    a,(_stepCount + 1),L011030?
022E 8001      1057            sjmp    L011001?
0230           1058   L011030?:
0230 7401      1059            mov     a,#0x01
0232 B5D8E8    1060            cjne    a,_stepCount,L011031?
0235 E4        1061            clr     a
0236 B5D9E8    1062            cjne    a,(_stepCount + 1),L011031?
0239 8001      1063            sjmp    L011002?
023B           1064   L011031?:
023B 7402      1065            mov     a,#0x02
023D B5D868    1066            cjne    a,_stepCount,L011032?
0240 E4        1067            clr     a
0241 B5D968    1068            cjne    a,(_stepCount + 1),L011032?
0244 8001      1069            sjmp    L011003?
0246           1070   L011032?:
0246 7403      1071            mov     a,#0x03
0248 B5D8E8    1072            cjne    a,_stepCount,L011033?
024B E4        1073            clr     a
024C B5D9E8    1074            cjne    a,(_stepCount + 1),L011033?
024F 8001      1075            sjmp    L011004?
0251           1076   L011033?:
0251 020100    1077            ljmp    L011013?
0254           1078   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:236: case 0: //Step 0
0254           1079   L011001?:
0254           1080   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:237: PORT1 = 1;
0254 D2A1      1081            setb    _P2_1
0256           1082   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:238: PORT2 = 1;
0256 D2A2      1083            setb    _P2_2
0258           1084   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:239: PORT3 = 0;
0258 C2A3      1085            clr     _P2_3
025A           1086   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:240: PORT4 = 0;
025A C2A4      1087            clr     _P2_4
025C           1088   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:241: break;
025C           1089   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:243: case 1: //Step 1
025C 8001      1090            sjmp    L011013?
025E           1091   L011002?:
025E           1092   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:244: PORT1 = 0;
025E C2A1      1093            clr     _P2_1
0260           1094   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:245: PORT2 = 1;
0260 D2A2      1095            setb    _P2_2
0262           1096   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:246: PORT3 = 1;
0262 D2A3      1097            setb    _P2_3
0264           1098   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:247: PORT4 = 0;
0264 C2A4      1099            clr     _P2_4
0266           1100   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:248: break;
0266           1101   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:250: case 2: //Step 2
0266 8001      1102            sjmp    L011013?
0268           1103   L011003?:
0268           1104   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:251: PORT1 = 0;
0268 C2A1      1105            clr     _P2_1
026A           1106   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:252: PORT2 = 0;
026A C2A2      1107            clr     _P2_2
026C           1108   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:253: PORT3 = 1;
026C D2A3      1109            setb    _P2_3
026E           1110   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:254: PORT4 = 1;
026E D2A4      1111            setb    _P2_4
0270           1112   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:255: break;
0270           1113   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:257: case 3: //Step 3
0270 8001      1114            sjmp    L011013?
0272           1115   L011004?:
0272           1116   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:258: PORT1 = 1;
0272 D2A1      1117            setb    _P2_1
0274           1118   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:259: PORT2 = 0;
0274 C2A2      1119            clr     _P2_2
0276           1120   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:260: PORT3 = 0;
0276 C2A3      1121            clr     _P2_3
0278           1122   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:261: PORT4 = 1;
0278 D2A4      1123            setb    _P2_4
027A           1124   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:263: }
027A 8001      1125            sjmp    L011013?
027C           1126   L011012?:
027C           1127   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:267: switch(stepCount)
027C E4        1128            clr     a
027D B5D8A8    1129            cjne    a,_stepCount,L011034?
0280 E4        1130            clr     a
0281 B5D9A8    1131            cjne    a,(_stepCount + 1),L011034?
0284 8001      1132            sjmp    L011006?
0286           1133   L011034?:
0286 7401      1134            mov     a,#0x01
0288 B5D828    1135            cjne    a,_stepCount,L011035?
028B E4        1136            clr     a
028C B5D928    1137            cjne    a,(_stepCount + 1),L011035?
028F 8001      1138            sjmp    L011007?
0291           1139   L011035?:
0291 7402      1140            mov     a,#0x02
0293 B5D8A8    1141            cjne    a,_stepCount,L011036?
0296 E4        1142            clr     a
0297 B5D9A8    1143            cjne    a,(_stepCount + 1),L011036?
029A 8001      1144            sjmp    L011008?
029C           1145   L011036?:
029C 7403      1146            mov     a,#0x03
029E B5D828    1147            cjne    a,_stepCount,L011037?
02A1 E4        1148            clr     a
02A2 B5D928    1149            cjne    a,(_stepCount + 1),L011037?
02A5 8001      1150            sjmp    L011009?
02A7           1151   L011037?:
02A7           1152   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:269: case 0: //Step 0
02A7 8001      1153            sjmp    L011013?
02A9           1154   L011006?:
02A9           1155   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:270: PORT1 = 1;
02A9 D2A1      1156            setb    _P2_1
02AB           1157   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:271: PORT2 = 0;
02AB C2A2      1158            clr     _P2_2
02AD           1159   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:272: PORT3 = 0;
02AD C2A3      1160            clr     _P2_3
02AF           1161   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:273: PORT4 = 1;
02AF D2A4      1162            setb    _P2_4
02B1           1163   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:274: break;
02B1           1164   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:276: case 1: //Step 1
02B1 8001      1165            sjmp    L011013?
02B3           1166   L011007?:
02B3           1167   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:277: PORT1 = 0;
02B3 C2A1      1168            clr     _P2_1
02B5           1169   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:278: PORT2 = 0;
02B5 C2A2      1170            clr     _P2_2
02B7           1171   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:279: PORT3 = 1;
02B7 D2A3      1172            setb    _P2_3
02B9           1173   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:280: PORT4 = 1;
02B9 D2A4      1174            setb    _P2_4
02BB           1175   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:281: break;
02BB           1176   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:283: case 2: //Step 2
02BB 8001      1177            sjmp    L011013?
02BD           1178   L011008?:
02BD           1179   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:284: PORT1 = 0;
02BD C2A1      1180            clr     _P2_1
02BF           1181   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:285: PORT2 = 1;
02BF D2A2      1182            setb    _P2_2
02C1           1183   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:286: PORT3 = 1;
02C1 D2A3      1184            setb    _P2_3
02C3           1185   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:287: PORT4 = 0;
02C3 C2A4      1186            clr     _P2_4
02C5           1187   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:288: break;
02C5           1188   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:290: case 3: //Step 3
02C5 8001      1189            sjmp    L011013?
02C7           1190   L011009?:
02C7           1191   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:291: PORT1 = 1;
02C7 D2A1      1192            setb    _P2_1
02C9           1193   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:292: PORT2 = 1;
02C9 D2A2      1194            setb    _P2_2
02CB           1195   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:293: PORT3 = 0;
02CB C2A3      1196            clr     _P2_3
02CD           1197   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:294: PORT4 = 0;
02CD C2A4      1198            clr     _P2_4
02CF           1199   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:296: }
02CF           1200   L011013?:
02CF           1201   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:298: stepCount++;
02CF 05D8      1202            inc     _stepCount
02D1 E4        1203            clr     a
02D2 B5D8A8    1204            cjne    a,_stepCount,L011038?
02D5 05D9      1205            inc     (_stepCount + 1)
02D7           1206   L011038?:
02D7           1207   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:299: totalSteps++;
02D7 0598      1208            inc     _totalSteps
02D9 E4        1209            clr     a
02DA B598E8    1210            cjne    a,_totalSteps,L011039?
02DD 0599      1211            inc     (_totalSteps + 1)
02DF           1212   L011039?:
02DF           1213   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:300: if(stepCount > 3)
02DF C3        1214            clr     c
02E0 7403      1215            mov     a,#0x03
02E2 95D8      1216            subb    a,_stepCount
02E4 E4        1217            clr     a
02E5 6480      1218            xrl     a,#0x80
02E7 85D9F0    1219            mov     b,(_stepCount + 1)
02EA 63F080    1220            xrl     b,#0x80
02ED 95F0      1221            subb    a,b
02EF 5001      1222            jnc     L011016?
02F1           1223   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:301: stepCount = 0;
02F1 E4        1224            clr     a
02F2 F5D8      1225            mov     _stepCount,a
02F4 F5D9      1226            mov     (_stepCount + 1),a
02F6           1227   L011016?:
02F6 22        1228            ret
02F7           1229   ;------------------------------------------------------------
02F7           1230   ;Allocation info for local variables in function 'ConfigurePins'
02F7           1231   ;------------------------------------------------------------
02F7           1232   ;------------------------------------------------------------
02F7           1233   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:305: void ConfigurePins()
02F7           1234   ;        -----------------------------------------
02F7           1235   ;         function ConfigurePins
02F7           1236   ;        -----------------------------------------
02F7           1237   _ConfigurePins:
02F7           1238   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:307: P0SKIP |= 0b_1100_1111; //Skip all P0 bits except bits 4 and 5 (UART0)
02F7 43D4CF    1239            orl     _P0SKIP,#0xCF
02FA           1240   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:309: SFRPAGE = 0x20;
02FA 75A720    1241            mov     _SFRPAGE,#0x20
02FD           1242   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:311: P1MDIN &= 0b_1000_1111; //Set P1 bits 4,5,6 to analog input for ADC
02FD 53F28F    1243            anl     _P1MDIN,#0x8F
0300           1244   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:313: SFRPAGE = 0x00;
0300 75A700    1245            mov     _SFRPAGE,#0x00
0303           1246   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:315: P1SKIP |= 0b_0111_1111; //Skip all P1 bits except bit 7
0303 43D57F    1247            orl     _P1SKIP,#0x7F
0306           1248   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:317: P2MDOUT |= 0b_0111_1111; //Set P2 bits 0, 1, 2, 3, 4, 5 to push-pull output mode
0306 43A67F    1249            orl     _P2MDOUT,#0x7F
0309           1250   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:318: P1MDOUT |= 0b_1000_0000; //Set P1 bit 7 to push-pull output mode       
0309 43A580    1251            orl     _P1MDOUT,#0x80
030C 22        1252            ret
030D           1253   ;------------------------------------------------------------
030D           1254   ;Allocation info for local variables in function 'main'
030D           1255   ;------------------------------------------------------------
030D           1256   ;vReadings                 Allocated with name '_main_vReadings_1_71'
030D           1257   ;voltages                  Allocated with name '_main_voltages_1_71'
030D           1258   ;dir                       Allocated with name '_main_dir_1_71'
030D           1259   ;direction                 Allocated with name '_main_direction_1_71'
030D           1260   ;measureCount              Allocated with name '_main_measureCount_1_71'
030D           1261   ;totalMeasurements         Allocated to registers 
030D           1262   ;stepsInterruptCounter     Allocated with name '_main_stepsInterruptCounter_1_71'
030D           1263   ;stepsTotalInterrupts      Allocated to registers 
030D           1264   ;sloc0                     Allocated with name '_main_sloc0_1_0'
030D           1265   ;sloc1                     Allocated with name '_main_sloc1_1_0'
030D           1266   ;------------------------------------------------------------
030D           1267   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:321: void main (void) 
030D           1268   ;        -----------------------------------------
030D           1269   ;         function main
030D           1270   ;        -----------------------------------------
030D           1271   _main:
030D           1272   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:333: int measureCount = 0;
030D           1273   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:337: int stepsInterruptCounter = 0;
030D E4        1274            clr     a
030E F5C8      1275            mov     _main_measureCount_1_71,a
0310 F5C9      1276            mov     (_main_measureCount_1_71 + 1),a
0312 F528      1277            mov     _main_stepsInterruptCounter_1_71,a
0314 F529      1278            mov     (_main_stepsInterruptCounter_1_71 + 1),a
0316           1279   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:340: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0316 7468      1280            mov     a,#__str_0
0318 C0E0      1281            push    acc
031A 74C7      1282            mov     a,#(__str_0 >> 8)
031C C0E0      1283            push    acc
031E 7480      1284            mov     a,#0x80
0320 C0E0      1285            push    acc
0322 120100    1286            lcall   _printf
0325 1581      1287            dec     sp
0327 1581      1288            dec     sp
0329 1581      1289            dec     sp
032B           1290   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:342: ConfigurePins();
032B 120100    1291            lcall   _ConfigurePins
032E           1292   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:343: printf("Pin configuration done.\n");
032E 74E8      1293            mov     a,#__str_1
0330 C0E0      1294            push    acc
0332 74C7      1295            mov     a,#(__str_1 >> 8)
0334 C0E0      1296            push    acc
0336 7480      1297            mov     a,#0x80
0338 C0E0      1298            push    acc
033A 120100    1299            lcall   _printf
033D 1581      1300            dec     sp
033F 1581      1301            dec     sp
0341 1581      1302            dec     sp
0343           1303   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:345: ConfigPCA0();
0343 120100    1304            lcall   _ConfigPCA0
0346           1305   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:346: printf("PCA configuration done.\n");
0346 7428      1306            mov     a,#__str_2
0348 C0E0      1307            push    acc
034A 74C8      1308            mov     a,#(__str_2 >> 8)
034C C0E0      1309            push    acc
034E 7480      1310            mov     a,#0x80
0350 C0E0      1311            push    acc
0352 120100    1312            lcall   _printf
0355 1581      1313            dec     sp
0357 1581      1314            dec     sp
0359 1581      1315            dec     sp
035B           1316   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:348: InitADC();
035B 120100    1317            lcall   _InitADC
035E           1318   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:349: printf("ADC configuration done.\n");
035E 7468      1319            mov     a,#__str_3
0360 C0E0      1320            push    acc
0362 74C8      1321            mov     a,#(__str_3 >> 8)
0364 C0E0      1322            push    acc
0366 7480      1323            mov     a,#0x80
0368 C0E0      1324            push    acc
036A 120100    1325            lcall   _printf
036D 1581      1326            dec     sp
036F 1581      1327            dec     sp
0371 1581      1328            dec     sp
0373           1329   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:351: printf("\n");
0373 74A8      1330            mov     a,#__str_4
0375 C0E0      1331            push    acc
0377 74C8      1332            mov     a,#(__str_4 >> 8)
0379 C0E0      1333            push    acc
037B 7480      1334            mov     a,#0x80
037D C0E0      1335            push    acc
037F 120100    1336            lcall   _printf
0382 1581      1337            dec     sp
0384 1581      1338            dec     sp
0386 1581      1339            dec     sp
0388           1340   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:353: printf("Enter direction of rotation:\n");
0388 74E8      1341            mov     a,#__str_5
038A C0E0      1342            push    acc
038C 74C8      1343            mov     a,#(__str_5 >> 8)
038E C0E0      1344            push    acc
0390 7480      1345            mov     a,#0x80
0392 C0E0      1346            push    acc
0394 120100    1347            lcall   _printf
0397 1581      1348            dec     sp
0399 1581      1349            dec     sp
039B 1581      1350            dec     sp
039D           1351   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:354: getsn(dir,sizeof(dir));
039D 755804    1352            mov     _getsn_PARM_2,#0x04
03A0 E4        1353            clr     a
03A1 F559      1354            mov     (_getsn_PARM_2 + 1),a
03A3 90B928    1355            mov     dptr,#_main_dir_1_71
03A6 75F040    1356            mov     b,#0x40
03A9 120100    1357            lcall   _getsn
03AC           1358   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:356: sscanf(dir,"%c",&direction);
03AC 7478      1359            mov     a,#_main_direction_1_71
03AE C0E0      1360            push    acc
03B0 74B9      1361            mov     a,#(_main_direction_1_71 >> 8)
03B2 C0E0      1362            push    acc
03B4 7440      1363            mov     a,#0x40
03B6 C0E0      1364            push    acc
03B8 7428      1365            mov     a,#__str_6
03BA C0E0      1366            push    acc
03BC 74C9      1367            mov     a,#(__str_6 >> 8)
03BE C0E0      1368            push    acc
03C0 7480      1369            mov     a,#0x80
03C2 C0E0      1370            push    acc
03C4 7428      1371            mov     a,#_main_dir_1_71
03C6 C0E0      1372            push    acc
03C8 74B9      1373            mov     a,#(_main_dir_1_71 >> 8)
03CA C0E0      1374            push    acc
03CC 7440      1375            mov     a,#0x40
03CE C0E0      1376            push    acc
03D0 120100    1377            lcall   _sscanf
03D3 E581      1378            mov     a,sp
03D5 24F7      1379            add     a,#0xf7
03D7 F581      1380            mov     sp,a
03D9           1381   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:358: if(direction == 'F')
03D9 7446      1382            mov     a,#0x46
03DB B578A8    1383            cjne    a,_main_direction_1_71,L013002?
03DE           1384   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:359: printf("Moving forward.\n");
03DE 74E8      1385            mov     a,#__str_7
03E0 C0E0      1386            push    acc
03E2 74C9      1387            mov     a,#(__str_7 >> 8)
03E4 C0E0      1388            push    acc
03E6 7480      1389            mov     a,#0x80
03E8 C0E0      1390            push    acc
03EA 120100    1391            lcall   _printf
03ED 1581      1392            dec     sp
03EF 1581      1393            dec     sp
03F1 1581      1394            dec     sp
03F3 8001      1395            sjmp    L013013?
03F5           1396   L013002?:
03F5           1397   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:361: printf("Moving backwards.\n");
03F5 7468      1398            mov     a,#__str_8
03F7 C0E0      1399            push    acc
03F9 74CA      1400            mov     a,#(__str_8 >> 8)
03FB C0E0      1401            push    acc
03FD 7480      1402            mov     a,#0x80
03FF C0E0      1403            push    acc
0401 120100    1404            lcall   _printf
0404 1581      1405            dec     sp
0406 1581      1406            dec     sp
0408 1581      1407            dec     sp
040A           1408   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:364: while(1) //Main loop of the program begins here
040A           1409   L013013?:
040A           1410   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:369: if(stepFlag == 1)
040A 7401      1411            mov     a,#0x01
040C B518A8    1412            cjne    a,_stepFlag,L013008?
040F           1413   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:373: if(stepsInterruptCounter < stepsTotalInterrupts)
040F C3        1414            clr     c
0410 E528      1415            mov     a,_main_stepsInterruptCounter_1_71
0412 940F      1416            subb    a,#0x0F
0414 E529      1417            mov     a,(_main_stepsInterruptCounter_1_71 + 1)
0416 6480      1418            xrl     a,#0x80
0418 9480      1419            subb    a,#0x80
041A 5001      1420            jnc     L013005?
041C           1421   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:374: stepsInterruptCounter++;
041C 0528      1422            inc     _main_stepsInterruptCounter_1_71
041E E4        1423            clr     a
041F B52828    1424            cjne    a,_main_stepsInterruptCounter_1_71,L013006?
0422 0529      1425            inc     (_main_stepsInterruptCounter_1_71 + 1)
0424 8001      1426            sjmp    L013006?
0426           1427   L013005?:
0426           1428   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:377: takeStep(direction);
0426 857882    1429            mov     dpl,_main_direction_1_71
0429 120100    1430            lcall   _takeStep
042C           1431   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:379: TIMER_OUT_2 = !TIMER_OUT_2; //For testing purposes
042C B2A5      1432            cpl     _P2_5
042E           1433   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:382: stepsInterruptCounter = 0;
042E E4        1434            clr     a
042F F528      1435            mov     _main_stepsInterruptCounter_1_71,a
0431 F529      1436            mov     (_main_stepsInterruptCounter_1_71 + 1),a
0433           1437   L013006?:
0433           1438   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:386: stepFlag = 0;
0433 751800    1439            mov     _stepFlag,#0x00
0436           1440   L013008?:
0436           1441   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:390: if(measureCount < totalMeasurements)
0436 C3        1442            clr     c
0437 E5C8      1443            mov     a,_main_measureCount_1_71
0439 94F4      1444            subb    a,#0xF4
043B E5C9      1445            mov     a,(_main_measureCount_1_71 + 1)
043D 6480      1446            xrl     a,#0x80
043F 9481      1447            subb    a,#0x81
0441 4001      1448            jc      L013028?
0443 020100    1449            ljmp    L013010?
0446           1450   L013028?:
0446           1451   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:393: voltages[0] += Volts_at_Pin(QFP32_MUX_P1_4);
0446 85E868    1452            mov     _main_sloc0_1_0,_main_voltages_1_71
0449 85E969    1453            mov     (_main_sloc0_1_0 + 1),(_main_voltages_1_71 + 1)
044C 85EA6A    1454            mov     (_main_sloc0_1_0 + 2),(_main_voltages_1_71 + 2)
044F 85EB6B    1455            mov     (_main_sloc0_1_0 + 3),(_main_voltages_1_71 + 3)
0452 75820A    1456            mov     dpl,#0x0A
0455 120100    1457            lcall   _Volts_at_Pin
0458 AA82      1458            mov     r2,dpl
045A AB83      1459            mov     r3,dph
045C ACF0      1460            mov     r4,b
045E FD        1461            mov     r5,a
045F C002      1462            push    ar2
0461 C003      1463            push    ar3
0463 C004      1464            push    ar4
0465 C005      1465            push    ar5
0467 856882    1466            mov     dpl,_main_sloc0_1_0
046A 856983    1467            mov     dph,(_main_sloc0_1_0 + 1)
046D 856AF0    1468            mov     b,(_main_sloc0_1_0 + 2)
0470 E56B      1469            mov     a,(_main_sloc0_1_0 + 3)
0472 120100    1470            lcall   ___fsadd
0475 AA82      1471            mov     r2,dpl
0477 AB83      1472            mov     r3,dph
0479 ACF0      1473            mov     r4,b
047B FD        1474            mov     r5,a
047C E581      1475            mov     a,sp
047E 24FC      1476            add     a,#0xfc
0480 F581      1477            mov     sp,a
0482 8AE8      1478            mov     _main_voltages_1_71,r2
0484 8BE9      1479            mov     (_main_voltages_1_71 + 1),r3
0486 8CEA      1480            mov     (_main_voltages_1_71 + 2),r4
0488 8DEB      1481            mov     (_main_voltages_1_71 + 3),r5
048A           1482   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:394: voltages[1] += Volts_at_Pin(QFP32_MUX_P1_5);
048A 85EC68    1483            mov     _main_sloc0_1_0,(_main_voltages_1_71 + 0x0004)
048D 85ED69    1484            mov     (_main_sloc0_1_0 + 1),((_main_voltages_1_71 + 0x0004) + 1)
0490 85EE6A    1485            mov     (_main_sloc0_1_0 + 2),((_main_voltages_1_71 + 0x0004) + 2)
0493 85EF6B    1486            mov     (_main_sloc0_1_0 + 3),((_main_voltages_1_71 + 0x0004) + 3)
0496 75820B    1487            mov     dpl,#0x0B
0499 120100    1488            lcall   _Volts_at_Pin
049C AE82      1489            mov     r6,dpl
049E AF83      1490            mov     r7,dph
04A0 AAF0      1491            mov     r2,b
04A2 FB        1492            mov     r3,a
04A3 C006      1493            push    ar6
04A5 C007      1494            push    ar7
04A7 C002      1495            push    ar2
04A9 C003      1496            push    ar3
04AB 856882    1497            mov     dpl,_main_sloc0_1_0
04AE 856983    1498            mov     dph,(_main_sloc0_1_0 + 1)
04B1 856AF0    1499            mov     b,(_main_sloc0_1_0 + 2)
04B4 E56B      1500            mov     a,(_main_sloc0_1_0 + 3)
04B6 120100    1501            lcall   ___fsadd
04B9 AA82      1502            mov     r2,dpl
04BB AB83      1503            mov     r3,dph
04BD ACF0      1504            mov     r4,b
04BF FD        1505            mov     r5,a
04C0 E581      1506            mov     a,sp
04C2 24FC      1507            add     a,#0xfc
04C4 F581      1508            mov     sp,a
04C6 8AEC      1509            mov     (_main_voltages_1_71 + 0x0004),r2
04C8 8BED      1510            mov     ((_main_voltages_1_71 + 0x0004) + 1),r3
04CA 8CEE      1511            mov     ((_main_voltages_1_71 + 0x0004) + 2),r4
04CC 8DEF      1512            mov     ((_main_voltages_1_71 + 0x0004) + 3),r5
04CE           1513   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:395: voltages[2] += Volts_at_Pin(QFP32_MUX_P1_6);
04CE 85F068    1514            mov     _main_sloc0_1_0,(_main_voltages_1_71 + 0x0008)
04D1 85F169    1515            mov     (_main_sloc0_1_0 + 1),((_main_voltages_1_71 + 0x0008) + 1)
04D4 85F26A    1516            mov     (_main_sloc0_1_0 + 2),((_main_voltages_1_71 + 0x0008) + 2)
04D7 85F36B    1517            mov     (_main_sloc0_1_0 + 3),((_main_voltages_1_71 + 0x0008) + 3)
04DA 75820C    1518            mov     dpl,#0x0C
04DD 120100    1519            lcall   _Volts_at_Pin
04E0 AE82      1520            mov     r6,dpl
04E2 AF83      1521            mov     r7,dph
04E4 AAF0      1522            mov     r2,b
04E6 FB        1523            mov     r3,a
04E7 C006      1524            push    ar6
04E9 C007      1525            push    ar7
04EB C002      1526            push    ar2
04ED C003      1527            push    ar3
04EF 856882    1528            mov     dpl,_main_sloc0_1_0
04F2 856983    1529            mov     dph,(_main_sloc0_1_0 + 1)
04F5 856AF0    1530            mov     b,(_main_sloc0_1_0 + 2)
04F8 E56B      1531            mov     a,(_main_sloc0_1_0 + 3)
04FA 120100    1532            lcall   ___fsadd
04FD AA82      1533            mov     r2,dpl
04FF AB83      1534            mov     r3,dph
0501 ACF0      1535            mov     r4,b
0503 FD        1536            mov     r5,a
0504 E581      1537            mov     a,sp
0506 24FC      1538            add     a,#0xfc
0508 F581      1539            mov     sp,a
050A 8AF0      1540            mov     (_main_voltages_1_71 + 0x0008),r2
050C 8BF1      1541            mov     ((_main_voltages_1_71 + 0x0008) + 1),r3
050E 8CF2      1542            mov     ((_main_voltages_1_71 + 0x0008) + 2),r4
0510 8DF3      1543            mov     ((_main_voltages_1_71 + 0x0008) + 3),r5
0512           1544   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:398: measureCount++;
0512 05C8      1545            inc     _main_measureCount_1_71
0514 E4        1546            clr     a
0515 B5C828    1547            cjne    a,_main_measureCount_1_71,L013029?
0518 05C9      1548            inc     (_main_measureCount_1_71 + 1)
051A           1549   L013029?:
051A 020100    1550            ljmp    L013013?
051D           1551   L013010?:
051D           1552   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:403: vReadings[0] = voltages[0]/totalMeasurements;
051D E4        1553            clr     a
051E C0E0      1554            push    acc
0520 C0E0      1555            push    acc
0522 74FA      1556            mov     a,#0xFA
0524 C0E0      1557            push    acc
0526 7443      1558            mov     a,#0x43
0528 C0E0      1559            push    acc
052A 85E882    1560            mov     dpl,_main_voltages_1_71
052D 85E983    1561            mov     dph,(_main_voltages_1_71 + 1)
0530 85EAF0    1562            mov     b,(_main_voltages_1_71 + 2)
0533 E5EB      1563            mov     a,(_main_voltages_1_71 + 3)
0535 120100    1564            lcall   ___fsdiv
0538 858268    1565            mov     _main_sloc0_1_0,dpl
053B 858369    1566            mov     (_main_sloc0_1_0 + 1),dph
053E 85F06A    1567            mov     (_main_sloc0_1_0 + 2),b
0541 F56B      1568            mov     (_main_sloc0_1_0 + 3),a
0543 E581      1569            mov     a,sp
0545 24FC      1570            add     a,#0xfc
0547 F581      1571            mov     sp,a
0549 856898    1572            mov     _main_vReadings_1_71,_main_sloc0_1_0
054C 856999    1573            mov     (_main_vReadings_1_71 + 1),(_main_sloc0_1_0 + 1)
054F 856A9A    1574            mov     (_main_vReadings_1_71 + 2),(_main_sloc0_1_0 + 2)
0552 856B9B    1575            mov     (_main_vReadings_1_71 + 3),(_main_sloc0_1_0 + 3)
0555           1576   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:404: vReadings[1] = voltages[1]/totalMeasurements;
0555 E4        1577            clr     a
0556 C0E0      1578            push    acc
0558 C0E0      1579            push    acc
055A 74FA      1580            mov     a,#0xFA
055C C0E0      1581            push    acc
055E 7443      1582            mov     a,#0x43
0560 C0E0      1583            push    acc
0562 85EC82    1584            mov     dpl,(_main_voltages_1_71 + 0x0004)
0565 85ED83    1585            mov     dph,((_main_voltages_1_71 + 0x0004) + 1)
0568 85EEF0    1586            mov     b,((_main_voltages_1_71 + 0x0004) + 2)
056B E5EF      1587            mov     a,((_main_voltages_1_71 + 0x0004) + 3)
056D 120100    1588            lcall   ___fsdiv
0570 8582A8    1589            mov     _main_sloc1_1_0,dpl
0573 8583A9    1590            mov     (_main_sloc1_1_0 + 1),dph
0576 85F0AA    1591            mov     (_main_sloc1_1_0 + 2),b
0579 F5AB      1592            mov     (_main_sloc1_1_0 + 3),a
057B E581      1593            mov     a,sp
057D 24FC      1594            add     a,#0xfc
057F F581      1595            mov     sp,a
0581 85A89C    1596            mov     (_main_vReadings_1_71 + 0x0004),_main_sloc1_1_0
0584 85A99D    1597            mov     ((_main_vReadings_1_71 + 0x0004) + 1),(_main_sloc1_1_0 + 1)
0587 85AA9E    1598            mov     ((_main_vReadings_1_71 + 0x0004) + 2),(_main_sloc1_1_0 + 2)
058A 85AB9F    1599            mov     ((_main_vReadings_1_71 + 0x0004) + 3),(_main_sloc1_1_0 + 3)
058D           1600   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:405: vReadings[2] = voltages[2]/totalMeasurements;
058D E4        1601            clr     a
058E C0E0      1602            push    acc
0590 C0E0      1603            push    acc
0592 74FA      1604            mov     a,#0xFA
0594 C0E0      1605            push    acc
0596 7443      1606            mov     a,#0x43
0598 C0E0      1607            push    acc
059A 85F082    1608            mov     dpl,(_main_voltages_1_71 + 0x0008)
059D 85F183    1609            mov     dph,((_main_voltages_1_71 + 0x0008) + 1)
05A0 85F2F0    1610            mov     b,((_main_voltages_1_71 + 0x0008) + 2)
05A3 E5F3      1611            mov     a,((_main_voltages_1_71 + 0x0008) + 3)
05A5 120100    1612            lcall   ___fsdiv
05A8 AC82      1613            mov     r4,dpl
05AA AD83      1614            mov     r5,dph
05AC AAF0      1615            mov     r2,b
05AE FB        1616            mov     r3,a
05AF E581      1617            mov     a,sp
05B1 24FC      1618            add     a,#0xfc
05B3 F581      1619            mov     sp,a
05B5 8CA0      1620            mov     (_main_vReadings_1_71 + 0x0008),r4
05B7 8DA1      1621            mov     ((_main_vReadings_1_71 + 0x0008) + 1),r5
05B9 8AA2      1622            mov     ((_main_vReadings_1_71 + 0x0008) + 2),r2
05BB 8BA3      1623            mov     ((_main_vReadings_1_71 + 0x0008) + 3),r3
05BD           1624   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:408: printf("V(P1.4)=%4.2fV, V(P1.5)=%4.2fV, V(P1.6)=%5.2fV\r", vReadings[0], vReadings[1], vReadings[2]);
05BD C004      1625            push    ar4
05BF C005      1626            push    ar5
05C1 C002      1627            push    ar2
05C3 C003      1628            push    ar3
05C5 C0A8      1629            push    _main_sloc1_1_0
05C7 C0A9      1630            push    (_main_sloc1_1_0 + 1)
05C9 C0AA      1631            push    (_main_sloc1_1_0 + 2)
05CB C0AB      1632            push    (_main_sloc1_1_0 + 3)
05CD C068      1633            push    _main_sloc0_1_0
05CF C069      1634            push    (_main_sloc0_1_0 + 1)
05D1 C06A      1635            push    (_main_sloc0_1_0 + 2)
05D3 C06B      1636            push    (_main_sloc0_1_0 + 3)
05D5 7468      1637            mov     a,#__str_9
05D7 C0E0      1638            push    acc
05D9 74CC      1639            mov     a,#(__str_9 >> 8)
05DB C0E0      1640            push    acc
05DD 7480      1641            mov     a,#0x80
05DF C0E0      1642            push    acc
05E1 120100    1643            lcall   _printf
05E4 E581      1644            mov     a,sp
05E6 24F1      1645            add     a,#0xf1
05E8 F581      1646            mov     sp,a
05EA           1647   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:411: measureCount = 0;
05EA           1648   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:412: voltages[0] = 0;
05EA E4        1649            clr a
05EB F5C8      1650            mov _main_measureCount_1_71,a
05ED F5C9      1651            mov (_main_measureCount_1_71 + 1),a
05EF F5E8      1652            mov _main_voltages_1_71,a
05F1 F5E9      1653            mov (_main_voltages_1_71 + 1),a
05F3 F5EA      1654            mov (_main_voltages_1_71 + 2),a
05F5 F5EB      1655            mov (_main_voltages_1_71 + 3),a
05F7           1656   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:413: voltages[1] = 0;
05F7 75EC00    1657            mov     (_main_voltages_1_71 + 0x0004),#0x00
05FA 75ED00    1658            mov     ((_main_voltages_1_71 + 0x0004) + 1),#0x00
05FD 75EE00    1659            mov     ((_main_voltages_1_71 + 0x0004) + 2),#0x00
0600 75EF00    1660            mov     ((_main_voltages_1_71 + 0x0004) + 3),#0x00
0603           1661   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:414: voltages[2] = 0;
0603 75F000    1662            mov     (_main_voltages_1_71 + 0x0008),#0x00
0606 75F100    1663            mov     ((_main_voltages_1_71 + 0x0008) + 1),#0x00
0609 75F200    1664            mov     ((_main_voltages_1_71 + 0x0008) + 2),#0x00
060C 75F300    1665            mov     ((_main_voltages_1_71 + 0x0008) + 3),#0x00
060F 020100    1666            ljmp    L013013?
0612           1667            rseg R_CSEG
0612           1668   
0000           1669            rseg R_XINIT
0000           1670   
0000           1671            rseg R_CONST
0000           1672   __str_0:
0000 1B        1673            db 0x1B
0001 5B324A    1674            db '[2J'
0004 00        1675            db 0x00
0005           1676   __str_1:
0005 50696E20  1677            db 'Pin configuration done.'
     636F6E66
     69677572
     6174696F
     6E20646F
     6E652E
001C 0A        1678            db 0x0A
001D 00        1679            db 0x00
001E           1680   __str_2:
001E 50434120  1681            db 'PCA configuration done.'
     636F6E66
     69677572
     6174696F
     6E20646F
     6E652E
0035 0A        1682            db 0x0A
0036 00        1683            db 0x00
0037           1684   __str_3:
0037 41444320  1685            db 'ADC configuration done.'
     636F6E66
     69677572
     6174696F
     6E20646F
     6E652E
004E 0A        1686            db 0x0A
004F 00        1687            db 0x00
0050           1688   __str_4:
0050 0A        1689            db 0x0A
0051 00        1690            db 0x00
0052           1691   __str_5:
0052 456E7465  1692            db 'Enter direction of rotation:'
     72206469
     72656374
     696F6E20
     6F662072
     6F746174
     696F6E3A
006E 0A        1693            db 0x0A
006F 00        1694            db 0x00
0070           1695   __str_6:
0070 2563      1696            db '%c'
0072 00        1697            db 0x00
0073           1698   __str_7:
0073 4D6F7669  1699            db 'Moving forward.'
     6E672066
     6F727761
     72642E
0082 0A        1700            db 0x0A
0083 00        1701            db 0x00
0084           1702   __str_8:
0084 4D6F7669  1703            db 'Moving backwards.'
     6E672062
     61636B77
     61726473
     2E
0095 0A        1704            db 0x0A
0096 00        1705            db 0x00
0097           1706   __str_9:
0097 56285031  1707            db 'V(P1.4)=%4.2fV, V(P1.5)=%4.2fV, V(P1.6)=%5.2fV'
     2E34293D
     25342E32
     66562C20
     56285031
     2E35293D
     25342E32
     66562C20
     56285031
     2E36293D
     25352E32
     6656
00C5 0D        1708            db 0x0D
00C6 00        1709            db 0x00
00C7           1710   
002E           1711            CSEG
002E           1712   
002E           1713   end
