0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Sun Mar 03 20:06:59 2019
0000              5   ;--------------------------------------------------------
                  5   $name PCA
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _ConfigurePins
0000             29            public _takeStep
0000             30            public _ConfigPCA0
0000             31            public _Volts_at_Pin
0000             32            public _ADC_at_Pin
0000             33            public _InitADC
0000             34            public _getsn
0000             35            public _Timer3_ISR
0000             36            public _Timer2_ISR
0000             37            public __c51_external_startup
0000             38            public _getsn_PARM_2
0000             39            public _totalSteps
0000             40            public _stepCount
0000             41            public _stepFlag
0000             42   ;--------------------------------------------------------
0000             43   ; Special Function Registers
0000             44   ;--------------------------------------------------------
0000             45   _ACC            DATA 0xe0
0000             46   _ADC0ASAH       DATA 0xb6
0000             47   _ADC0ASAL       DATA 0xb5
0000             48   _ADC0ASCF       DATA 0xa1
0000             49   _ADC0ASCT       DATA 0xc7
0000             50   _ADC0CF0        DATA 0xbc
0000             51   _ADC0CF1        DATA 0xb9
0000             52   _ADC0CF2        DATA 0xdf
0000             53   _ADC0CN0        DATA 0xe8
0000             54   _ADC0CN1        DATA 0xb2
0000             55   _ADC0CN2        DATA 0xb3
0000             56   _ADC0GTH        DATA 0xc4
0000             57   _ADC0GTL        DATA 0xc3
0000             58   _ADC0H          DATA 0xbe
0000             59   _ADC0L          DATA 0xbd
0000             60   _ADC0LTH        DATA 0xc6
0000             61   _ADC0LTL        DATA 0xc5
0000             62   _ADC0MX         DATA 0xbb
0000             63   _B              DATA 0xf0
0000             64   _CKCON0         DATA 0x8e
0000             65   _CKCON1         DATA 0xa6
0000             66   _CLEN0          DATA 0xc6
0000             67   _CLIE0          DATA 0xc7
0000             68   _CLIF0          DATA 0xe8
0000             69   _CLKSEL         DATA 0xa9
0000             70   _CLOUT0         DATA 0xd1
0000             71   _CLU0CF         DATA 0xb1
0000             72   _CLU0FN         DATA 0xaf
0000             73   _CLU0MX         DATA 0x84
0000             74   _CLU1CF         DATA 0xb3
0000             75   _CLU1FN         DATA 0xb2
0000             76   _CLU1MX         DATA 0x85
0000             77   _CLU2CF         DATA 0xb6
0000             78   _CLU2FN         DATA 0xb5
0000             79   _CLU2MX         DATA 0x91
0000             80   _CLU3CF         DATA 0xbf
0000             81   _CLU3FN         DATA 0xbe
0000             82   _CLU3MX         DATA 0xae
0000             83   _CMP0CN0        DATA 0x9b
0000             84   _CMP0CN1        DATA 0x99
0000             85   _CMP0MD         DATA 0x9d
0000             86   _CMP0MX         DATA 0x9f
0000             87   _CMP1CN0        DATA 0xbf
0000             88   _CMP1CN1        DATA 0xac
0000             89   _CMP1MD         DATA 0xab
0000             90   _CMP1MX         DATA 0xaa
0000             91   _CRC0CN0        DATA 0xce
0000             92   _CRC0CN1        DATA 0x86
0000             93   _CRC0CNT        DATA 0xd3
0000             94   _CRC0DAT        DATA 0xcb
0000             95   _CRC0FLIP       DATA 0xcf
0000             96   _CRC0IN         DATA 0xca
0000             97   _CRC0ST         DATA 0xd2
0000             98   _DAC0CF0        DATA 0x91
0000             99   _DAC0CF1        DATA 0x92
0000            100   _DAC0H          DATA 0x85
0000            101   _DAC0L          DATA 0x84
0000            102   _DAC1CF0        DATA 0x93
0000            103   _DAC1CF1        DATA 0x94
0000            104   _DAC1H          DATA 0x8a
0000            105   _DAC1L          DATA 0x89
0000            106   _DAC2CF0        DATA 0x95
0000            107   _DAC2CF1        DATA 0x96
0000            108   _DAC2H          DATA 0x8c
0000            109   _DAC2L          DATA 0x8b
0000            110   _DAC3CF0        DATA 0x9a
0000            111   _DAC3CF1        DATA 0x9c
0000            112   _DAC3H          DATA 0x8e
0000            113   _DAC3L          DATA 0x8d
0000            114   _DACGCF0        DATA 0x88
0000            115   _DACGCF1        DATA 0x98
0000            116   _DACGCF2        DATA 0xa2
0000            117   _DERIVID        DATA 0xad
0000            118   _DEVICEID       DATA 0xb5
0000            119   _DPH            DATA 0x83
0000            120   _DPL            DATA 0x82
0000            121   _EIE1           DATA 0xe6
0000            122   _EIE2           DATA 0xf3
0000            123   _EIP1           DATA 0xbb
0000            124   _EIP1H          DATA 0xee
0000            125   _EIP2           DATA 0xed
0000            126   _EIP2H          DATA 0xf6
0000            127   _EMI0CN         DATA 0xe7
0000            128   _FLKEY          DATA 0xb7
0000            129   _HFO0CAL        DATA 0xc7
0000            130   _HFO1CAL        DATA 0xd6
0000            131   _HFOCN          DATA 0xef
0000            132   _I2C0ADM        DATA 0xff
0000            133   _I2C0CN0        DATA 0xba
0000            134   _I2C0DIN        DATA 0xbc
0000            135   _I2C0DOUT       DATA 0xbb
0000            136   _I2C0FCN0       DATA 0xad
0000            137   _I2C0FCN1       DATA 0xab
0000            138   _I2C0FCT        DATA 0xf5
0000            139   _I2C0SLAD       DATA 0xbd
0000            140   _I2C0STAT       DATA 0xb9
0000            141   _IE             DATA 0xa8
0000            142   _IP             DATA 0xb8
0000            143   _IPH            DATA 0xf2
0000            144   _IT01CF         DATA 0xe4
0000            145   _LFO0CN         DATA 0xb1
0000            146   _P0             DATA 0x80
0000            147   _P0MASK         DATA 0xfe
0000            148   _P0MAT          DATA 0xfd
0000            149   _P0MDIN         DATA 0xf1
0000            150   _P0MDOUT        DATA 0xa4
0000            151   _P0SKIP         DATA 0xd4
0000            152   _P1             DATA 0x90
0000            153   _P1MASK         DATA 0xee
0000            154   _P1MAT          DATA 0xed
0000            155   _P1MDIN         DATA 0xf2
0000            156   _P1MDOUT        DATA 0xa5
0000            157   _P1SKIP         DATA 0xd5
0000            158   _P2             DATA 0xa0
0000            159   _P2MASK         DATA 0xfc
0000            160   _P2MAT          DATA 0xfb
0000            161   _P2MDIN         DATA 0xf3
0000            162   _P2MDOUT        DATA 0xa6
0000            163   _P2SKIP         DATA 0xcc
0000            164   _P3             DATA 0xb0
0000            165   _P3MDIN         DATA 0xf4
0000            166   _P3MDOUT        DATA 0x9c
0000            167   _PCA0CENT       DATA 0x9e
0000            168   _PCA0CLR        DATA 0x9c
0000            169   _PCA0CN0        DATA 0xd8
0000            170   _PCA0CPH0       DATA 0xfc
0000            171   _PCA0CPH1       DATA 0xea
0000            172   _PCA0CPH2       DATA 0xec
0000            173   _PCA0CPH3       DATA 0xf5
0000            174   _PCA0CPH4       DATA 0x85
0000            175   _PCA0CPH5       DATA 0xde
0000            176   _PCA0CPL0       DATA 0xfb
0000            177   _PCA0CPL1       DATA 0xe9
0000            178   _PCA0CPL2       DATA 0xeb
0000            179   _PCA0CPL3       DATA 0xf4
0000            180   _PCA0CPL4       DATA 0x84
0000            181   _PCA0CPL5       DATA 0xdd
0000            182   _PCA0CPM0       DATA 0xda
0000            183   _PCA0CPM1       DATA 0xdb
0000            184   _PCA0CPM2       DATA 0xdc
0000            185   _PCA0CPM3       DATA 0xae
0000            186   _PCA0CPM4       DATA 0xaf
0000            187   _PCA0CPM5       DATA 0xcc
0000            188   _PCA0H          DATA 0xfa
0000            189   _PCA0L          DATA 0xf9
0000            190   _PCA0MD         DATA 0xd9
0000            191   _PCA0POL        DATA 0x96
0000            192   _PCA0PWM        DATA 0xf7
0000            193   _PCON0          DATA 0x87
0000            194   _PCON1          DATA 0xcd
0000            195   _PFE0CN         DATA 0xc1
0000            196   _PRTDRV         DATA 0xf6
0000            197   _PSCTL          DATA 0x8f
0000            198   _PSTAT0         DATA 0xaa
0000            199   _PSW            DATA 0xd0
0000            200   _REF0CN         DATA 0xd1
0000            201   _REG0CN         DATA 0xc9
0000            202   _REVID          DATA 0xb6
0000            203   _RSTSRC         DATA 0xef
0000            204   _SBCON1         DATA 0x94
0000            205   _SBRLH1         DATA 0x96
0000            206   _SBRLL1         DATA 0x95
0000            207   _SBUF           DATA 0x99
0000            208   _SBUF0          DATA 0x99
0000            209   _SBUF1          DATA 0x92
0000            210   _SCON           DATA 0x98
0000            211   _SCON0          DATA 0x98
0000            212   _SCON1          DATA 0xc8
0000            213   _SFRPAGE        DATA 0xa7
0000            214   _SFRPGCN        DATA 0xbc
0000            215   _SFRSTACK       DATA 0xd7
0000            216   _SMB0ADM        DATA 0xd6
0000            217   _SMB0ADR        DATA 0xd7
0000            218   _SMB0CF         DATA 0xc1
0000            219   _SMB0CN0        DATA 0xc0
0000            220   _SMB0DAT        DATA 0xc2
0000            221   _SMB0FCN0       DATA 0xc3
0000            222   _SMB0FCN1       DATA 0xc4
0000            223   _SMB0FCT        DATA 0xef
0000            224   _SMB0RXLN       DATA 0xc5
0000            225   _SMB0TC         DATA 0xac
0000            226   _SMOD1          DATA 0x93
0000            227   _SP             DATA 0x81
0000            228   _SPI0CFG        DATA 0xa1
0000            229   _SPI0CKR        DATA 0xa2
0000            230   _SPI0CN0        DATA 0xf8
0000            231   _SPI0DAT        DATA 0xa3
0000            232   _SPI0FCN0       DATA 0x9a
0000            233   _SPI0FCN1       DATA 0x9b
0000            234   _SPI0FCT        DATA 0xf7
0000            235   _SPI0PCF        DATA 0xdf
0000            236   _TCON           DATA 0x88
0000            237   _TH0            DATA 0x8c
0000            238   _TH1            DATA 0x8d
0000            239   _TL0            DATA 0x8a
0000            240   _TL1            DATA 0x8b
0000            241   _TMOD           DATA 0x89
0000            242   _TMR2CN0        DATA 0xc8
0000            243   _TMR2CN1        DATA 0xfd
0000            244   _TMR2H          DATA 0xcf
0000            245   _TMR2L          DATA 0xce
0000            246   _TMR2RLH        DATA 0xcb
0000            247   _TMR2RLL        DATA 0xca
0000            248   _TMR3CN0        DATA 0x91
0000            249   _TMR3CN1        DATA 0xfe
0000            250   _TMR3H          DATA 0x95
0000            251   _TMR3L          DATA 0x94
0000            252   _TMR3RLH        DATA 0x93
0000            253   _TMR3RLL        DATA 0x92
0000            254   _TMR4CN0        DATA 0x98
0000            255   _TMR4CN1        DATA 0xff
0000            256   _TMR4H          DATA 0xa5
0000            257   _TMR4L          DATA 0xa4
0000            258   _TMR4RLH        DATA 0xa3
0000            259   _TMR4RLL        DATA 0xa2
0000            260   _TMR5CN0        DATA 0xc0
0000            261   _TMR5CN1        DATA 0xf1
0000            262   _TMR5H          DATA 0xd5
0000            263   _TMR5L          DATA 0xd4
0000            264   _TMR5RLH        DATA 0xd3
0000            265   _TMR5RLL        DATA 0xd2
0000            266   _UART0PCF       DATA 0xd9
0000            267   _UART1FCN0      DATA 0x9d
0000            268   _UART1FCN1      DATA 0xd8
0000            269   _UART1FCT       DATA 0xfa
0000            270   _UART1LIN       DATA 0x9e
0000            271   _UART1PCF       DATA 0xda
0000            272   _VDM0CN         DATA 0xff
0000            273   _WDTCN          DATA 0x97
0000            274   _XBR0           DATA 0xe1
0000            275   _XBR1           DATA 0xe2
0000            276   _XBR2           DATA 0xe3
0000            277   _XOSC0CN        DATA 0x86
0000            278   _DPTR           DATA 0x8382
0000            279   _TMR2RL         DATA 0xcbca
0000            280   _TMR3RL         DATA 0x9392
0000            281   _TMR4RL         DATA 0xa3a2
0000            282   _TMR5RL         DATA 0xd3d2
0000            283   _TMR0           DATA 0x8c8a
0000            284   _TMR1           DATA 0x8d8b
0000            285   _TMR2           DATA 0xcfce
0000            286   _TMR3           DATA 0x9594
0000            287   _TMR4           DATA 0xa5a4
0000            288   _TMR5           DATA 0xd5d4
0000            289   _SBRL1          DATA 0x9695
0000            290   _PCA0           DATA 0xfaf9
0000            291   _PCA0CP0        DATA 0xfcfb
0000            292   _PCA0CP1        DATA 0xeae9
0000            293   _PCA0CP2        DATA 0xeceb
0000            294   _PCA0CP3        DATA 0xf5f4
0000            295   _PCA0CP4        DATA 0x8584
0000            296   _PCA0CP5        DATA 0xdedd
0000            297   _ADC0ASA        DATA 0xb6b5
0000            298   _ADC0GT         DATA 0xc4c3
0000            299   _ADC0           DATA 0xbebd
0000            300   _ADC0LT         DATA 0xc6c5
0000            301   _DAC0           DATA 0x8584
0000            302   _DAC1           DATA 0x8a89
0000            303   _DAC2           DATA 0x8c8b
0000            304   _DAC3           DATA 0x8e8d
0000            305   ;--------------------------------------------------------
0000            306   ; special function bits
0000            307   ;--------------------------------------------------------
0000            308   _ACC_0          BIT 0xe0
0000            309   _ACC_1          BIT 0xe1
0000            310   _ACC_2          BIT 0xe2
0000            311   _ACC_3          BIT 0xe3
0000            312   _ACC_4          BIT 0xe4
0000            313   _ACC_5          BIT 0xe5
0000            314   _ACC_6          BIT 0xe6
0000            315   _ACC_7          BIT 0xe7
0000            316   _TEMPE          BIT 0xe8
0000            317   _ADGN0          BIT 0xe9
0000            318   _ADGN1          BIT 0xea
0000            319   _ADWINT         BIT 0xeb
0000            320   _ADBUSY         BIT 0xec
0000            321   _ADINT          BIT 0xed
0000            322   _IPOEN          BIT 0xee
0000            323   _ADEN           BIT 0xef
0000            324   _B_0            BIT 0xf0
0000            325   _B_1            BIT 0xf1
0000            326   _B_2            BIT 0xf2
0000            327   _B_3            BIT 0xf3
0000            328   _B_4            BIT 0xf4
0000            329   _B_5            BIT 0xf5
0000            330   _B_6            BIT 0xf6
0000            331   _B_7            BIT 0xf7
0000            332   _C0FIF          BIT 0xe8
0000            333   _C0RIF          BIT 0xe9
0000            334   _C1FIF          BIT 0xea
0000            335   _C1RIF          BIT 0xeb
0000            336   _C2FIF          BIT 0xec
0000            337   _C2RIF          BIT 0xed
0000            338   _C3FIF          BIT 0xee
0000            339   _C3RIF          BIT 0xef
0000            340   _D1SRC0         BIT 0x88
0000            341   _D1SRC1         BIT 0x89
0000            342   _D1AMEN         BIT 0x8a
0000            343   _D01REFSL       BIT 0x8b
0000            344   _D3SRC0         BIT 0x8c
0000            345   _D3SRC1         BIT 0x8d
0000            346   _D3AMEN         BIT 0x8e
0000            347   _D23REFSL       BIT 0x8f
0000            348   _D0UDIS         BIT 0x98
0000            349   _D1UDIS         BIT 0x99
0000            350   _D2UDIS         BIT 0x9a
0000            351   _D3UDIS         BIT 0x9b
0000            352   _EX0            BIT 0xa8
0000            353   _ET0            BIT 0xa9
0000            354   _EX1            BIT 0xaa
0000            355   _ET1            BIT 0xab
0000            356   _ES0            BIT 0xac
0000            357   _ET2            BIT 0xad
0000            358   _ESPI0          BIT 0xae
0000            359   _EA             BIT 0xaf
0000            360   _PX0            BIT 0xb8
0000            361   _PT0            BIT 0xb9
0000            362   _PX1            BIT 0xba
0000            363   _PT1            BIT 0xbb
0000            364   _PS0            BIT 0xbc
0000            365   _PT2            BIT 0xbd
0000            366   _PSPI0          BIT 0xbe
0000            367   _P0_0           BIT 0x80
0000            368   _P0_1           BIT 0x81
0000            369   _P0_2           BIT 0x82
0000            370   _P0_3           BIT 0x83
0000            371   _P0_4           BIT 0x84
0000            372   _P0_5           BIT 0x85
0000            373   _P0_6           BIT 0x86
0000            374   _P0_7           BIT 0x87
0000            375   _P1_0           BIT 0x90
0000            376   _P1_1           BIT 0x91
0000            377   _P1_2           BIT 0x92
0000            378   _P1_3           BIT 0x93
0000            379   _P1_4           BIT 0x94
0000            380   _P1_5           BIT 0x95
0000            381   _P1_6           BIT 0x96
0000            382   _P1_7           BIT 0x97
0000            383   _P2_0           BIT 0xa0
0000            384   _P2_1           BIT 0xa1
0000            385   _P2_2           BIT 0xa2
0000            386   _P2_3           BIT 0xa3
0000            387   _P2_4           BIT 0xa4
0000            388   _P2_5           BIT 0xa5
0000            389   _P2_6           BIT 0xa6
0000            390   _P3_0           BIT 0xb0
0000            391   _P3_1           BIT 0xb1
0000            392   _P3_2           BIT 0xb2
0000            393   _P3_3           BIT 0xb3
0000            394   _P3_4           BIT 0xb4
0000            395   _P3_7           BIT 0xb7
0000            396   _CCF0           BIT 0xd8
0000            397   _CCF1           BIT 0xd9
0000            398   _CCF2           BIT 0xda
0000            399   _CCF3           BIT 0xdb
0000            400   _CCF4           BIT 0xdc
0000            401   _CCF5           BIT 0xdd
0000            402   _CR             BIT 0xde
0000            403   _CF             BIT 0xdf
0000            404   _PARITY         BIT 0xd0
0000            405   _F1             BIT 0xd1
0000            406   _OV             BIT 0xd2
0000            407   _RS0            BIT 0xd3
0000            408   _RS1            BIT 0xd4
0000            409   _F0             BIT 0xd5
0000            410   _AC             BIT 0xd6
0000            411   _CY             BIT 0xd7
0000            412   _RI             BIT 0x98
0000            413   _TI             BIT 0x99
0000            414   _RB8            BIT 0x9a
0000            415   _TB8            BIT 0x9b
0000            416   _REN            BIT 0x9c
0000            417   _CE             BIT 0x9d
0000            418   _SMODE          BIT 0x9e
0000            419   _RI1            BIT 0xc8
0000            420   _TI1            BIT 0xc9
0000            421   _RBX1           BIT 0xca
0000            422   _TBX1           BIT 0xcb
0000            423   _REN1           BIT 0xcc
0000            424   _PERR1          BIT 0xcd
0000            425   _OVR1           BIT 0xce
0000            426   _SI             BIT 0xc0
0000            427   _ACK            BIT 0xc1
0000            428   _ARBLOST        BIT 0xc2
0000            429   _ACKRQ          BIT 0xc3
0000            430   _STO            BIT 0xc4
0000            431   _STA            BIT 0xc5
0000            432   _TXMODE         BIT 0xc6
0000            433   _MASTER         BIT 0xc7
0000            434   _SPIEN          BIT 0xf8
0000            435   _TXNF           BIT 0xf9
0000            436   _NSSMD0         BIT 0xfa
0000            437   _NSSMD1         BIT 0xfb
0000            438   _RXOVRN         BIT 0xfc
0000            439   _MODF           BIT 0xfd
0000            440   _WCOL           BIT 0xfe
0000            441   _SPIF           BIT 0xff
0000            442   _IT0            BIT 0x88
0000            443   _IE0            BIT 0x89
0000            444   _IT1            BIT 0x8a
0000            445   _IE1            BIT 0x8b
0000            446   _TR0            BIT 0x8c
0000            447   _TF0            BIT 0x8d
0000            448   _TR1            BIT 0x8e
0000            449   _TF1            BIT 0x8f
0000            450   _T2XCLK0        BIT 0xc8
0000            451   _T2XCLK1        BIT 0xc9
0000            452   _TR2            BIT 0xca
0000            453   _T2SPLIT        BIT 0xcb
0000            454   _TF2CEN         BIT 0xcc
0000            455   _TF2LEN         BIT 0xcd
0000            456   _TF2L           BIT 0xce
0000            457   _TF2H           BIT 0xcf
0000            458   _T4XCLK0        BIT 0x98
0000            459   _T4XCLK1        BIT 0x99
0000            460   _TR4            BIT 0x9a
0000            461   _T4SPLIT        BIT 0x9b
0000            462   _TF4CEN         BIT 0x9c
0000            463   _TF4LEN         BIT 0x9d
0000            464   _TF4L           BIT 0x9e
0000            465   _TF4H           BIT 0x9f
0000            466   _T5XCLK0        BIT 0xc0
0000            467   _T5XCLK1        BIT 0xc1
0000            468   _TR5            BIT 0xc2
0000            469   _T5SPLIT        BIT 0xc3
0000            470   _TF5CEN         BIT 0xc4
0000            471   _TF5LEN         BIT 0xc5
0000            472   _TF5L           BIT 0xc6
0000            473   _TF5H           BIT 0xc7
0000            474   _RIE            BIT 0xd8
0000            475   _RXTO0          BIT 0xd9
0000            476   _RXTO1          BIT 0xda
0000            477   _RFRQ           BIT 0xdb
0000            478   _TIE            BIT 0xdc
0000            479   _TXHOLD         BIT 0xdd
0000            480   _TXNF1          BIT 0xde
0000            481   _TFRQ           BIT 0xdf
0000            482   ;--------------------------------------------------------
0000            483   ; overlayable register banks
0000            484   ;--------------------------------------------------------
0000            485            rbank0 segment data overlay
0000            486   ;--------------------------------------------------------
0000            487   ; internal ram data
0000            488   ;--------------------------------------------------------
0000            489            rseg R_DSEG
0000            490   _stepFlag:
0000            491            ds 1
0001            492   _stepCount:
0001            493            ds 2
0003            494   _totalSteps:
0003            495            ds 2
0005            496   _getsn_PARM_2:
0005            497            ds 2
0007            498   _getsn_buff_1_48:
0007            499            ds 3
000A            500   _getsn_sloc0_1_0:
000A            501            ds 2
000C            502   _main_vReadings_1_68:
000C            503            ds 8
0014            504   _main_voltages_1_68:
0014            505            ds 8
001C            506   _main_measureCount_1_68:
001C            507            ds 2
001E            508   _main_stepsInterruptCounter_1_68:
001E            509            ds 2
0020            510   _main_sloc0_1_0:
0020            511            ds 4
0024            512   ;--------------------------------------------------------
0024            513   ; overlayable items in internal ram 
0024            514   ;--------------------------------------------------------
0000            515            rseg    R_OSEG
0000            516            rseg    R_OSEG
0000            517   ;--------------------------------------------------------
0000            518   ; indirectly addressable internal ram data
0000            519   ;--------------------------------------------------------
0000            520            rseg R_ISEG
0000            521   ;--------------------------------------------------------
0000            522   ; absolute internal ram data
0000            523   ;--------------------------------------------------------
0000            524            DSEG
0000            525   ;--------------------------------------------------------
0000            526   ; bit data
0000            527   ;--------------------------------------------------------
0000            528            rseg R_BSEG
0000            529   ;--------------------------------------------------------
0000            530   ; paged external ram data
0000            531   ;--------------------------------------------------------
0000            532            rseg R_PSEG
0000            533   ;--------------------------------------------------------
0000            534   ; external ram data
0000            535   ;--------------------------------------------------------
0000            536            rseg R_XSEG
0000            537   ;--------------------------------------------------------
0000            538   ; absolute external ram data
0000            539   ;--------------------------------------------------------
0000            540            XSEG
0000            541   ;--------------------------------------------------------
0000            542   ; external initialized ram data
0000            543   ;--------------------------------------------------------
0000            544            rseg R_IXSEG
0000            545            rseg R_HOME
0000            546            rseg R_GSINIT
0000            547            rseg R_CSEG
0000            548   ;--------------------------------------------------------
0000            549   ; Reset entry point and interrupt vectors
0000            550   ;--------------------------------------------------------
0000            551            CSEG at 0x0000
0000 020100     552            ljmp    _crt0
002B            553            CSEG at 0x002b
002B 020100     554            ljmp    _Timer2_ISR
0073            555            CSEG at 0x0073
0073 020100     556            ljmp    _Timer3_ISR
0076            557   ;--------------------------------------------------------
0076            558   ; global & static initialisations
0076            559   ;--------------------------------------------------------
0000            560            rseg R_HOME
0000            561            rseg R_GSINIT
0000            562            rseg R_GSINIT
0000            563   ;--------------------------------------------------------
0000            564   ; data variables initialization
0000            565   ;--------------------------------------------------------
0000            566            rseg R_DINIT
0000            567   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:34: volatile unsigned char stepFlag = 1;
0000 75D801     568            mov     _stepFlag,#0x01
0003            569   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:36: int stepCount = 0;
0003 E4         570            clr     a
0004 F598       571            mov     _stepCount,a
0006 F599       572            mov     (_stepCount + 1),a
0008            573   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:37: int totalSteps = 0;
0008 E4         574            clr     a
0009 F558       575            mov     _totalSteps,a
000B F559       576            mov     (_totalSteps + 1),a
000D            577            ; The linker places a 'ret' at the end of segment R_DINIT.
000D            578   ;--------------------------------------------------------
000D            579   ; code
000D            580   ;--------------------------------------------------------
0000            581            rseg R_CSEG
0000            582   ;------------------------------------------------------------
0000            583   ;Allocation info for local variables in function '_c51_external_startup'
0000            584   ;------------------------------------------------------------
0000            585   ;------------------------------------------------------------
0000            586   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:39: char _c51_external_startup (void)
0000            587   ;        -----------------------------------------
0000            588   ;         function _c51_external_startup
0000            589   ;        -----------------------------------------
0000            590   __c51_external_startup:
0000            591            using   0
0000            592   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:42: SFRPAGE = 0x00;
0000 75A700     593            mov     _SFRPAGE,#0x00
0003            594   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:43: WDTCN = 0xDE; //First key
0003 7597DE     595            mov     _WDTCN,#0xDE
0006            596   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:44: WDTCN = 0xAD; //Second key
0006 7597AD     597            mov     _WDTCN,#0xAD
0009            598   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:46: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     599            mov     _VDM0CN,#0x80
000C            600   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:47: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     601            mov     _RSTSRC,#0x06
000F            602   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:54: SFRPAGE = 0x10;
000F 75A710     603            mov     _SFRPAGE,#0x10
0012            604   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:55: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     605            mov     _PFE0CN,#0x20
0015            606   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:56: SFRPAGE = 0x00;
0015 75A700     607            mov     _SFRPAGE,#0x00
0018            608   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:77: CLKSEL = 0x00;
0018 75A900     609            mov     _CLKSEL,#0x00
001B            610   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:78: CLKSEL = 0x00;
001B 75A900     611            mov     _CLKSEL,#0x00
001E            612   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:79: while ((CLKSEL & 0x80) == 0);
001E            613   L002001?:
001E E5A9       614            mov     a,_CLKSEL
0020 30E798     615            jnb     acc.7,L002001?
0023            616   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:80: CLKSEL = 0x03;
0023 75A903     617            mov     _CLKSEL,#0x03
0026            618   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:81: CLKSEL = 0x03;
0026 75A903     619            mov     _CLKSEL,#0x03
0029            620   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:82: while ((CLKSEL & 0x80) == 0);
0029            621   L002004?:
0029 E5A9       622            mov     a,_CLKSEL
002B 30E718     623            jnb     acc.7,L002004?
002E            624   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:87: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     625            orl     _P0MDOUT,#0x10
0031            626   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:88: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)  
0031 75E101     627            mov     _XBR0,#0x01
0034            628   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:91: XBR1     = 0X02; //Enable PCA I/O and route CEX0 and CEX1 only (check reference manual page 120)
0034 75E202     629            mov     _XBR1,#0x02
0037            630   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:93: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     631            mov     _XBR2,#0x40
003A            632   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:99: SCON0 = 0x10;
003A 759810     633            mov     _SCON0,#0x10
003D            634   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:100: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     635            mov     _TH1,#0xE6
0040            636   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:101: TL1 = TH1;      // Init Timer1
0040 858D8B     637            mov     _TL1,_TH1
0043            638   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:102: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     639            anl     _TMOD,#0x0F
0046            640   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:103: TMOD |=  0x20;                       
0046 438920     641            orl     _TMOD,#0x20
0049            642   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:104: TR1 = 1; // START Timer1
0049 D28E       643            setb    _TR1
004B            644   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:105: TI = 1;  // Indicate TX0 ready
004B D299       645            setb    _TI
004D            646   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:108: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
004D 75C800     647            mov     _TMR2CN0,#0x00
0050            648   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:109: CKCON0|=0b_0001_0000; // Timer 2 uses the system clock
0050 438E10     649            orl     _CKCON0,#0x10
0053            650   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:110: TMR2RL=(0x10000L-(SYSCLK/(2*TIMER_2_FREQ))); // Initialize reload value
0053 75CA38     651            mov     _TMR2RL,#0x38
0056 75CB50     652            mov     (_TMR2RL >> 8),#0x50
0059            653   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:111: TMR2=0xffff;   // Set to reload immediately
0059 75CEFF     654            mov     _TMR2,#0xFF
005C 75CFFF     655            mov     (_TMR2 >> 8),#0xFF
005F            656   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:112: ET2=1;         // Enable Timer2 interrupts
005F D2AD       657            setb    _ET2
0061            658   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:113: TR2=1;         // Start Timer2 (TMR2CN is bit addressable)
0061 D2CA       659            setb    _TR2
0063            660   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:116: TMR3CN0=0x00;   // Stop Timer3; Clear TF3;
0063 759100     661            mov     _TMR3CN0,#0x00
0066            662   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:117: CKCON0|=0b_0100_0000; // Timer 3 uses the system clock
0066 438E40     663            orl     _CKCON0,#0x40
0069            664   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:118: TMR3RL=(0x10000L-(SYSCLK/(2*TIMER_3_FREQ))); // Initialize reload value
0069 7592B0     665            mov     _TMR3RL,#0xB0
006C 7593B9     666            mov     (_TMR3RL >> 8),#0xB9
006F            667   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:119: TMR3=0xffff;   // Set to reload immediately
006F 7594FF     668            mov     _TMR3,#0xFF
0072 7595FF     669            mov     (_TMR3 >> 8),#0xFF
0075            670   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:120: EIE1|=0b_1000_0000;     // Enable Timer3 interrupts
0075 43E680     671            orl     _EIE1,#0x80
0078            672   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:121: TMR3CN0|=0b_0000_0100;  // Start Timer3 (TMR3CN0 is not bit addressable)
0078 439104     673            orl     _TMR3CN0,#0x04
007B            674   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:123: EA=1; // Enable interrupts
007B D2AF       675            setb    _EA
007D            676   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:125: return 0;
007D 758200     677            mov     dpl,#0x00
0080 22         678            ret
0081            679   ;------------------------------------------------------------
0081            680   ;Allocation info for local variables in function 'Timer2_ISR'
0081            681   ;------------------------------------------------------------
0081            682   ;------------------------------------------------------------
0081            683   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:129: void Timer2_ISR (void) interrupt INTERRUPT_TIMER2
0081            684   ;        -----------------------------------------
0081            685   ;         function Timer2_ISR
0081            686   ;        -----------------------------------------
0081            687   _Timer2_ISR:
0081            688   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:131: SFRPAGE=0x0;
0081 75A700     689            mov     _SFRPAGE,#0x00
0084            690   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:132: TF2H = 0; // Clear Timer2 interrupt flag
0084 C2CF       691            clr     _TF2H
0086            692   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:134: TIMER_OUT_2=!TIMER_OUT_2;
0086 B2A5       693            cpl     _P2_5
0088            694   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:136: stepFlag = 1;
0088 75D801     695            mov     _stepFlag,#0x01
008B 32         696            reti
008C            697   ;        eliminated unneeded push/pop psw
008C            698   ;        eliminated unneeded push/pop dpl
008C            699   ;        eliminated unneeded push/pop dph
008C            700   ;        eliminated unneeded push/pop b
008C            701   ;        eliminated unneeded push/pop acc
008C            702   ;------------------------------------------------------------
008C            703   ;Allocation info for local variables in function 'Timer3_ISR'
008C            704   ;------------------------------------------------------------
008C            705   ;------------------------------------------------------------
008C            706   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:140: void Timer3_ISR (void) interrupt INTERRUPT_TIMER3
008C            707   ;        -----------------------------------------
008C            708   ;         function Timer3_ISR
008C            709   ;        -----------------------------------------
008C            710   _Timer3_ISR:
008C            711   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:142: SFRPAGE=0x0;
008C 75A700     712            mov     _SFRPAGE,#0x00
008F            713   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:143: TMR3CN0&=0b_0011_1111; // Clear Timer3 interrupt flags
008F 53913F     714            anl     _TMR3CN0,#0x3F
0092 32         715            reti
0093            716   ;        eliminated unneeded push/pop psw
0093            717   ;        eliminated unneeded push/pop dpl
0093            718   ;        eliminated unneeded push/pop dph
0093            719   ;        eliminated unneeded push/pop b
0093            720   ;        eliminated unneeded push/pop acc
0093            721   ;------------------------------------------------------------
0093            722   ;Allocation info for local variables in function 'getsn'
0093            723   ;------------------------------------------------------------
0093            724   ;len                       Allocated with name '_getsn_PARM_2'
0093            725   ;buff                      Allocated with name '_getsn_buff_1_48'
0093            726   ;j                         Allocated with name '_getsn_sloc0_1_0'
0093            727   ;c                         Allocated to registers r3 
0093            728   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
0093            729   ;------------------------------------------------------------
0093            730   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:148: int getsn (char * buff, int len)
0093            731   ;        -----------------------------------------
0093            732   ;         function getsn
0093            733   ;        -----------------------------------------
0093            734   _getsn:
0093 858238     735            mov     _getsn_buff_1_48,dpl
0096 858339     736            mov     (_getsn_buff_1_48 + 1),dph
0099 85F03A     737            mov     (_getsn_buff_1_48 + 2),b
009C            738   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:153: for(j=0; j<(len-1); j++)
009C E4         739            clr     a
009D F588       740            mov     _getsn_sloc0_1_0,a
009F F589       741            mov     (_getsn_sloc0_1_0 + 1),a
00A1 E518       742            mov     a,_getsn_PARM_2
00A3 24FF       743            add     a,#0xff
00A5 FF         744            mov     r7,a
00A6 E519       745            mov     a,(_getsn_PARM_2 + 1)
00A8 34FF       746            addc    a,#0xff
00AA F8         747            mov     r0,a
00AB 7900       748            mov     r1,#0x00
00AD 7A00       749            mov     r2,#0x00
00AF            750   L005005?:
00AF C3         751            clr     c
00B0 E9         752            mov     a,r1
00B1 9F         753            subb    a,r7
00B2 EA         754            mov     a,r2
00B3 6480       755            xrl     a,#0x80
00B5 88F0       756            mov     b,r0
00B7 63F080     757            xrl     b,#0x80
00BA 95F0       758            subb    a,b
00BC 5001       759            jnc     L005008?
00BE            760   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:155: c=getchar();
00BE C002       761            push    ar2
00C0 C007       762            push    ar7
00C2 C000       763            push    ar0
00C4 C001       764            push    ar1
00C6 120100     765            lcall   _getchar
00C9 AB82       766            mov     r3,dpl
00CB D001       767            pop     ar1
00CD D000       768            pop     ar0
00CF D007       769            pop     ar7
00D1 D002       770            pop     ar2
00D3            771   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:156: if ( (c=='\n') || (c=='\r') )
00D3 BB0AD8     772            cjne    r3,#0x0A,L005015?
00D6 8001       773            sjmp    L005001?
00D8            774   L005015?:
00D8 BB0D58     775            cjne    r3,#0x0D,L005002?
00DB            776   L005001?:
00DB            777   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:158: buff[j]=0;
00DB E588       778            mov     a,_getsn_sloc0_1_0
00DD 2538       779            add     a,_getsn_buff_1_48
00DF FC         780            mov     r4,a
00E0 E589       781            mov     a,(_getsn_sloc0_1_0 + 1)
00E2 3539       782            addc    a,(_getsn_buff_1_48 + 1)
00E4 FD         783            mov     r5,a
00E5 AE3A       784            mov     r6,(_getsn_buff_1_48 + 2)
00E7 8C82       785            mov     dpl,r4
00E9 8D83       786            mov     dph,r5
00EB 8EF0       787            mov     b,r6
00ED E4         788            clr     a
00EE 120100     789            lcall   __gptrput
00F1            790   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:159: return j;
00F1 858882     791            mov     dpl,_getsn_sloc0_1_0
00F4 858983     792            mov     dph,(_getsn_sloc0_1_0 + 1)
00F7 22         793            ret
00F8            794   L005002?:
00F8            795   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:163: buff[j]=c;
00F8 E9         796            mov     a,r1
00F9 2538       797            add     a,_getsn_buff_1_48
00FB FC         798            mov     r4,a
00FC EA         799            mov     a,r2
00FD 3539       800            addc    a,(_getsn_buff_1_48 + 1)
00FF FD         801            mov     r5,a
0100 AE3A       802            mov     r6,(_getsn_buff_1_48 + 2)
0102 8C82       803            mov     dpl,r4
0104 8D83       804            mov     dph,r5
0106 8EF0       805            mov     b,r6
0108 EB         806            mov     a,r3
0109 120100     807            lcall   __gptrput
010C            808   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:153: for(j=0; j<(len-1); j++)
010C 09         809            inc     r1
010D B900D8     810            cjne    r1,#0x00,L005018?
0110 0A         811            inc     r2
0111            812   L005018?:
0111 8988       813            mov     _getsn_sloc0_1_0,r1
0113 8A89       814            mov     (_getsn_sloc0_1_0 + 1),r2
0115 8001       815            sjmp    L005005?
0117            816   L005008?:
0117            817   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:166: buff[j]=0;
0117 E588       818            mov     a,_getsn_sloc0_1_0
0119 2538       819            add     a,_getsn_buff_1_48
011B FA         820            mov     r2,a
011C E589       821            mov     a,(_getsn_sloc0_1_0 + 1)
011E 3539       822            addc    a,(_getsn_buff_1_48 + 1)
0120 FB         823            mov     r3,a
0121 AC3A       824            mov     r4,(_getsn_buff_1_48 + 2)
0123 8A82       825            mov     dpl,r2
0125 8B83       826            mov     dph,r3
0127 8CF0       827            mov     b,r4
0129 E4         828            clr     a
012A 120100     829            lcall   __gptrput
012D            830   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:167: return len;
012D 851882     831            mov     dpl,_getsn_PARM_2
0130 851983     832            mov     dph,(_getsn_PARM_2 + 1)
0133 22         833            ret
0134            834   ;------------------------------------------------------------
0134            835   ;Allocation info for local variables in function 'InitADC'
0134            836   ;------------------------------------------------------------
0134            837   ;------------------------------------------------------------
0134            838   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:170: void InitADC (void)
0134            839   ;        -----------------------------------------
0134            840   ;         function InitADC
0134            841   ;        -----------------------------------------
0134            842   _InitADC:
0134            843   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:172: SFRPAGE = 0x00;
0134 75A700     844            mov     _SFRPAGE,#0x00
0137            845   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:173: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
0137 75B280     846            mov     _ADC0CN1,#0x80
013A            847   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:174: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
013A 75BCF8     848            mov     _ADC0CF0,#0xF8
013D            849   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:175: ADC0CF1 = 0b_0_0_011110; // Same as default for now
013D 75B91E     850            mov     _ADC0CF1,#0x1E
0140            851   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:176: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
0140 75E800     852            mov     _ADC0CN0,#0x00
0143            853   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:177: ADC0CF2 = 0b_0_01_11111 ; // GND pin, Vref=VDD
0143 75DF3F     854            mov     _ADC0CF2,#0x3F
0146            855   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:178: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
0146 75B300     856            mov     _ADC0CN2,#0x00
0149            857   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:179: ADEN=1; // Enable ADC
0149 D2EF       858            setb    _ADEN
014B 22         859            ret
014C            860   ;------------------------------------------------------------
014C            861   ;Allocation info for local variables in function 'ADC_at_Pin'
014C            862   ;------------------------------------------------------------
014C            863   ;pin                       Allocated to registers 
014C            864   ;------------------------------------------------------------
014C            865   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:182: unsigned int ADC_at_Pin(unsigned char pin)
014C            866   ;        -----------------------------------------
014C            867   ;         function ADC_at_Pin
014C            868   ;        -----------------------------------------
014C            869   _ADC_at_Pin:
014C 8582BB     870            mov     _ADC0MX,dpl
014F            871   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:185: ADBUSY=1;       // Dummy conversion first to select new pin
014F D2EC       872            setb    _ADBUSY
0151            873   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:186: while (ADBUSY); // Wait for dummy conversion to finish
0151            874   L007001?:
0151 20EC18     875            jb      _ADBUSY,L007001?
0154            876   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:187: ADBUSY = 1;     // Convert voltage at the pin
0154 D2EC       877            setb    _ADBUSY
0156            878   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:188: while (ADBUSY); // Wait for conversion to complete
0156            879   L007004?:
0156 20EC58     880            jb      _ADBUSY,L007004?
0159            881   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:189: return (ADC0);
0159 85BD82     882            mov     dpl,_ADC0
015C 85BE83     883            mov     dph,(_ADC0 >> 8)
015F 22         884            ret
0160            885   ;------------------------------------------------------------
0160            886   ;Allocation info for local variables in function 'Volts_at_Pin'
0160            887   ;------------------------------------------------------------
0160            888   ;pin                       Allocated to registers r2 
0160            889   ;------------------------------------------------------------
0160            890   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:192: float Volts_at_Pin(unsigned char pin)
0160            891   ;        -----------------------------------------
0160            892   ;         function Volts_at_Pin
0160            893   ;        -----------------------------------------
0160            894   _Volts_at_Pin:
0160            895   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:194: return ((ADC_at_Pin(pin)*VDD)/16383.0);
0160 120100     896            lcall   _ADC_at_Pin
0163 120100     897            lcall   ___uint2fs
0166 AA82       898            mov     r2,dpl
0168 AB83       899            mov     r3,dph
016A ACF0       900            mov     r4,b
016C FD         901            mov     r5,a
016D C002       902            push    ar2
016F C003       903            push    ar3
0171 C004       904            push    ar4
0173 C005       905            push    ar5
0175 909FBE     906            mov     dptr,#0x9FBE
0178 75F052     907            mov     b,#0x52
017B 7440       908            mov     a,#0x40
017D 120100     909            lcall   ___fsmul
0180 AA82       910            mov     r2,dpl
0182 AB83       911            mov     r3,dph
0184 ACF0       912            mov     r4,b
0186 FD         913            mov     r5,a
0187 E581       914            mov     a,sp
0189 24FC       915            add     a,#0xfc
018B F581       916            mov     sp,a
018D E4         917            clr     a
018E C0E0       918            push    acc
0190 74FC       919            mov     a,#0xFC
0192 C0E0       920            push    acc
0194 747F       921            mov     a,#0x7F
0196 C0E0       922            push    acc
0198 7446       923            mov     a,#0x46
019A C0E0       924            push    acc
019C 8A82       925            mov     dpl,r2
019E 8B83       926            mov     dph,r3
01A0 8CF0       927            mov     b,r4
01A2 ED         928            mov     a,r5
01A3 120100     929            lcall   ___fsdiv
01A6 AA82       930            mov     r2,dpl
01A8 AB83       931            mov     r3,dph
01AA ACF0       932            mov     r4,b
01AC FD         933            mov     r5,a
01AD E581       934            mov     a,sp
01AF 24FC       935            add     a,#0xfc
01B1 F581       936            mov     sp,a
01B3 8A82       937            mov     dpl,r2
01B5 8B83       938            mov     dph,r3
01B7 8CF0       939            mov     b,r4
01B9 ED         940            mov     a,r5
01BA 22         941            ret
01BB            942   ;------------------------------------------------------------
01BB            943   ;Allocation info for local variables in function 'ConfigPCA0'
01BB            944   ;------------------------------------------------------------
01BB            945   ;------------------------------------------------------------
01BB            946   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:197: void ConfigPCA0()
01BB            947   ;        -----------------------------------------
01BB            948   ;         function ConfigPCA0
01BB            949   ;        -----------------------------------------
01BB            950   _ConfigPCA0:
01BB            951   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:199: SFRPAGE = 0x00; //Navigate to SFR page for register write
01BB 75A700     952            mov     _SFRPAGE,#0x00
01BE            953   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:201: PCA0POL = 0b_0000_0000; //Set the output polarity for all channels to default (no inversion)
01BE 759600     954            mov     _PCA0POL,#0x00
01C1            955   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:203: PCA0MD = 0b_0000_0000; //Set PCA mode to operate even in idle mode with SYSCLK/12
01C1 75D900     956            mov     _PCA0MD,#0x00
01C4            957   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:204: PCA0PWM = 0b_0000_0000;        //Enable 8-bit PWM with no overflow flag set and no interrupts enabled
01C4 75F700     958            mov     _PCA0PWM,#0x00
01C7            959   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:205: PCA0CLR = 0b_0000_0000; //Disable comparator clear for all modules
01C7 759C00     960            mov     _PCA0CLR,#0x00
01CA            961   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:206: PCA0CENT = 0b_00_000000; //Set all modules to edge aligned mode (bits 6 and 7 are reserved and must be 00)
01CA 759E00     962            mov     _PCA0CENT,#0x00
01CD            963   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:208: PCA0CN0 = 0b_0100_0000; //Start the PCA counter/timer (CR bit)         
01CD 75D840     964            mov     _PCA0CN0,#0x40
01D0            965   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:211: PCA0CPM0 = 0b_0100_0010;//Configure Channel 0 to function in 8-bit PWM mode
01D0 75DA42     966            mov     _PCA0CPM0,#0x42
01D3            967   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:212: PCA0CPH0 = 205; //Load the PCA0CP0 high byte with an initial value of 128(binary 1000_0000)
01D3 75FCCD     968            mov     _PCA0CPH0,#0xCD
01D6            969   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:215: PCA0CPM1 = 0b_0100_0010; //Configure Channel 1 to function in 8-bit PWM mode
01D6 75DB42     970            mov     _PCA0CPM1,#0x42
01D9            971   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:216: PCA0CPH1 = 128; //Load the PCA0CP1 high byte 
01D9 75EA80     972            mov     _PCA0CPH1,#0x80
01DC 22         973            ret
01DD            974   ;------------------------------------------------------------
01DD            975   ;Allocation info for local variables in function 'takeStep'
01DD            976   ;------------------------------------------------------------
01DD            977   ;instr                     Allocated to registers r2 r3 
01DD            978   ;------------------------------------------------------------
01DD            979   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:220: void takeStep(int instr)
01DD            980   ;        -----------------------------------------
01DD            981   ;         function takeStep
01DD            982   ;        -----------------------------------------
01DD            983   _takeStep:
01DD AA82       984            mov     r2,dpl
01DF AB83       985            mov     r3,dph
01E1            986   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:222: if(instr) //If the instruction is to move forward...
01E1 EA         987            mov     a,r2
01E2 4B         988            orl     a,r3
01E3 6001       989            jz      L010012?
01E5            990   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:224: switch(stepCount)
01E5 E4         991            clr     a
01E6 B598D8     992            cjne    a,_stepCount,L010029?
01E9 E4         993            clr     a
01EA B599D8     994            cjne    a,(_stepCount + 1),L010029?
01ED 8001       995            sjmp    L010001?
01EF            996   L010029?:
01EF 7401       997            mov     a,#0x01
01F1 B59858     998            cjne    a,_stepCount,L010030?
01F4 E4         999            clr     a
01F5 B59958    1000            cjne    a,(_stepCount + 1),L010030?
01F8 8001      1001            sjmp    L010002?
01FA           1002   L010030?:
01FA 7402      1003            mov     a,#0x02
01FC B598D8    1004            cjne    a,_stepCount,L010031?
01FF E4        1005            clr     a
0200 B599D8    1006            cjne    a,(_stepCount + 1),L010031?
0203 8001      1007            sjmp    L010003?
0205           1008   L010031?:
0205 7403      1009            mov     a,#0x03
0207 B59858    1010            cjne    a,_stepCount,L010032?
020A E4        1011            clr     a
020B B59958    1012            cjne    a,(_stepCount + 1),L010032?
020E 8001      1013            sjmp    L010004?
0210           1014   L010032?:
0210 020100    1015            ljmp    L010013?
0213           1016   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:226: case 0: //Step 0
0213           1017   L010001?:
0213           1018   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:227: PORT1 = 1;
0213 D2A1      1019            setb    _P2_1
0215           1020   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:228: PORT2 = 1;
0215 D2A2      1021            setb    _P2_2
0217           1022   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:229: PORT3 = 0;
0217 C2A3      1023            clr     _P2_3
0219           1024   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:230: PORT4 = 0;
0219 C2A4      1025            clr     _P2_4
021B           1026   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:231: break;
021B           1027   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:233: case 1: //Step 1
021B 8001      1028            sjmp    L010013?
021D           1029   L010002?:
021D           1030   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:234: PORT1 = 0;
021D C2A1      1031            clr     _P2_1
021F           1032   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:235: PORT2 = 1;
021F D2A2      1033            setb    _P2_2
0221           1034   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:236: PORT3 = 1;
0221 D2A3      1035            setb    _P2_3
0223           1036   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:237: PORT4 = 0;
0223 C2A4      1037            clr     _P2_4
0225           1038   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:238: break;
0225           1039   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:240: case 2: //Step 2
0225 8001      1040            sjmp    L010013?
0227           1041   L010003?:
0227           1042   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:241: PORT1 = 0;
0227 C2A1      1043            clr     _P2_1
0229           1044   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:242: PORT2 = 0;
0229 C2A2      1045            clr     _P2_2
022B           1046   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:243: PORT3 = 1;
022B D2A3      1047            setb    _P2_3
022D           1048   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:244: PORT4 = 1;
022D D2A4      1049            setb    _P2_4
022F           1050   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:245: break;
022F           1051   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:247: case 3: //Step 3
022F 8001      1052            sjmp    L010013?
0231           1053   L010004?:
0231           1054   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:248: PORT1 = 1;
0231 D2A1      1055            setb    _P2_1
0233           1056   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:249: PORT2 = 0;
0233 C2A2      1057            clr     _P2_2
0235           1058   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:250: PORT3 = 0;
0235 C2A3      1059            clr     _P2_3
0237           1060   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:251: PORT4 = 1;
0237 D2A4      1061            setb    _P2_4
0239           1062   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:253: }
0239 8001      1063            sjmp    L010013?
023B           1064   L010012?:
023B           1065   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:257: switch(stepCount)
023B E4        1066            clr     a
023C B59818    1067            cjne    a,_stepCount,L010033?
023F E4        1068            clr     a
0240 B59918    1069            cjne    a,(_stepCount + 1),L010033?
0243 8001      1070            sjmp    L010006?
0245           1071   L010033?:
0245 7401      1072            mov     a,#0x01
0247 B59898    1073            cjne    a,_stepCount,L010034?
024A E4        1074            clr     a
024B B59998    1075            cjne    a,(_stepCount + 1),L010034?
024E 8001      1076            sjmp    L010007?
0250           1077   L010034?:
0250 7402      1078            mov     a,#0x02
0252 B59818    1079            cjne    a,_stepCount,L010035?
0255 E4        1080            clr     a
0256 B59918    1081            cjne    a,(_stepCount + 1),L010035?
0259 8001      1082            sjmp    L010008?
025B           1083   L010035?:
025B 7403      1084            mov     a,#0x03
025D B59898    1085            cjne    a,_stepCount,L010036?
0260 E4        1086            clr     a
0261 B59998    1087            cjne    a,(_stepCount + 1),L010036?
0264 8001      1088            sjmp    L010009?
0266           1089   L010036?:
0266           1090   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:259: case 0: //Step 0
0266 8001      1091            sjmp    L010013?
0268           1092   L010006?:
0268           1093   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:260: PORT1 = 1;
0268 D2A1      1094            setb    _P2_1
026A           1095   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:261: PORT2 = 0;
026A C2A2      1096            clr     _P2_2
026C           1097   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:262: PORT3 = 0;
026C C2A3      1098            clr     _P2_3
026E           1099   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:263: PORT4 = 1;
026E D2A4      1100            setb    _P2_4
0270           1101   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:264: break;
0270           1102   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:266: case 1: //Step 1
0270 8001      1103            sjmp    L010013?
0272           1104   L010007?:
0272           1105   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:267: PORT1 = 0;
0272 C2A1      1106            clr     _P2_1
0274           1107   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:268: PORT2 = 0;
0274 C2A2      1108            clr     _P2_2
0276           1109   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:269: PORT3 = 1;
0276 D2A3      1110            setb    _P2_3
0278           1111   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:270: PORT4 = 1;
0278 D2A4      1112            setb    _P2_4
027A           1113   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:271: break;
027A           1114   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:273: case 2: //Step 2
027A 8001      1115            sjmp    L010013?
027C           1116   L010008?:
027C           1117   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:274: PORT1 = 0;
027C C2A1      1118            clr     _P2_1
027E           1119   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:275: PORT2 = 1;
027E D2A2      1120            setb    _P2_2
0280           1121   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:276: PORT3 = 1;
0280 D2A3      1122            setb    _P2_3
0282           1123   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:277: PORT4 = 0;
0282 C2A4      1124            clr     _P2_4
0284           1125   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:278: break;
0284           1126   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:280: case 3: //Step 3
0284 8001      1127            sjmp    L010013?
0286           1128   L010009?:
0286           1129   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:281: PORT1 = 1;
0286 D2A1      1130            setb    _P2_1
0288           1131   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:282: PORT2 = 1;
0288 D2A2      1132            setb    _P2_2
028A           1133   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:283: PORT3 = 0;
028A C2A3      1134            clr     _P2_3
028C           1135   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:284: PORT4 = 0;
028C C2A4      1136            clr     _P2_4
028E           1137   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:286: }
028E           1138   L010013?:
028E           1139   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:288: stepCount++;
028E 0598      1140            inc     _stepCount
0290 E4        1141            clr     a
0291 B59818    1142            cjne    a,_stepCount,L010037?
0294 0599      1143            inc     (_stepCount + 1)
0296           1144   L010037?:
0296           1145   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:289: totalSteps++;
0296 0558      1146            inc     _totalSteps
0298 E4        1147            clr     a
0299 B55858    1148            cjne    a,_totalSteps,L010038?
029C 0559      1149            inc     (_totalSteps + 1)
029E           1150   L010038?:
029E           1151   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:290: if(stepCount > 3)
029E C3        1152            clr     c
029F 7403      1153            mov     a,#0x03
02A1 9598      1154            subb    a,_stepCount
02A3 E4        1155            clr     a
02A4 6480      1156            xrl     a,#0x80
02A6 8599F0    1157            mov     b,(_stepCount + 1)
02A9 63F080    1158            xrl     b,#0x80
02AC 95F0      1159            subb    a,b
02AE 5001      1160            jnc     L010016?
02B0           1161   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:291: stepCount = 0;
02B0 E4        1162            clr     a
02B1 F598      1163            mov     _stepCount,a
02B3 F599      1164            mov     (_stepCount + 1),a
02B5           1165   L010016?:
02B5 22        1166            ret
02B6           1167   ;------------------------------------------------------------
02B6           1168   ;Allocation info for local variables in function 'ConfigurePins'
02B6           1169   ;------------------------------------------------------------
02B6           1170   ;------------------------------------------------------------
02B6           1171   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:295: void ConfigurePins()
02B6           1172   ;        -----------------------------------------
02B6           1173   ;         function ConfigurePins
02B6           1174   ;        -----------------------------------------
02B6           1175   _ConfigurePins:
02B6           1176   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:297: P0SKIP |= 0b_1100_1111; //Skip all P0 bits except bits 4 and 5 (UART0)
02B6 43D4CF    1177            orl     _P0SKIP,#0xCF
02B9           1178   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:299: SFRPAGE = 0x20;
02B9 75A720    1179            mov     _SFRPAGE,#0x20
02BC           1180   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:301: P0MDIN &= 0b_1111_1011; //Set P0 bit 2 to analog input for ADC
02BC 53F1FB    1181            anl     _P0MDIN,#0xFB
02BF           1182   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:302: P1MDIN &= 0b_1110_1111; //Set P1 bit 4 to analog input for ADC
02BF 53F2EF    1183            anl     _P1MDIN,#0xEF
02C2           1184   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:304: SFRPAGE = 0x00;
02C2 75A700    1185            mov     _SFRPAGE,#0x00
02C5           1186   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:306: P1SKIP |= 0b_0111_1111; //Skip all P1 bits except bit 7
02C5 43D57F    1187            orl     _P1SKIP,#0x7F
02C8           1188   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:308: P2MDOUT |= 0b_0111_1111; //Set P2 bits 0, 1, 2, 3, 4, 5 to push-pull output mode
02C8 43A67F    1189            orl     _P2MDOUT,#0x7F
02CB           1190   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:309: P1MDOUT |= 0b_1000_0000; //Set P1 bit 7 to push-pull output mode       
02CB 43A580    1191            orl     _P1MDOUT,#0x80
02CE 22        1192            ret
02CF           1193   ;------------------------------------------------------------
02CF           1194   ;Allocation info for local variables in function 'main'
02CF           1195   ;------------------------------------------------------------
02CF           1196   ;vReadings                 Allocated with name '_main_vReadings_1_68'
02CF           1197   ;voltages                  Allocated with name '_main_voltages_1_68'
02CF           1198   ;measureCount              Allocated with name '_main_measureCount_1_68'
02CF           1199   ;direction                 Allocated to registers 
02CF           1200   ;stepsInterruptCounter     Allocated with name '_main_stepsInterruptCounter_1_68'
02CF           1201   ;stepsTotalInterrupts      Allocated to registers 
02CF           1202   ;readingADCCounter         Allocated to registers r6 r7 
02CF           1203   ;readingADCTotalInterrupts Allocated to registers 
02CF           1204   ;totalMeasurements         Allocated to registers 
02CF           1205   ;errorConstant             Allocated to registers 
02CF           1206   ;sloc0                     Allocated with name '_main_sloc0_1_0'
02CF           1207   ;------------------------------------------------------------
02CF           1208   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:312: void main (void) 
02CF           1209   ;        -----------------------------------------
02CF           1210   ;         function main
02CF           1211   ;        -----------------------------------------
02CF           1212   _main:
02CF           1213   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:320: int measureCount = 0;
02CF           1214   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:326: int stepsInterruptCounter = 0;
02CF           1215   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:330: int readingADCCounter = 0;
02CF E4        1216            clr a
02D0 F578      1217            mov _main_measureCount_1_68,a
02D2 F579      1218            mov (_main_measureCount_1_68 + 1),a
02D4 F5D8      1219            mov _main_stepsInterruptCounter_1_68,a
02D6 F5D9      1220            mov (_main_stepsInterruptCounter_1_68 + 1),a
02D8 FE        1221            mov r6,a
02D9 FF        1222            mov r7,a
02DA           1223   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:337: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
02DA C006      1224            push    ar6
02DC C007      1225            push    ar7
02DE 74D8      1226            mov     a,#__str_0
02E0 C0E0      1227            push    acc
02E2 74C4      1228            mov     a,#(__str_0 >> 8)
02E4 C0E0      1229            push    acc
02E6 7480      1230            mov     a,#0x80
02E8 C0E0      1231            push    acc
02EA 120100    1232            lcall   _printf
02ED 1581      1233            dec     sp
02EF 1581      1234            dec     sp
02F1 1581      1235            dec     sp
02F3           1236   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:339: ConfigurePins();
02F3 120100    1237            lcall   _ConfigurePins
02F6           1238   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:341: ConfigPCA0();
02F6 120100    1239            lcall   _ConfigPCA0
02F9           1240   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:343: InitADC();
02F9 120100    1241            lcall   _InitADC
02FC D007      1242            pop     ar7
02FE D006      1243            pop     ar6
0300           1244   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:347: while(1) //Main loop of the program begins here
0300           1245   L012013?:
0300           1246   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:352: if(stepFlag == 1)
0300 7401      1247            mov     a,#0x01
0302 B5D858    1248            cjne    a,_stepFlag,L012013?
0305           1249   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:355: stepFlag = 0;
0305 75D800    1250            mov     _stepFlag,#0x00
0308           1251   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:358: if(stepsInterruptCounter < stepsTotalInterrupts)
0308 C3        1252            clr     c
0309 E5D8      1253            mov     a,_main_stepsInterruptCounter_1_68
030B 9402      1254            subb    a,#0x02
030D E5D9      1255            mov     a,(_main_stepsInterruptCounter_1_68 + 1)
030F 6480      1256            xrl     a,#0x80
0311 9480      1257            subb    a,#0x80
0313 5001      1258            jnc     L012002?
0315           1259   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:359: stepsInterruptCounter++;
0315 05D8      1260            inc     _main_stepsInterruptCounter_1_68
0317 E4        1261            clr     a
0318 B5D8D8    1262            cjne    a,_main_stepsInterruptCounter_1_68,L012003?
031B 05D9      1263            inc     (_main_stepsInterruptCounter_1_68 + 1)
031D 8001      1264            sjmp    L012003?
031F           1265   L012002?:
031F           1266   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:362: takeStep(direction);
031F 900001    1267            mov     dptr,#0x0001
0322 C006      1268            push    ar6
0324 C007      1269            push    ar7
0326 120100    1270            lcall   _takeStep
0329 D007      1271            pop     ar7
032B D006      1272            pop     ar6
032D           1273   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:365: stepsInterruptCounter = 0;
032D E4        1274            clr     a
032E F5D8      1275            mov     _main_stepsInterruptCounter_1_68,a
0330 F5D9      1276            mov     (_main_stepsInterruptCounter_1_68 + 1),a
0332           1277   L012003?:
0332           1278   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:370: if(readingADCCounter < readingADCTotalInterrupts)
0332 C3        1279            clr     c
0333 EE        1280            mov     a,r6
0334 94F4      1281            subb    a,#0xF4
0336 EF        1282            mov     a,r7
0337 6480      1283            xrl     a,#0x80
0339 9481      1284            subb    a,#0x81
033B 5001      1285            jnc     L012008?
033D           1286   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:371: readingADCCounter++;
033D 0E        1287            inc     r6
033E BE0058    1288            cjne    r6,#0x00,L012013?
0341 0F        1289            inc     r7
0342 8001      1290            sjmp    L012013?
0344           1291   L012008?:
0344           1292   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:375: if(measureCount < totalMeasurements)
0344 C3        1293            clr     c
0345 E578      1294            mov     a,_main_measureCount_1_68
0347 9417      1295            subb    a,#0x17
0349 E579      1296            mov     a,(_main_measureCount_1_68 + 1)
034B 6480      1297            xrl     a,#0x80
034D 9480      1298            subb    a,#0x80
034F 4001      1299            jc      L012028?
0351 020100    1300            ljmp    L012005?
0354           1301   L012028?:
0354           1302   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:378: voltages[0] += Volts_at_Pin(QFP32_MUX_P1_4);
0354 852818    1303            mov     _main_sloc0_1_0,_main_voltages_1_68
0357 852919    1304            mov     (_main_sloc0_1_0 + 1),(_main_voltages_1_68 + 1)
035A 852A1A    1305            mov     (_main_sloc0_1_0 + 2),(_main_voltages_1_68 + 2)
035D 852B1B    1306            mov     (_main_sloc0_1_0 + 3),(_main_voltages_1_68 + 3)
0360 75820A    1307            mov     dpl,#0x0A
0363 120100    1308            lcall   _Volts_at_Pin
0366 AA82      1309            mov     r2,dpl
0368 AB83      1310            mov     r3,dph
036A ACF0      1311            mov     r4,b
036C FD        1312            mov     r5,a
036D C002      1313            push    ar2
036F C003      1314            push    ar3
0371 C004      1315            push    ar4
0373 C005      1316            push    ar5
0375 851882    1317            mov     dpl,_main_sloc0_1_0
0378 851983    1318            mov     dph,(_main_sloc0_1_0 + 1)
037B 851AF0    1319            mov     b,(_main_sloc0_1_0 + 2)
037E E51B      1320            mov     a,(_main_sloc0_1_0 + 3)
0380 120100    1321            lcall   ___fsadd
0383 AA82      1322            mov     r2,dpl
0385 AB83      1323            mov     r3,dph
0387 ACF0      1324            mov     r4,b
0389 FD        1325            mov     r5,a
038A E581      1326            mov     a,sp
038C 24FC      1327            add     a,#0xfc
038E F581      1328            mov     sp,a
0390 8A28      1329            mov     _main_voltages_1_68,r2
0392 8B29      1330            mov     (_main_voltages_1_68 + 1),r3
0394 8C2A      1331            mov     (_main_voltages_1_68 + 2),r4
0396 8D2B      1332            mov     (_main_voltages_1_68 + 3),r5
0398           1333   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:379: voltages[1] += Volts_at_Pin(QFP32_MUX_P0_2);
0398 852C18    1334            mov     _main_sloc0_1_0,(_main_voltages_1_68 + 0x0004)
039B 852D19    1335            mov     (_main_sloc0_1_0 + 1),((_main_voltages_1_68 + 0x0004) + 1)
039E 852E1A    1336            mov     (_main_sloc0_1_0 + 2),((_main_voltages_1_68 + 0x0004) + 2)
03A1 852F1B    1337            mov     (_main_sloc0_1_0 + 3),((_main_voltages_1_68 + 0x0004) + 3)
03A4 758201    1338            mov     dpl,#0x01
03A7 120100    1339            lcall   _Volts_at_Pin
03AA AA82      1340            mov     r2,dpl
03AC AB83      1341            mov     r3,dph
03AE ACF0      1342            mov     r4,b
03B0 FD        1343            mov     r5,a
03B1 C002      1344            push    ar2
03B3 C003      1345            push    ar3
03B5 C004      1346            push    ar4
03B7 C005      1347            push    ar5
03B9 851882    1348            mov     dpl,_main_sloc0_1_0
03BC 851983    1349            mov     dph,(_main_sloc0_1_0 + 1)
03BF 851AF0    1350            mov     b,(_main_sloc0_1_0 + 2)
03C2 E51B      1351            mov     a,(_main_sloc0_1_0 + 3)
03C4 120100    1352            lcall   ___fsadd
03C7 AA82      1353            mov     r2,dpl
03C9 AB83      1354            mov     r3,dph
03CB ACF0      1355            mov     r4,b
03CD FD        1356            mov     r5,a
03CE E581      1357            mov     a,sp
03D0 24FC      1358            add     a,#0xfc
03D2 F581      1359            mov     sp,a
03D4 8A2C      1360            mov     (_main_voltages_1_68 + 0x0004),r2
03D6 8B2D      1361            mov     ((_main_voltages_1_68 + 0x0004) + 1),r3
03D8 8C2E      1362            mov     ((_main_voltages_1_68 + 0x0004) + 2),r4
03DA 8D2F      1363            mov     ((_main_voltages_1_68 + 0x0004) + 3),r5
03DC           1364   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:382: measureCount++;
03DC 0578      1365            inc     _main_measureCount_1_68
03DE E4        1366            clr     a
03DF B57818    1367            cjne    a,_main_measureCount_1_68,L012029?
03E2 0579      1368            inc     (_main_measureCount_1_68 + 1)
03E4           1369   L012029?:
03E4 020100    1370            ljmp    L012006?
03E7           1371   L012005?:
03E7           1372   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:387: vReadings[0] = (voltages[0]/totalMeasurements) - errorConstant;
03E7 E4        1373            clr     a
03E8 C0E0      1374            push    acc
03EA C0E0      1375            push    acc
03EC 74B8      1376            mov     a,#0xB8
03EE C0E0      1377            push    acc
03F0 7441      1378            mov     a,#0x41
03F2 C0E0      1379            push    acc
03F4 852882    1380            mov     dpl,_main_voltages_1_68
03F7 852983    1381            mov     dph,(_main_voltages_1_68 + 1)
03FA 852AF0    1382            mov     b,(_main_voltages_1_68 + 2)
03FD E52B      1383            mov     a,(_main_voltages_1_68 + 3)
03FF 120100    1384            lcall   ___fsdiv
0402 AA82      1385            mov     r2,dpl
0404 AB83      1386            mov     r3,dph
0406 ACF0      1387            mov     r4,b
0408 FD        1388            mov     r5,a
0409 E581      1389            mov     a,sp
040B 24FC      1390            add     a,#0xfc
040D F581      1391            mov     sp,a
040F 74B8      1392            mov     a,#0xB8
0411 C0E0      1393            push    acc
0413 741E      1394            mov     a,#0x1E
0415 C0E0      1395            push    acc
0417 7405      1396            mov     a,#0x05
0419 C0E0      1397            push    acc
041B 743E      1398            mov     a,#0x3E
041D C0E0      1399            push    acc
041F 8A82      1400            mov     dpl,r2
0421 8B83      1401            mov     dph,r3
0423 8CF0      1402            mov     b,r4
0425 ED        1403            mov     a,r5
0426 120100    1404            lcall   ___fssub
0429 858218    1405            mov     _main_sloc0_1_0,dpl
042C 858319    1406            mov     (_main_sloc0_1_0 + 1),dph
042F 85F01A    1407            mov     (_main_sloc0_1_0 + 2),b
0432 F51B      1408            mov     (_main_sloc0_1_0 + 3),a
0434 E581      1409            mov     a,sp
0436 24FC      1410            add     a,#0xfc
0438 F581      1411            mov     sp,a
043A 8518D8    1412            mov     _main_vReadings_1_68,_main_sloc0_1_0
043D 8519D9    1413            mov     (_main_vReadings_1_68 + 1),(_main_sloc0_1_0 + 1)
0440 851ADA    1414            mov     (_main_vReadings_1_68 + 2),(_main_sloc0_1_0 + 2)
0443 851BDB    1415            mov     (_main_vReadings_1_68 + 3),(_main_sloc0_1_0 + 3)
0446           1416   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:388: vReadings[1] = (voltages[1]/totalMeasurements) - errorConstant;
0446 E4        1417            clr     a
0447 C0E0      1418            push    acc
0449 C0E0      1419            push    acc
044B 74B8      1420            mov     a,#0xB8
044D C0E0      1421            push    acc
044F 7441      1422            mov     a,#0x41
0451 C0E0      1423            push    acc
0453 852C82    1424            mov     dpl,(_main_voltages_1_68 + 0x0004)
0456 852D83    1425            mov     dph,((_main_voltages_1_68 + 0x0004) + 1)
0459 852EF0    1426            mov     b,((_main_voltages_1_68 + 0x0004) + 2)
045C E52F      1427            mov     a,((_main_voltages_1_68 + 0x0004) + 3)
045E 120100    1428            lcall   ___fsdiv
0461 AA82      1429            mov     r2,dpl
0463 AB83      1430            mov     r3,dph
0465 ACF0      1431            mov     r4,b
0467 FD        1432            mov     r5,a
0468 E581      1433            mov     a,sp
046A 24FC      1434            add     a,#0xfc
046C F581      1435            mov     sp,a
046E 74B8      1436            mov     a,#0xB8
0470 C0E0      1437            push    acc
0472 741E      1438            mov     a,#0x1E
0474 C0E0      1439            push    acc
0476 7405      1440            mov     a,#0x05
0478 C0E0      1441            push    acc
047A 743E      1442            mov     a,#0x3E
047C C0E0      1443            push    acc
047E 8A82      1444            mov     dpl,r2
0480 8B83      1445            mov     dph,r3
0482 8CF0      1446            mov     b,r4
0484 ED        1447            mov     a,r5
0485 120100    1448            lcall   ___fssub
0488 AA82      1449            mov     r2,dpl
048A AB83      1450            mov     r3,dph
048C ACF0      1451            mov     r4,b
048E FD        1452            mov     r5,a
048F E581      1453            mov     a,sp
0491 24FC      1454            add     a,#0xfc
0493 F581      1455            mov     sp,a
0495 8ADC      1456            mov     (_main_vReadings_1_68 + 0x0004),r2
0497 8BDD      1457            mov     ((_main_vReadings_1_68 + 0x0004) + 1),r3
0499 8CDE      1458            mov     ((_main_vReadings_1_68 + 0x0004) + 2),r4
049B 8DDF      1459            mov     ((_main_vReadings_1_68 + 0x0004) + 3),r5
049D           1460   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:391: printf("V(P1.4)=%4.2fV, V(P0.2)=%4.2fV\r", vReadings[0], vReadings[1]);
049D C002      1461            push    ar2
049F C003      1462            push    ar3
04A1 C004      1463            push    ar4
04A3 C005      1464            push    ar5
04A5 C018      1465            push    _main_sloc0_1_0
04A7 C019      1466            push    (_main_sloc0_1_0 + 1)
04A9 C01A      1467            push    (_main_sloc0_1_0 + 2)
04AB C01B      1468            push    (_main_sloc0_1_0 + 3)
04AD 74D8      1469            mov     a,#__str_1
04AF C0E0      1470            push    acc
04B1 74C7      1471            mov     a,#(__str_1 >> 8)
04B3 C0E0      1472            push    acc
04B5 7480      1473            mov     a,#0x80
04B7 C0E0      1474            push    acc
04B9 120100    1475            lcall   _printf
04BC E581      1476            mov     a,sp
04BE 24F5      1477            add     a,#0xf5
04C0 F581      1478            mov     sp,a
04C2           1479   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:394: measureCount = 0;
04C2           1480   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:395: voltages[0] = 0;
04C2 E4        1481            clr a
04C3 F578      1482            mov _main_measureCount_1_68,a
04C5 F579      1483            mov (_main_measureCount_1_68 + 1),a
04C7 F528      1484            mov _main_voltages_1_68,a
04C9 F529      1485            mov (_main_voltages_1_68 + 1),a
04CB F52A      1486            mov (_main_voltages_1_68 + 2),a
04CD F52B      1487            mov (_main_voltages_1_68 + 3),a
04CF           1488   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:396: voltages[1] = 0;
04CF 752C00    1489            mov     (_main_voltages_1_68 + 0x0004),#0x00
04D2 752D00    1490            mov     ((_main_voltages_1_68 + 0x0004) + 1),#0x00
04D5 752E00    1491            mov     ((_main_voltages_1_68 + 0x0004) + 2),#0x00
04D8 752F00    1492            mov     ((_main_voltages_1_68 + 0x0004) + 3),#0x00
04DB           1493   L012006?:
04DB           1494   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:400: readingADCCounter = 0;
04DB 7E00      1495            mov     r6,#0x00
04DD 7F00      1496            mov     r7,#0x00
04DF 020100    1497            ljmp    L012013?
04E2           1498            rseg R_CSEG
04E2           1499   
0000           1500            rseg R_XINIT
0000           1501   
0000           1502            rseg R_CONST
0000           1503   __str_0:
0000 1B        1504            db 0x1B
0001 5B324A    1505            db '[2J'
0004 00        1506            db 0x00
0005           1507   __str_1:
0005 56285031  1508            db 'V(P1.4)=%4.2fV, V(P0.2)=%4.2fV'
     2E34293D
     25342E32
     66562C20
     56285030
     2E32293D
     25342E32
     6656
0023 0D        1509            db 0x0D
0024 00        1510            db 0x00
0025           1511   
0076           1512            CSEG
0076           1513   
0076           1514   end
