0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Sun Mar 03 18:21:23 2019
0000              5   ;--------------------------------------------------------
                  5   $name PCA
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _readADC
0000             29            public _ConfigurePins
0000             30            public _takeStep
0000             31            public _ConfigPCA0
0000             32            public _Volts_at_Pin
0000             33            public _ADC_at_Pin
0000             34            public _InitADC
0000             35            public _getsn
0000             36            public _waitms
0000             37            public _Timer2_ISR
0000             38            public _Timer3us
0000             39            public __c51_external_startup
0000             40            public _readADC_PARM_3
0000             41            public _readADC_PARM_2
0000             42            public _getsn_PARM_2
0000             43            public _totalSteps
0000             44            public _stepCount
0000             45            public _stepFlag
0000             46   ;--------------------------------------------------------
0000             47   ; Special Function Registers
0000             48   ;--------------------------------------------------------
0000             49   _ACC            DATA 0xe0
0000             50   _ADC0ASAH       DATA 0xb6
0000             51   _ADC0ASAL       DATA 0xb5
0000             52   _ADC0ASCF       DATA 0xa1
0000             53   _ADC0ASCT       DATA 0xc7
0000             54   _ADC0CF0        DATA 0xbc
0000             55   _ADC0CF1        DATA 0xb9
0000             56   _ADC0CF2        DATA 0xdf
0000             57   _ADC0CN0        DATA 0xe8
0000             58   _ADC0CN1        DATA 0xb2
0000             59   _ADC0CN2        DATA 0xb3
0000             60   _ADC0GTH        DATA 0xc4
0000             61   _ADC0GTL        DATA 0xc3
0000             62   _ADC0H          DATA 0xbe
0000             63   _ADC0L          DATA 0xbd
0000             64   _ADC0LTH        DATA 0xc6
0000             65   _ADC0LTL        DATA 0xc5
0000             66   _ADC0MX         DATA 0xbb
0000             67   _B              DATA 0xf0
0000             68   _CKCON0         DATA 0x8e
0000             69   _CKCON1         DATA 0xa6
0000             70   _CLEN0          DATA 0xc6
0000             71   _CLIE0          DATA 0xc7
0000             72   _CLIF0          DATA 0xe8
0000             73   _CLKSEL         DATA 0xa9
0000             74   _CLOUT0         DATA 0xd1
0000             75   _CLU0CF         DATA 0xb1
0000             76   _CLU0FN         DATA 0xaf
0000             77   _CLU0MX         DATA 0x84
0000             78   _CLU1CF         DATA 0xb3
0000             79   _CLU1FN         DATA 0xb2
0000             80   _CLU1MX         DATA 0x85
0000             81   _CLU2CF         DATA 0xb6
0000             82   _CLU2FN         DATA 0xb5
0000             83   _CLU2MX         DATA 0x91
0000             84   _CLU3CF         DATA 0xbf
0000             85   _CLU3FN         DATA 0xbe
0000             86   _CLU3MX         DATA 0xae
0000             87   _CMP0CN0        DATA 0x9b
0000             88   _CMP0CN1        DATA 0x99
0000             89   _CMP0MD         DATA 0x9d
0000             90   _CMP0MX         DATA 0x9f
0000             91   _CMP1CN0        DATA 0xbf
0000             92   _CMP1CN1        DATA 0xac
0000             93   _CMP1MD         DATA 0xab
0000             94   _CMP1MX         DATA 0xaa
0000             95   _CRC0CN0        DATA 0xce
0000             96   _CRC0CN1        DATA 0x86
0000             97   _CRC0CNT        DATA 0xd3
0000             98   _CRC0DAT        DATA 0xcb
0000             99   _CRC0FLIP       DATA 0xcf
0000            100   _CRC0IN         DATA 0xca
0000            101   _CRC0ST         DATA 0xd2
0000            102   _DAC0CF0        DATA 0x91
0000            103   _DAC0CF1        DATA 0x92
0000            104   _DAC0H          DATA 0x85
0000            105   _DAC0L          DATA 0x84
0000            106   _DAC1CF0        DATA 0x93
0000            107   _DAC1CF1        DATA 0x94
0000            108   _DAC1H          DATA 0x8a
0000            109   _DAC1L          DATA 0x89
0000            110   _DAC2CF0        DATA 0x95
0000            111   _DAC2CF1        DATA 0x96
0000            112   _DAC2H          DATA 0x8c
0000            113   _DAC2L          DATA 0x8b
0000            114   _DAC3CF0        DATA 0x9a
0000            115   _DAC3CF1        DATA 0x9c
0000            116   _DAC3H          DATA 0x8e
0000            117   _DAC3L          DATA 0x8d
0000            118   _DACGCF0        DATA 0x88
0000            119   _DACGCF1        DATA 0x98
0000            120   _DACGCF2        DATA 0xa2
0000            121   _DERIVID        DATA 0xad
0000            122   _DEVICEID       DATA 0xb5
0000            123   _DPH            DATA 0x83
0000            124   _DPL            DATA 0x82
0000            125   _EIE1           DATA 0xe6
0000            126   _EIE2           DATA 0xf3
0000            127   _EIP1           DATA 0xbb
0000            128   _EIP1H          DATA 0xee
0000            129   _EIP2           DATA 0xed
0000            130   _EIP2H          DATA 0xf6
0000            131   _EMI0CN         DATA 0xe7
0000            132   _FLKEY          DATA 0xb7
0000            133   _HFO0CAL        DATA 0xc7
0000            134   _HFO1CAL        DATA 0xd6
0000            135   _HFOCN          DATA 0xef
0000            136   _I2C0ADM        DATA 0xff
0000            137   _I2C0CN0        DATA 0xba
0000            138   _I2C0DIN        DATA 0xbc
0000            139   _I2C0DOUT       DATA 0xbb
0000            140   _I2C0FCN0       DATA 0xad
0000            141   _I2C0FCN1       DATA 0xab
0000            142   _I2C0FCT        DATA 0xf5
0000            143   _I2C0SLAD       DATA 0xbd
0000            144   _I2C0STAT       DATA 0xb9
0000            145   _IE             DATA 0xa8
0000            146   _IP             DATA 0xb8
0000            147   _IPH            DATA 0xf2
0000            148   _IT01CF         DATA 0xe4
0000            149   _LFO0CN         DATA 0xb1
0000            150   _P0             DATA 0x80
0000            151   _P0MASK         DATA 0xfe
0000            152   _P0MAT          DATA 0xfd
0000            153   _P0MDIN         DATA 0xf1
0000            154   _P0MDOUT        DATA 0xa4
0000            155   _P0SKIP         DATA 0xd4
0000            156   _P1             DATA 0x90
0000            157   _P1MASK         DATA 0xee
0000            158   _P1MAT          DATA 0xed
0000            159   _P1MDIN         DATA 0xf2
0000            160   _P1MDOUT        DATA 0xa5
0000            161   _P1SKIP         DATA 0xd5
0000            162   _P2             DATA 0xa0
0000            163   _P2MASK         DATA 0xfc
0000            164   _P2MAT          DATA 0xfb
0000            165   _P2MDIN         DATA 0xf3
0000            166   _P2MDOUT        DATA 0xa6
0000            167   _P2SKIP         DATA 0xcc
0000            168   _P3             DATA 0xb0
0000            169   _P3MDIN         DATA 0xf4
0000            170   _P3MDOUT        DATA 0x9c
0000            171   _PCA0CENT       DATA 0x9e
0000            172   _PCA0CLR        DATA 0x9c
0000            173   _PCA0CN0        DATA 0xd8
0000            174   _PCA0CPH0       DATA 0xfc
0000            175   _PCA0CPH1       DATA 0xea
0000            176   _PCA0CPH2       DATA 0xec
0000            177   _PCA0CPH3       DATA 0xf5
0000            178   _PCA0CPH4       DATA 0x85
0000            179   _PCA0CPH5       DATA 0xde
0000            180   _PCA0CPL0       DATA 0xfb
0000            181   _PCA0CPL1       DATA 0xe9
0000            182   _PCA0CPL2       DATA 0xeb
0000            183   _PCA0CPL3       DATA 0xf4
0000            184   _PCA0CPL4       DATA 0x84
0000            185   _PCA0CPL5       DATA 0xdd
0000            186   _PCA0CPM0       DATA 0xda
0000            187   _PCA0CPM1       DATA 0xdb
0000            188   _PCA0CPM2       DATA 0xdc
0000            189   _PCA0CPM3       DATA 0xae
0000            190   _PCA0CPM4       DATA 0xaf
0000            191   _PCA0CPM5       DATA 0xcc
0000            192   _PCA0H          DATA 0xfa
0000            193   _PCA0L          DATA 0xf9
0000            194   _PCA0MD         DATA 0xd9
0000            195   _PCA0POL        DATA 0x96
0000            196   _PCA0PWM        DATA 0xf7
0000            197   _PCON0          DATA 0x87
0000            198   _PCON1          DATA 0xcd
0000            199   _PFE0CN         DATA 0xc1
0000            200   _PRTDRV         DATA 0xf6
0000            201   _PSCTL          DATA 0x8f
0000            202   _PSTAT0         DATA 0xaa
0000            203   _PSW            DATA 0xd0
0000            204   _REF0CN         DATA 0xd1
0000            205   _REG0CN         DATA 0xc9
0000            206   _REVID          DATA 0xb6
0000            207   _RSTSRC         DATA 0xef
0000            208   _SBCON1         DATA 0x94
0000            209   _SBRLH1         DATA 0x96
0000            210   _SBRLL1         DATA 0x95
0000            211   _SBUF           DATA 0x99
0000            212   _SBUF0          DATA 0x99
0000            213   _SBUF1          DATA 0x92
0000            214   _SCON           DATA 0x98
0000            215   _SCON0          DATA 0x98
0000            216   _SCON1          DATA 0xc8
0000            217   _SFRPAGE        DATA 0xa7
0000            218   _SFRPGCN        DATA 0xbc
0000            219   _SFRSTACK       DATA 0xd7
0000            220   _SMB0ADM        DATA 0xd6
0000            221   _SMB0ADR        DATA 0xd7
0000            222   _SMB0CF         DATA 0xc1
0000            223   _SMB0CN0        DATA 0xc0
0000            224   _SMB0DAT        DATA 0xc2
0000            225   _SMB0FCN0       DATA 0xc3
0000            226   _SMB0FCN1       DATA 0xc4
0000            227   _SMB0FCT        DATA 0xef
0000            228   _SMB0RXLN       DATA 0xc5
0000            229   _SMB0TC         DATA 0xac
0000            230   _SMOD1          DATA 0x93
0000            231   _SP             DATA 0x81
0000            232   _SPI0CFG        DATA 0xa1
0000            233   _SPI0CKR        DATA 0xa2
0000            234   _SPI0CN0        DATA 0xf8
0000            235   _SPI0DAT        DATA 0xa3
0000            236   _SPI0FCN0       DATA 0x9a
0000            237   _SPI0FCN1       DATA 0x9b
0000            238   _SPI0FCT        DATA 0xf7
0000            239   _SPI0PCF        DATA 0xdf
0000            240   _TCON           DATA 0x88
0000            241   _TH0            DATA 0x8c
0000            242   _TH1            DATA 0x8d
0000            243   _TL0            DATA 0x8a
0000            244   _TL1            DATA 0x8b
0000            245   _TMOD           DATA 0x89
0000            246   _TMR2CN0        DATA 0xc8
0000            247   _TMR2CN1        DATA 0xfd
0000            248   _TMR2H          DATA 0xcf
0000            249   _TMR2L          DATA 0xce
0000            250   _TMR2RLH        DATA 0xcb
0000            251   _TMR2RLL        DATA 0xca
0000            252   _TMR3CN0        DATA 0x91
0000            253   _TMR3CN1        DATA 0xfe
0000            254   _TMR3H          DATA 0x95
0000            255   _TMR3L          DATA 0x94
0000            256   _TMR3RLH        DATA 0x93
0000            257   _TMR3RLL        DATA 0x92
0000            258   _TMR4CN0        DATA 0x98
0000            259   _TMR4CN1        DATA 0xff
0000            260   _TMR4H          DATA 0xa5
0000            261   _TMR4L          DATA 0xa4
0000            262   _TMR4RLH        DATA 0xa3
0000            263   _TMR4RLL        DATA 0xa2
0000            264   _TMR5CN0        DATA 0xc0
0000            265   _TMR5CN1        DATA 0xf1
0000            266   _TMR5H          DATA 0xd5
0000            267   _TMR5L          DATA 0xd4
0000            268   _TMR5RLH        DATA 0xd3
0000            269   _TMR5RLL        DATA 0xd2
0000            270   _UART0PCF       DATA 0xd9
0000            271   _UART1FCN0      DATA 0x9d
0000            272   _UART1FCN1      DATA 0xd8
0000            273   _UART1FCT       DATA 0xfa
0000            274   _UART1LIN       DATA 0x9e
0000            275   _UART1PCF       DATA 0xda
0000            276   _VDM0CN         DATA 0xff
0000            277   _WDTCN          DATA 0x97
0000            278   _XBR0           DATA 0xe1
0000            279   _XBR1           DATA 0xe2
0000            280   _XBR2           DATA 0xe3
0000            281   _XOSC0CN        DATA 0x86
0000            282   _DPTR           DATA 0x8382
0000            283   _TMR2RL         DATA 0xcbca
0000            284   _TMR3RL         DATA 0x9392
0000            285   _TMR4RL         DATA 0xa3a2
0000            286   _TMR5RL         DATA 0xd3d2
0000            287   _TMR0           DATA 0x8c8a
0000            288   _TMR1           DATA 0x8d8b
0000            289   _TMR2           DATA 0xcfce
0000            290   _TMR3           DATA 0x9594
0000            291   _TMR4           DATA 0xa5a4
0000            292   _TMR5           DATA 0xd5d4
0000            293   _SBRL1          DATA 0x9695
0000            294   _PCA0           DATA 0xfaf9
0000            295   _PCA0CP0        DATA 0xfcfb
0000            296   _PCA0CP1        DATA 0xeae9
0000            297   _PCA0CP2        DATA 0xeceb
0000            298   _PCA0CP3        DATA 0xf5f4
0000            299   _PCA0CP4        DATA 0x8584
0000            300   _PCA0CP5        DATA 0xdedd
0000            301   _ADC0ASA        DATA 0xb6b5
0000            302   _ADC0GT         DATA 0xc4c3
0000            303   _ADC0           DATA 0xbebd
0000            304   _ADC0LT         DATA 0xc6c5
0000            305   _DAC0           DATA 0x8584
0000            306   _DAC1           DATA 0x8a89
0000            307   _DAC2           DATA 0x8c8b
0000            308   _DAC3           DATA 0x8e8d
0000            309   ;--------------------------------------------------------
0000            310   ; special function bits
0000            311   ;--------------------------------------------------------
0000            312   _ACC_0          BIT 0xe0
0000            313   _ACC_1          BIT 0xe1
0000            314   _ACC_2          BIT 0xe2
0000            315   _ACC_3          BIT 0xe3
0000            316   _ACC_4          BIT 0xe4
0000            317   _ACC_5          BIT 0xe5
0000            318   _ACC_6          BIT 0xe6
0000            319   _ACC_7          BIT 0xe7
0000            320   _TEMPE          BIT 0xe8
0000            321   _ADGN0          BIT 0xe9
0000            322   _ADGN1          BIT 0xea
0000            323   _ADWINT         BIT 0xeb
0000            324   _ADBUSY         BIT 0xec
0000            325   _ADINT          BIT 0xed
0000            326   _IPOEN          BIT 0xee
0000            327   _ADEN           BIT 0xef
0000            328   _B_0            BIT 0xf0
0000            329   _B_1            BIT 0xf1
0000            330   _B_2            BIT 0xf2
0000            331   _B_3            BIT 0xf3
0000            332   _B_4            BIT 0xf4
0000            333   _B_5            BIT 0xf5
0000            334   _B_6            BIT 0xf6
0000            335   _B_7            BIT 0xf7
0000            336   _C0FIF          BIT 0xe8
0000            337   _C0RIF          BIT 0xe9
0000            338   _C1FIF          BIT 0xea
0000            339   _C1RIF          BIT 0xeb
0000            340   _C2FIF          BIT 0xec
0000            341   _C2RIF          BIT 0xed
0000            342   _C3FIF          BIT 0xee
0000            343   _C3RIF          BIT 0xef
0000            344   _D1SRC0         BIT 0x88
0000            345   _D1SRC1         BIT 0x89
0000            346   _D1AMEN         BIT 0x8a
0000            347   _D01REFSL       BIT 0x8b
0000            348   _D3SRC0         BIT 0x8c
0000            349   _D3SRC1         BIT 0x8d
0000            350   _D3AMEN         BIT 0x8e
0000            351   _D23REFSL       BIT 0x8f
0000            352   _D0UDIS         BIT 0x98
0000            353   _D1UDIS         BIT 0x99
0000            354   _D2UDIS         BIT 0x9a
0000            355   _D3UDIS         BIT 0x9b
0000            356   _EX0            BIT 0xa8
0000            357   _ET0            BIT 0xa9
0000            358   _EX1            BIT 0xaa
0000            359   _ET1            BIT 0xab
0000            360   _ES0            BIT 0xac
0000            361   _ET2            BIT 0xad
0000            362   _ESPI0          BIT 0xae
0000            363   _EA             BIT 0xaf
0000            364   _PX0            BIT 0xb8
0000            365   _PT0            BIT 0xb9
0000            366   _PX1            BIT 0xba
0000            367   _PT1            BIT 0xbb
0000            368   _PS0            BIT 0xbc
0000            369   _PT2            BIT 0xbd
0000            370   _PSPI0          BIT 0xbe
0000            371   _P0_0           BIT 0x80
0000            372   _P0_1           BIT 0x81
0000            373   _P0_2           BIT 0x82
0000            374   _P0_3           BIT 0x83
0000            375   _P0_4           BIT 0x84
0000            376   _P0_5           BIT 0x85
0000            377   _P0_6           BIT 0x86
0000            378   _P0_7           BIT 0x87
0000            379   _P1_0           BIT 0x90
0000            380   _P1_1           BIT 0x91
0000            381   _P1_2           BIT 0x92
0000            382   _P1_3           BIT 0x93
0000            383   _P1_4           BIT 0x94
0000            384   _P1_5           BIT 0x95
0000            385   _P1_6           BIT 0x96
0000            386   _P1_7           BIT 0x97
0000            387   _P2_0           BIT 0xa0
0000            388   _P2_1           BIT 0xa1
0000            389   _P2_2           BIT 0xa2
0000            390   _P2_3           BIT 0xa3
0000            391   _P2_4           BIT 0xa4
0000            392   _P2_5           BIT 0xa5
0000            393   _P2_6           BIT 0xa6
0000            394   _P3_0           BIT 0xb0
0000            395   _P3_1           BIT 0xb1
0000            396   _P3_2           BIT 0xb2
0000            397   _P3_3           BIT 0xb3
0000            398   _P3_4           BIT 0xb4
0000            399   _P3_7           BIT 0xb7
0000            400   _CCF0           BIT 0xd8
0000            401   _CCF1           BIT 0xd9
0000            402   _CCF2           BIT 0xda
0000            403   _CCF3           BIT 0xdb
0000            404   _CCF4           BIT 0xdc
0000            405   _CCF5           BIT 0xdd
0000            406   _CR             BIT 0xde
0000            407   _CF             BIT 0xdf
0000            408   _PARITY         BIT 0xd0
0000            409   _F1             BIT 0xd1
0000            410   _OV             BIT 0xd2
0000            411   _RS0            BIT 0xd3
0000            412   _RS1            BIT 0xd4
0000            413   _F0             BIT 0xd5
0000            414   _AC             BIT 0xd6
0000            415   _CY             BIT 0xd7
0000            416   _RI             BIT 0x98
0000            417   _TI             BIT 0x99
0000            418   _RB8            BIT 0x9a
0000            419   _TB8            BIT 0x9b
0000            420   _REN            BIT 0x9c
0000            421   _CE             BIT 0x9d
0000            422   _SMODE          BIT 0x9e
0000            423   _RI1            BIT 0xc8
0000            424   _TI1            BIT 0xc9
0000            425   _RBX1           BIT 0xca
0000            426   _TBX1           BIT 0xcb
0000            427   _REN1           BIT 0xcc
0000            428   _PERR1          BIT 0xcd
0000            429   _OVR1           BIT 0xce
0000            430   _SI             BIT 0xc0
0000            431   _ACK            BIT 0xc1
0000            432   _ARBLOST        BIT 0xc2
0000            433   _ACKRQ          BIT 0xc3
0000            434   _STO            BIT 0xc4
0000            435   _STA            BIT 0xc5
0000            436   _TXMODE         BIT 0xc6
0000            437   _MASTER         BIT 0xc7
0000            438   _SPIEN          BIT 0xf8
0000            439   _TXNF           BIT 0xf9
0000            440   _NSSMD0         BIT 0xfa
0000            441   _NSSMD1         BIT 0xfb
0000            442   _RXOVRN         BIT 0xfc
0000            443   _MODF           BIT 0xfd
0000            444   _WCOL           BIT 0xfe
0000            445   _SPIF           BIT 0xff
0000            446   _IT0            BIT 0x88
0000            447   _IE0            BIT 0x89
0000            448   _IT1            BIT 0x8a
0000            449   _IE1            BIT 0x8b
0000            450   _TR0            BIT 0x8c
0000            451   _TF0            BIT 0x8d
0000            452   _TR1            BIT 0x8e
0000            453   _TF1            BIT 0x8f
0000            454   _T2XCLK0        BIT 0xc8
0000            455   _T2XCLK1        BIT 0xc9
0000            456   _TR2            BIT 0xca
0000            457   _T2SPLIT        BIT 0xcb
0000            458   _TF2CEN         BIT 0xcc
0000            459   _TF2LEN         BIT 0xcd
0000            460   _TF2L           BIT 0xce
0000            461   _TF2H           BIT 0xcf
0000            462   _T4XCLK0        BIT 0x98
0000            463   _T4XCLK1        BIT 0x99
0000            464   _TR4            BIT 0x9a
0000            465   _T4SPLIT        BIT 0x9b
0000            466   _TF4CEN         BIT 0x9c
0000            467   _TF4LEN         BIT 0x9d
0000            468   _TF4L           BIT 0x9e
0000            469   _TF4H           BIT 0x9f
0000            470   _T5XCLK0        BIT 0xc0
0000            471   _T5XCLK1        BIT 0xc1
0000            472   _TR5            BIT 0xc2
0000            473   _T5SPLIT        BIT 0xc3
0000            474   _TF5CEN         BIT 0xc4
0000            475   _TF5LEN         BIT 0xc5
0000            476   _TF5L           BIT 0xc6
0000            477   _TF5H           BIT 0xc7
0000            478   _RIE            BIT 0xd8
0000            479   _RXTO0          BIT 0xd9
0000            480   _RXTO1          BIT 0xda
0000            481   _RFRQ           BIT 0xdb
0000            482   _TIE            BIT 0xdc
0000            483   _TXHOLD         BIT 0xdd
0000            484   _TXNF1          BIT 0xde
0000            485   _TFRQ           BIT 0xdf
0000            486   ;--------------------------------------------------------
0000            487   ; overlayable register banks
0000            488   ;--------------------------------------------------------
0000            489            rbank0 segment data overlay
0000            490   ;--------------------------------------------------------
0000            491   ; internal ram data
0000            492   ;--------------------------------------------------------
0000            493            rseg R_DSEG
0000            494   _stepFlag:
0000            495            ds 1
0001            496   _stepCount:
0001            497            ds 2
0003            498   _totalSteps:
0003            499            ds 2
0005            500   _getsn_PARM_2:
0005            501            ds 2
0007            502   _getsn_buff_1_51:
0007            503            ds 3
000A            504   _getsn_sloc0_1_0:
000A            505            ds 2
000C            506   _readADC_PARM_2:
000C            507            ds 3
000F            508   _readADC_PARM_3:
000F            509            ds 3
0012            510   _readADC_mCount_1_70:
0012            511            ds 3
0015            512   _readADC_sloc0_1_0:
0015            513            ds 4
0019            514   _readADC_sloc1_1_0:
0019            515            ds 4
001D            516   _readADC_sloc2_1_0:
001D            517            ds 3
0020            518   _main_vReadings_1_75:
0020            519            ds 8
0028            520   _main_voltages_1_75:
0028            521            ds 8
0030            522   _main_measureCount_1_75:
0030            523            ds 2
0032            524   ;--------------------------------------------------------
0032            525   ; overlayable items in internal ram 
0032            526   ;--------------------------------------------------------
0000            527            rseg    R_OSEG
0000            528            rseg    R_OSEG
0000            529            rseg    R_OSEG
0000            530   ;--------------------------------------------------------
0000            531   ; indirectly addressable internal ram data
0000            532   ;--------------------------------------------------------
0000            533            rseg R_ISEG
0000            534   ;--------------------------------------------------------
0000            535   ; absolute internal ram data
0000            536   ;--------------------------------------------------------
0000            537            DSEG
0000            538   ;--------------------------------------------------------
0000            539   ; bit data
0000            540   ;--------------------------------------------------------
0000            541            rseg R_BSEG
0000            542   ;--------------------------------------------------------
0000            543   ; paged external ram data
0000            544   ;--------------------------------------------------------
0000            545            rseg R_PSEG
0000            546   ;--------------------------------------------------------
0000            547   ; external ram data
0000            548   ;--------------------------------------------------------
0000            549            rseg R_XSEG
0000            550   ;--------------------------------------------------------
0000            551   ; absolute external ram data
0000            552   ;--------------------------------------------------------
0000            553            XSEG
0000            554   ;--------------------------------------------------------
0000            555   ; external initialized ram data
0000            556   ;--------------------------------------------------------
0000            557            rseg R_IXSEG
0000            558            rseg R_HOME
0000            559            rseg R_GSINIT
0000            560            rseg R_CSEG
0000            561   ;--------------------------------------------------------
0000            562   ; Reset entry point and interrupt vectors
0000            563   ;--------------------------------------------------------
0000            564            CSEG at 0x0000
0000 020100     565            ljmp    _crt0
002B            566            CSEG at 0x002b
002B 020100     567            ljmp    _Timer2_ISR
002E            568   ;--------------------------------------------------------
002E            569   ; global & static initialisations
002E            570   ;--------------------------------------------------------
0000            571            rseg R_HOME
0000            572            rseg R_GSINIT
0000            573            rseg R_GSINIT
0000            574   ;--------------------------------------------------------
0000            575   ; data variables initialization
0000            576   ;--------------------------------------------------------
0000            577            rseg R_DINIT
0000            578   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:32: volatile unsigned char stepFlag = 1;
0000 75D801     579            mov     _stepFlag,#0x01
0003            580   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:34: int stepCount = 0;
0003 E4         581            clr     a
0004 F598       582            mov     _stepCount,a
0006 F599       583            mov     (_stepCount + 1),a
0008            584   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:35: int totalSteps = 0;
0008 E4         585            clr     a
0009 F558       586            mov     _totalSteps,a
000B F559       587            mov     (_totalSteps + 1),a
000D            588            ; The linker places a 'ret' at the end of segment R_DINIT.
000D            589   ;--------------------------------------------------------
000D            590   ; code
000D            591   ;--------------------------------------------------------
0000            592            rseg R_CSEG
0000            593   ;------------------------------------------------------------
0000            594   ;Allocation info for local variables in function '_c51_external_startup'
0000            595   ;------------------------------------------------------------
0000            596   ;------------------------------------------------------------
0000            597   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:37: char _c51_external_startup (void)
0000            598   ;        -----------------------------------------
0000            599   ;         function _c51_external_startup
0000            600   ;        -----------------------------------------
0000            601   __c51_external_startup:
0000            602            using   0
0000            603   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:40: SFRPAGE = 0x00;
0000 75A700     604            mov     _SFRPAGE,#0x00
0003            605   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:41: WDTCN = 0xDE; //First key
0003 7597DE     606            mov     _WDTCN,#0xDE
0006            607   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:42: WDTCN = 0xAD; //Second key
0006 7597AD     608            mov     _WDTCN,#0xAD
0009            609   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:44: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     610            mov     _VDM0CN,#0x80
000C            611   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:45: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     612            mov     _RSTSRC,#0x06
000F            613   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:52: SFRPAGE = 0x10;
000F 75A710     614            mov     _SFRPAGE,#0x10
0012            615   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:53: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     616            mov     _PFE0CN,#0x20
0015            617   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:54: SFRPAGE = 0x00;
0015 75A700     618            mov     _SFRPAGE,#0x00
0018            619   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:75: CLKSEL = 0x00;
0018 75A900     620            mov     _CLKSEL,#0x00
001B            621   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:76: CLKSEL = 0x00;
001B 75A900     622            mov     _CLKSEL,#0x00
001E            623   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:77: while ((CLKSEL & 0x80) == 0);
001E            624   L002001?:
001E E5A9       625            mov     a,_CLKSEL
0020 30E738     626            jnb     acc.7,L002001?
0023            627   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:78: CLKSEL = 0x03;
0023 75A903     628            mov     _CLKSEL,#0x03
0026            629   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:79: CLKSEL = 0x03;
0026 75A903     630            mov     _CLKSEL,#0x03
0029            631   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:80: while ((CLKSEL & 0x80) == 0);
0029            632   L002004?:
0029 E5A9       633            mov     a,_CLKSEL
002B 30E7B8     634            jnb     acc.7,L002004?
002E            635   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:85: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     636            orl     _P0MDOUT,#0x10
0031            637   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:86: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)  
0031 75E101     638            mov     _XBR0,#0x01
0034            639   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:89: XBR1     = 0X02; //Enable PCA I/O and route CEX0 and CEX1 only (check reference manual page 120)
0034 75E202     640            mov     _XBR1,#0x02
0037            641   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:91: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     642            mov     _XBR2,#0x40
003A            643   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:97: SCON0 = 0x10;
003A 759810     644            mov     _SCON0,#0x10
003D            645   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:98: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     646            mov     _TH1,#0xE6
0040            647   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:99: TL1 = TH1;      // Init Timer1
0040 858D8B     648            mov     _TL1,_TH1
0043            649   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:100: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     650            anl     _TMOD,#0x0F
0046            651   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:101: TMOD |=  0x20;                       
0046 438920     652            orl     _TMOD,#0x20
0049            653   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:102: TR1 = 1; // START Timer1
0049 D28E       654            setb    _TR1
004B            655   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:103: TI = 1;  // Indicate TX0 ready
004B D299       656            setb    _TI
004D            657   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:106: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
004D 75C800     658            mov     _TMR2CN0,#0x00
0050            659   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:107: CKCON0|=0b_0001_0000; // Timer 2 uses the system clock
0050 438E10     660            orl     _CKCON0,#0x10
0053            661   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:108: TMR2RL=(0x10000L-(SYSCLK/(2*TIMER_2_FREQ))); // Initialize reload value
0053 75CAC0     662            mov     _TMR2RL,#0xC0
0056 75CBE6     663            mov     (_TMR2RL >> 8),#0xE6
0059            664   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:109: TMR2=0xffff;   // Set to reload immediately
0059 75CEFF     665            mov     _TMR2,#0xFF
005C 75CFFF     666            mov     (_TMR2 >> 8),#0xFF
005F            667   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:110: ET2=1;         // Enable Timer2 interrupts
005F D2AD       668            setb    _ET2
0061            669   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:111: TR2=1;         // Start Timer2 (TMR2CN is bit addressable)
0061 D2CA       670            setb    _TR2
0063            671   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:113: EA=1; // Enable interrupts
0063 D2AF       672            setb    _EA
0065            673   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:115: return 0;
0065 758200     674            mov     dpl,#0x00
0068 22         675            ret
0069            676   ;------------------------------------------------------------
0069            677   ;Allocation info for local variables in function 'Timer3us'
0069            678   ;------------------------------------------------------------
0069            679   ;us                        Allocated to registers r2 
0069            680   ;i                         Allocated to registers r3 
0069            681   ;------------------------------------------------------------
0069            682   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:119: void Timer3us(unsigned char us)
0069            683   ;        -----------------------------------------
0069            684   ;         function Timer3us
0069            685   ;        -----------------------------------------
0069            686   _Timer3us:
0069 AA82       687            mov     r2,dpl
006B            688   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:124: CKCON0|=0b_0100_0000;
006B 438E40     689            orl     _CKCON0,#0x40
006E            690   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:126: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
006E 7592B8     691            mov     _TMR3RL,#0xB8
0071 7593FF     692            mov     (_TMR3RL >> 8),#0xFF
0074            693   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:127: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0074 859294     694            mov     _TMR3,_TMR3RL
0077 859395     695            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007A            696   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:129: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007A 759104     697            mov     _TMR3CN0,#0x04
007D            698   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:130: for (i = 0; i < us; i++)       // Count <us> overflows
007D 7B00       699            mov     r3,#0x00
007F            700   L003004?:
007F C3         701            clr     c
0080 EB         702            mov     a,r3
0081 9A         703            subb    a,r2
0082 5001       704            jnc     L003007?
0084            705   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:132: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0084            706   L003001?:
0084 E591       707            mov     a,_TMR3CN0
0086 30E7B8     708            jnb     acc.7,L003001?
0089            709   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:133: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
0089 53917F     710            anl     _TMR3CN0,#0x7F
008C            711   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:130: for (i = 0; i < us; i++)       // Count <us> overflows
008C 0B         712            inc     r3
008D 8001       713            sjmp    L003004?
008F            714   L003007?:
008F            715   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:135: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
008F 759100     716            mov     _TMR3CN0,#0x00
0092 22         717            ret
0093            718   ;------------------------------------------------------------
0093            719   ;Allocation info for local variables in function 'Timer2_ISR'
0093            720   ;------------------------------------------------------------
0093            721   ;------------------------------------------------------------
0093            722   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:139: void Timer2_ISR (void) interrupt INTERRUPT_TIMER2
0093            723   ;        -----------------------------------------
0093            724   ;         function Timer2_ISR
0093            725   ;        -----------------------------------------
0093            726   _Timer2_ISR:
0093            727   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:141: SFRPAGE=0x0;
0093 75A700     728            mov     _SFRPAGE,#0x00
0096            729   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:142: TF2H = 0; // Clear Timer2 interrupt flag
0096 C2CF       730            clr     _TF2H
0098            731   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:144: stepFlag = 1;
0098 75D801     732            mov     _stepFlag,#0x01
009B 32         733            reti
009C            734   ;        eliminated unneeded push/pop psw
009C            735   ;        eliminated unneeded push/pop dpl
009C            736   ;        eliminated unneeded push/pop dph
009C            737   ;        eliminated unneeded push/pop b
009C            738   ;        eliminated unneeded push/pop acc
009C            739   ;------------------------------------------------------------
009C            740   ;Allocation info for local variables in function 'waitms'
009C            741   ;------------------------------------------------------------
009C            742   ;ms                        Allocated to registers r2 r3 
009C            743   ;j                         Allocated to registers r4 r5 
009C            744   ;k                         Allocated to registers r6 
009C            745   ;------------------------------------------------------------
009C            746   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:149: void waitms (unsigned int ms)
009C            747   ;        -----------------------------------------
009C            748   ;         function waitms
009C            749   ;        -----------------------------------------
009C            750   _waitms:
009C AA82       751            mov     r2,dpl
009E AB83       752            mov     r3,dph
00A0            753   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:153: for(j=0; j<ms; j++)
00A0 7C00       754            mov     r4,#0x00
00A2 7D00       755            mov     r5,#0x00
00A4            756   L005005?:
00A4 C3         757            clr     c
00A5 EC         758            mov     a,r4
00A6 9A         759            subb    a,r2
00A7 ED         760            mov     a,r5
00A8 9B         761            subb    a,r3
00A9 5001       762            jnc     L005009?
00AB            763   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:154: for (k=0; k<4; k++) Timer3us(250);
00AB 7E00       764            mov     r6,#0x00
00AD            765   L005001?:
00AD BE04F8     766            cjne    r6,#0x04,L005018?
00B0            767   L005018?:
00B0 5001       768            jnc     L005007?
00B2 7582FA     769            mov     dpl,#0xFA
00B5 C002       770            push    ar2
00B7 C003       771            push    ar3
00B9 C004       772            push    ar4
00BB C005       773            push    ar5
00BD C006       774            push    ar6
00BF 120100     775            lcall   _Timer3us
00C2 D006       776            pop     ar6
00C4 D005       777            pop     ar5
00C6 D004       778            pop     ar4
00C8 D003       779            pop     ar3
00CA D002       780            pop     ar2
00CC 0E         781            inc     r6
00CD 8001       782            sjmp    L005001?
00CF            783   L005007?:
00CF            784   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:153: for(j=0; j<ms; j++)
00CF 0C         785            inc     r4
00D0 BC0038     786            cjne    r4,#0x00,L005005?
00D3 0D         787            inc     r5
00D4 8001       788            sjmp    L005005?
00D6            789   L005009?:
00D6 22         790            ret
00D7            791   ;------------------------------------------------------------
00D7            792   ;Allocation info for local variables in function 'getsn'
00D7            793   ;------------------------------------------------------------
00D7            794   ;len                       Allocated with name '_getsn_PARM_2'
00D7            795   ;buff                      Allocated with name '_getsn_buff_1_51'
00D7            796   ;j                         Allocated with name '_getsn_sloc0_1_0'
00D7            797   ;c                         Allocated to registers r3 
00D7            798   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
00D7            799   ;------------------------------------------------------------
00D7            800   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:157: int getsn (char * buff, int len)
00D7            801   ;        -----------------------------------------
00D7            802   ;         function getsn
00D7            803   ;        -----------------------------------------
00D7            804   _getsn:
00D7 858238     805            mov     _getsn_buff_1_51,dpl
00DA 858339     806            mov     (_getsn_buff_1_51 + 1),dph
00DD 85F03A     807            mov     (_getsn_buff_1_51 + 2),b
00E0            808   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:162: for(j=0; j<(len-1); j++)
00E0 E4         809            clr     a
00E1 F588       810            mov     _getsn_sloc0_1_0,a
00E3 F589       811            mov     (_getsn_sloc0_1_0 + 1),a
00E5 E518       812            mov     a,_getsn_PARM_2
00E7 24FF       813            add     a,#0xff
00E9 FF         814            mov     r7,a
00EA E519       815            mov     a,(_getsn_PARM_2 + 1)
00EC 34FF       816            addc    a,#0xff
00EE F8         817            mov     r0,a
00EF 7900       818            mov     r1,#0x00
00F1 7A00       819            mov     r2,#0x00
00F3            820   L006005?:
00F3 C3         821            clr     c
00F4 E9         822            mov     a,r1
00F5 9F         823            subb    a,r7
00F6 EA         824            mov     a,r2
00F7 6480       825            xrl     a,#0x80
00F9 88F0       826            mov     b,r0
00FB 63F080     827            xrl     b,#0x80
00FE 95F0       828            subb    a,b
0100 5001       829            jnc     L006008?
0102            830   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:164: c=getchar();
0102 C002       831            push    ar2
0104 C007       832            push    ar7
0106 C000       833            push    ar0
0108 C001       834            push    ar1
010A 120100     835            lcall   _getchar
010D AB82       836            mov     r3,dpl
010F D001       837            pop     ar1
0111 D000       838            pop     ar0
0113 D007       839            pop     ar7
0115 D002       840            pop     ar2
0117            841   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:165: if ( (c=='\n') || (c=='\r') )
0117 BB0A80     842            cjne    r3,#0x0A,L006015?
011A 8001       843            sjmp    L006001?
011C            844   L006015?:
011C BB0D00     845            cjne    r3,#0x0D,L006002?
011F            846   L006001?:
011F            847   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:167: buff[j]=0;
011F E588       848            mov     a,_getsn_sloc0_1_0
0121 2538       849            add     a,_getsn_buff_1_51
0123 FC         850            mov     r4,a
0124 E589       851            mov     a,(_getsn_sloc0_1_0 + 1)
0126 3539       852            addc    a,(_getsn_buff_1_51 + 1)
0128 FD         853            mov     r5,a
0129 AE3A       854            mov     r6,(_getsn_buff_1_51 + 2)
012B 8C82       855            mov     dpl,r4
012D 8D83       856            mov     dph,r5
012F 8EF0       857            mov     b,r6
0131 E4         858            clr     a
0132 120100     859            lcall   __gptrput
0135            860   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:168: return j;
0135 858882     861            mov     dpl,_getsn_sloc0_1_0
0138 858983     862            mov     dph,(_getsn_sloc0_1_0 + 1)
013B 22         863            ret
013C            864   L006002?:
013C            865   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:172: buff[j]=c;
013C E9         866            mov     a,r1
013D 2538       867            add     a,_getsn_buff_1_51
013F FC         868            mov     r4,a
0140 EA         869            mov     a,r2
0141 3539       870            addc    a,(_getsn_buff_1_51 + 1)
0143 FD         871            mov     r5,a
0144 AE3A       872            mov     r6,(_getsn_buff_1_51 + 2)
0146 8C82       873            mov     dpl,r4
0148 8D83       874            mov     dph,r5
014A 8EF0       875            mov     b,r6
014C EB         876            mov     a,r3
014D 120100     877            lcall   __gptrput
0150            878   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:162: for(j=0; j<(len-1); j++)
0150 09         879            inc     r1
0151 B90080     880            cjne    r1,#0x00,L006018?
0154 0A         881            inc     r2
0155            882   L006018?:
0155 8988       883            mov     _getsn_sloc0_1_0,r1
0157 8A89       884            mov     (_getsn_sloc0_1_0 + 1),r2
0159 8001       885            sjmp    L006005?
015B            886   L006008?:
015B            887   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:175: buff[j]=0;
015B E588       888            mov     a,_getsn_sloc0_1_0
015D 2538       889            add     a,_getsn_buff_1_51
015F FA         890            mov     r2,a
0160 E589       891            mov     a,(_getsn_sloc0_1_0 + 1)
0162 3539       892            addc    a,(_getsn_buff_1_51 + 1)
0164 FB         893            mov     r3,a
0165 AC3A       894            mov     r4,(_getsn_buff_1_51 + 2)
0167 8A82       895            mov     dpl,r2
0169 8B83       896            mov     dph,r3
016B 8CF0       897            mov     b,r4
016D E4         898            clr     a
016E 120100     899            lcall   __gptrput
0171            900   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:176: return len;
0171 851882     901            mov     dpl,_getsn_PARM_2
0174 851983     902            mov     dph,(_getsn_PARM_2 + 1)
0177 22         903            ret
0178            904   ;------------------------------------------------------------
0178            905   ;Allocation info for local variables in function 'InitADC'
0178            906   ;------------------------------------------------------------
0178            907   ;------------------------------------------------------------
0178            908   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:179: void InitADC (void)
0178            909   ;        -----------------------------------------
0178            910   ;         function InitADC
0178            911   ;        -----------------------------------------
0178            912   _InitADC:
0178            913   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:181: SFRPAGE = 0x00;
0178 75A700     914            mov     _SFRPAGE,#0x00
017B            915   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:182: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
017B 75B280     916            mov     _ADC0CN1,#0x80
017E            917   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:183: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
017E 75BCF8     918            mov     _ADC0CF0,#0xF8
0181            919   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:184: ADC0CF1 = 0b_0_0_011110; // Same as default for now
0181 75B91E     920            mov     _ADC0CF1,#0x1E
0184            921   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:185: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
0184 75E800     922            mov     _ADC0CN0,#0x00
0187            923   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:186: ADC0CF2 = 0b_0_01_11111 ; // GND pin, Vref=VDD
0187 75DF3F     924            mov     _ADC0CF2,#0x3F
018A            925   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:187: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
018A 75B300     926            mov     _ADC0CN2,#0x00
018D            927   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:188: ADEN=1; // Enable ADC
018D D2EF       928            setb    _ADEN
018F 22         929            ret
0190            930   ;------------------------------------------------------------
0190            931   ;Allocation info for local variables in function 'ADC_at_Pin'
0190            932   ;------------------------------------------------------------
0190            933   ;pin                       Allocated to registers 
0190            934   ;------------------------------------------------------------
0190            935   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:191: unsigned int ADC_at_Pin(unsigned char pin)
0190            936   ;        -----------------------------------------
0190            937   ;         function ADC_at_Pin
0190            938   ;        -----------------------------------------
0190            939   _ADC_at_Pin:
0190 8582BB     940            mov     _ADC0MX,dpl
0193            941   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:194: ADBUSY=1;       // Dummy conversion first to select new pin
0193 D2EC       942            setb    _ADBUSY
0195            943   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:195: while (ADBUSY); // Wait for dummy conversion to finish
0195            944   L008001?:
0195 20ECC0     945            jb      _ADBUSY,L008001?
0198            946   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:196: ADBUSY = 1;     // Convert voltage at the pin
0198 D2EC       947            setb    _ADBUSY
019A            948   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:197: while (ADBUSY); // Wait for conversion to complete
019A            949   L008004?:
019A 20EC00     950            jb      _ADBUSY,L008004?
019D            951   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:198: return (ADC0);
019D 85BD82     952            mov     dpl,_ADC0
01A0 85BE83     953            mov     dph,(_ADC0 >> 8)
01A3 22         954            ret
01A4            955   ;------------------------------------------------------------
01A4            956   ;Allocation info for local variables in function 'Volts_at_Pin'
01A4            957   ;------------------------------------------------------------
01A4            958   ;pin                       Allocated to registers r2 
01A4            959   ;------------------------------------------------------------
01A4            960   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:201: float Volts_at_Pin(unsigned char pin)
01A4            961   ;        -----------------------------------------
01A4            962   ;         function Volts_at_Pin
01A4            963   ;        -----------------------------------------
01A4            964   _Volts_at_Pin:
01A4            965   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:203: return ((ADC_at_Pin(pin)*VDD)/16383.0);
01A4 120100     966            lcall   _ADC_at_Pin
01A7 120100     967            lcall   ___uint2fs
01AA AA82       968            mov     r2,dpl
01AC AB83       969            mov     r3,dph
01AE ACF0       970            mov     r4,b
01B0 FD         971            mov     r5,a
01B1 C002       972            push    ar2
01B3 C003       973            push    ar3
01B5 C004       974            push    ar4
01B7 C005       975            push    ar5
01B9 909FBE     976            mov     dptr,#0x9FBE
01BC 75F052     977            mov     b,#0x52
01BF 7440       978            mov     a,#0x40
01C1 120100     979            lcall   ___fsmul
01C4 AA82       980            mov     r2,dpl
01C6 AB83       981            mov     r3,dph
01C8 ACF0       982            mov     r4,b
01CA FD         983            mov     r5,a
01CB E581       984            mov     a,sp
01CD 24FC       985            add     a,#0xfc
01CF F581       986            mov     sp,a
01D1 E4         987            clr     a
01D2 C0E0       988            push    acc
01D4 74FC       989            mov     a,#0xFC
01D6 C0E0       990            push    acc
01D8 747F       991            mov     a,#0x7F
01DA C0E0       992            push    acc
01DC 7446       993            mov     a,#0x46
01DE C0E0       994            push    acc
01E0 8A82       995            mov     dpl,r2
01E2 8B83       996            mov     dph,r3
01E4 8CF0       997            mov     b,r4
01E6 ED         998            mov     a,r5
01E7 120100     999            lcall   ___fsdiv
01EA AA82      1000            mov     r2,dpl
01EC AB83      1001            mov     r3,dph
01EE ACF0      1002            mov     r4,b
01F0 FD        1003            mov     r5,a
01F1 E581      1004            mov     a,sp
01F3 24FC      1005            add     a,#0xfc
01F5 F581      1006            mov     sp,a
01F7 8A82      1007            mov     dpl,r2
01F9 8B83      1008            mov     dph,r3
01FB 8CF0      1009            mov     b,r4
01FD ED        1010            mov     a,r5
01FE 22        1011            ret
01FF           1012   ;------------------------------------------------------------
01FF           1013   ;Allocation info for local variables in function 'ConfigPCA0'
01FF           1014   ;------------------------------------------------------------
01FF           1015   ;------------------------------------------------------------
01FF           1016   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:206: void ConfigPCA0()
01FF           1017   ;        -----------------------------------------
01FF           1018   ;         function ConfigPCA0
01FF           1019   ;        -----------------------------------------
01FF           1020   _ConfigPCA0:
01FF           1021   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:208: SFRPAGE = 0x00; //Navigate to SFR page for register write
01FF 75A700    1022            mov     _SFRPAGE,#0x00
0202           1023   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:210: PCA0POL = 0b_0000_0000; //Set the output polarity for all channels to default (no inversion)
0202 759600    1024            mov     _PCA0POL,#0x00
0205           1025   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:212: PCA0MD = 0b_0000_0000; //Set PCA mode to operate even in idle mode with SYSCLK/12
0205 75D900    1026            mov     _PCA0MD,#0x00
0208           1027   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:213: PCA0PWM = 0b_0000_0000;        //Enable 8-bit PWM with no overflow flag set and no interrupts enabled
0208 75F700    1028            mov     _PCA0PWM,#0x00
020B           1029   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:214: PCA0CLR = 0b_0000_0000; //Disable comparator clear for all modules
020B 759C00    1030            mov     _PCA0CLR,#0x00
020E           1031   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:215: PCA0CENT = 0b_00_000000; //Set all modules to edge aligned mode (bits 6 and 7 are reserved and must be 00)
020E 759E00    1032            mov     _PCA0CENT,#0x00
0211           1033   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:217: PCA0CN0 = 0b_0100_0000; //Start the PCA counter/timer (CR bit)         
0211 75D840    1034            mov     _PCA0CN0,#0x40
0214           1035   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:220: PCA0CPM0 = 0b_0100_0010;//Configure Channel 0 to function in 8-bit PWM mode
0214 75DA42    1036            mov     _PCA0CPM0,#0x42
0217           1037   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:221: PCA0CPH0 = 205; //Load the PCA0CP0 high byte with an initial value of 128(binary 1000_0000)
0217 75FCCD    1038            mov     _PCA0CPH0,#0xCD
021A           1039   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:224: PCA0CPM1 = 0b_0100_0010; //Configure Channel 1 to function in 8-bit PWM mode
021A 75DB42    1040            mov     _PCA0CPM1,#0x42
021D           1041   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:225: PCA0CPH1 = 128; //Load the PCA0CP1 high byte 
021D 75EA80    1042            mov     _PCA0CPH1,#0x80
0220 22        1043            ret
0221           1044   ;------------------------------------------------------------
0221           1045   ;Allocation info for local variables in function 'takeStep'
0221           1046   ;------------------------------------------------------------
0221           1047   ;instr                     Allocated to registers r2 r3 
0221           1048   ;------------------------------------------------------------
0221           1049   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:229: void takeStep(int instr)
0221           1050   ;        -----------------------------------------
0221           1051   ;         function takeStep
0221           1052   ;        -----------------------------------------
0221           1053   _takeStep:
0221 AA82      1054            mov     r2,dpl
0223 AB83      1055            mov     r3,dph
0225           1056   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:231: if(instr) //If the instruction is to move forward...
0225 EA        1057            mov     a,r2
0226 4B        1058            orl     a,r3
0227 6001      1059            jz      L011012?
0229           1060   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:233: switch(stepCount)
0229 E4        1061            clr     a
022A B59880    1062            cjne    a,_stepCount,L011029?
022D E4        1063            clr     a
022E B59980    1064            cjne    a,(_stepCount + 1),L011029?
0231 8001      1065            sjmp    L011001?
0233           1066   L011029?:
0233 7401      1067            mov     a,#0x01
0235 B59800    1068            cjne    a,_stepCount,L011030?
0238 E4        1069            clr     a
0239 B59900    1070            cjne    a,(_stepCount + 1),L011030?
023C 8001      1071            sjmp    L011002?
023E           1072   L011030?:
023E 7402      1073            mov     a,#0x02
0240 B59880    1074            cjne    a,_stepCount,L011031?
0243 E4        1075            clr     a
0244 B59980    1076            cjne    a,(_stepCount + 1),L011031?
0247 8001      1077            sjmp    L011003?
0249           1078   L011031?:
0249 7403      1079            mov     a,#0x03
024B B59800    1080            cjne    a,_stepCount,L011032?
024E E4        1081            clr     a
024F B59900    1082            cjne    a,(_stepCount + 1),L011032?
0252 8001      1083            sjmp    L011004?
0254           1084   L011032?:
0254 020100    1085            ljmp    L011013?
0257           1086   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:235: case 0: //Step 0
0257           1087   L011001?:
0257           1088   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:236: PORT1 = 1;
0257 D2A1      1089            setb    _P2_1
0259           1090   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:237: PORT2 = 1;
0259 D2A2      1091            setb    _P2_2
025B           1092   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:238: PORT3 = 0;
025B C2A3      1093            clr     _P2_3
025D           1094   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:239: PORT4 = 0;
025D C2A4      1095            clr     _P2_4
025F           1096   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:240: break;
025F           1097   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:242: case 1: //Step 1
025F 8001      1098            sjmp    L011013?
0261           1099   L011002?:
0261           1100   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:243: PORT1 = 0;
0261 C2A1      1101            clr     _P2_1
0263           1102   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:244: PORT2 = 1;
0263 D2A2      1103            setb    _P2_2
0265           1104   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:245: PORT3 = 1;
0265 D2A3      1105            setb    _P2_3
0267           1106   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:246: PORT4 = 0;
0267 C2A4      1107            clr     _P2_4
0269           1108   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:247: break;
0269           1109   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:249: case 2: //Step 2
0269 8001      1110            sjmp    L011013?
026B           1111   L011003?:
026B           1112   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:250: PORT1 = 0;
026B C2A1      1113            clr     _P2_1
026D           1114   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:251: PORT2 = 0;
026D C2A2      1115            clr     _P2_2
026F           1116   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:252: PORT3 = 1;
026F D2A3      1117            setb    _P2_3
0271           1118   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:253: PORT4 = 1;
0271 D2A4      1119            setb    _P2_4
0273           1120   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:254: break;
0273           1121   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:256: case 3: //Step 3
0273 8001      1122            sjmp    L011013?
0275           1123   L011004?:
0275           1124   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:257: PORT1 = 1;
0275 D2A1      1125            setb    _P2_1
0277           1126   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:258: PORT2 = 0;
0277 C2A2      1127            clr     _P2_2
0279           1128   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:259: PORT3 = 0;
0279 C2A3      1129            clr     _P2_3
027B           1130   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:260: PORT4 = 1;
027B D2A4      1131            setb    _P2_4
027D           1132   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:262: }
027D 8001      1133            sjmp    L011013?
027F           1134   L011012?:
027F           1135   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:266: switch(stepCount)
027F E4        1136            clr     a
0280 B598C0    1137            cjne    a,_stepCount,L011033?
0283 E4        1138            clr     a
0284 B599C0    1139            cjne    a,(_stepCount + 1),L011033?
0287 8001      1140            sjmp    L011006?
0289           1141   L011033?:
0289 7401      1142            mov     a,#0x01
028B B59840    1143            cjne    a,_stepCount,L011034?
028E E4        1144            clr     a
028F B59940    1145            cjne    a,(_stepCount + 1),L011034?
0292 8001      1146            sjmp    L011007?
0294           1147   L011034?:
0294 7402      1148            mov     a,#0x02
0296 B598C0    1149            cjne    a,_stepCount,L011035?
0299 E4        1150            clr     a
029A B599C0    1151            cjne    a,(_stepCount + 1),L011035?
029D 8001      1152            sjmp    L011008?
029F           1153   L011035?:
029F 7403      1154            mov     a,#0x03
02A1 B59840    1155            cjne    a,_stepCount,L011036?
02A4 E4        1156            clr     a
02A5 B59940    1157            cjne    a,(_stepCount + 1),L011036?
02A8 8001      1158            sjmp    L011009?
02AA           1159   L011036?:
02AA           1160   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:268: case 0: //Step 0
02AA 8001      1161            sjmp    L011013?
02AC           1162   L011006?:
02AC           1163   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:269: PORT1 = 1;
02AC D2A1      1164            setb    _P2_1
02AE           1165   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:270: PORT2 = 0;
02AE C2A2      1166            clr     _P2_2
02B0           1167   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:271: PORT3 = 0;
02B0 C2A3      1168            clr     _P2_3
02B2           1169   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:272: PORT4 = 1;
02B2 D2A4      1170            setb    _P2_4
02B4           1171   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:273: break;
02B4           1172   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:275: case 1: //Step 1
02B4 8001      1173            sjmp    L011013?
02B6           1174   L011007?:
02B6           1175   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:276: PORT1 = 0;
02B6 C2A1      1176            clr     _P2_1
02B8           1177   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:277: PORT2 = 0;
02B8 C2A2      1178            clr     _P2_2
02BA           1179   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:278: PORT3 = 1;
02BA D2A3      1180            setb    _P2_3
02BC           1181   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:279: PORT4 = 1;
02BC D2A4      1182            setb    _P2_4
02BE           1183   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:280: break;
02BE           1184   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:282: case 2: //Step 2
02BE 8001      1185            sjmp    L011013?
02C0           1186   L011008?:
02C0           1187   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:283: PORT1 = 0;
02C0 C2A1      1188            clr     _P2_1
02C2           1189   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:284: PORT2 = 1;
02C2 D2A2      1190            setb    _P2_2
02C4           1191   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:285: PORT3 = 1;
02C4 D2A3      1192            setb    _P2_3
02C6           1193   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:286: PORT4 = 0;
02C6 C2A4      1194            clr     _P2_4
02C8           1195   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:287: break;
02C8           1196   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:289: case 3: //Step 3
02C8 8001      1197            sjmp    L011013?
02CA           1198   L011009?:
02CA           1199   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:290: PORT1 = 1;
02CA D2A1      1200            setb    _P2_1
02CC           1201   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:291: PORT2 = 1;
02CC D2A2      1202            setb    _P2_2
02CE           1203   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:292: PORT3 = 0;
02CE C2A3      1204            clr     _P2_3
02D0           1205   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:293: PORT4 = 0;
02D0 C2A4      1206            clr     _P2_4
02D2           1207   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:295: }
02D2           1208   L011013?:
02D2           1209   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:297: stepCount++;
02D2 0598      1210            inc     _stepCount
02D4 E4        1211            clr     a
02D5 B598C0    1212            cjne    a,_stepCount,L011037?
02D8 0599      1213            inc     (_stepCount + 1)
02DA           1214   L011037?:
02DA           1215   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:298: totalSteps++;
02DA 0558      1216            inc     _totalSteps
02DC E4        1217            clr     a
02DD B55800    1218            cjne    a,_totalSteps,L011038?
02E0 0559      1219            inc     (_totalSteps + 1)
02E2           1220   L011038?:
02E2           1221   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:299: if(stepCount > 3)
02E2 C3        1222            clr     c
02E3 7403      1223            mov     a,#0x03
02E5 9598      1224            subb    a,_stepCount
02E7 E4        1225            clr     a
02E8 6480      1226            xrl     a,#0x80
02EA 8599F0    1227            mov     b,(_stepCount + 1)
02ED 63F080    1228            xrl     b,#0x80
02F0 95F0      1229            subb    a,b
02F2 5001      1230            jnc     L011016?
02F4           1231   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:300: stepCount = 0;
02F4 E4        1232            clr     a
02F5 F598      1233            mov     _stepCount,a
02F7 F599      1234            mov     (_stepCount + 1),a
02F9           1235   L011016?:
02F9 22        1236            ret
02FA           1237   ;------------------------------------------------------------
02FA           1238   ;Allocation info for local variables in function 'ConfigurePins'
02FA           1239   ;------------------------------------------------------------
02FA           1240   ;------------------------------------------------------------
02FA           1241   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:304: void ConfigurePins()
02FA           1242   ;        -----------------------------------------
02FA           1243   ;         function ConfigurePins
02FA           1244   ;        -----------------------------------------
02FA           1245   _ConfigurePins:
02FA           1246   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:306: P0SKIP |= 0b_1100_1111; //Skip all P0 bits except bits 4 and 5 (UART0)
02FA 43D4CF    1247            orl     _P0SKIP,#0xCF
02FD           1248   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:308: SFRPAGE = 0x20;
02FD 75A720    1249            mov     _SFRPAGE,#0x20
0300           1250   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:310: P0MDIN &= 0b_1111_1011; //Set P0 bit 2 to analog input for ADC
0300 53F1FB    1251            anl     _P0MDIN,#0xFB
0303           1252   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:311: P1MDIN &= 0b_1110_1111; //Set P1 bit 4 to analog input for ADC
0303 53F2EF    1253            anl     _P1MDIN,#0xEF
0306           1254   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:313: SFRPAGE = 0x00;
0306 75A700    1255            mov     _SFRPAGE,#0x00
0309           1256   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:315: P1SKIP |= 0b_0111_1111; //Skip all P1 bits except bit 7
0309 43D57F    1257            orl     _P1SKIP,#0x7F
030C           1258   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:317: P2MDOUT |= 0b_0111_1111; //Set P2 bits 0, 1, 2, 3, 4, 5 to push-pull output mode
030C 43A67F    1259            orl     _P2MDOUT,#0x7F
030F           1260   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:318: P1MDOUT |= 0b_1000_0000; //Set P1 bit 7 to push-pull output mode       
030F 43A580    1261            orl     _P1MDOUT,#0x80
0312 22        1262            ret
0313           1263   ;------------------------------------------------------------
0313           1264   ;Allocation info for local variables in function 'readADC'
0313           1265   ;------------------------------------------------------------
0313           1266   ;voltageMeasurements       Allocated with name '_readADC_PARM_2'
0313           1267   ;voltageReadings           Allocated with name '_readADC_PARM_3'
0313           1268   ;mCount                    Allocated with name '_readADC_mCount_1_70'
0313           1269   ;totalMeasurements         Allocated to registers 
0313           1270   ;errorConstant             Allocated to registers 
0313           1271   ;sloc0                     Allocated with name '_readADC_sloc0_1_0'
0313           1272   ;sloc1                     Allocated with name '_readADC_sloc1_1_0'
0313           1273   ;sloc2                     Allocated with name '_readADC_sloc2_1_0'
0313           1274   ;------------------------------------------------------------
0313           1275   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:321: void readADC(int *mCount, float *voltageMeasurements, float *voltageReadings)
0313           1276   ;        -----------------------------------------
0313           1277   ;         function readADC
0313           1278   ;        -----------------------------------------
0313           1279   _readADC:
0313           1280   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:327: if((*mCount) < totalMeasurements)
0313 8582D8    1281            mov     _readADC_mCount_1_70,dpl
0316 8583D9    1282            mov     (_readADC_mCount_1_70 + 1),dph
0319 85F0DA    1283            mov     (_readADC_mCount_1_70 + 2),b
031C 120100    1284            lcall   __gptrget
031F FD        1285            mov     r5,a
0320 A3        1286            inc     dptr
0321 120100    1287            lcall   __gptrget
0324 FE        1288            mov     r6,a
0325 C3        1289            clr     c
0326 ED        1290            mov     a,r5
0327 942C      1291            subb    a,#0x2C
0329 EE        1292            mov     a,r6
032A 6480      1293            xrl     a,#0x80
032C 9481      1294            subb    a,#0x81
032E 4001      1295            jc      L013007?
0330 020100    1296            ljmp    L013002?
0333           1297   L013007?:
0333           1298   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:330: voltageMeasurements[0] += Volts_at_Pin(QFP32_MUX_P1_4);
0333 ADD8      1299            mov     r5,_readADC_PARM_2
0335 AED9      1300            mov     r6,(_readADC_PARM_2 + 1)
0337 AFDA      1301            mov     r7,(_readADC_PARM_2 + 2)
0339 8D82      1302            mov     dpl,r5
033B 8E83      1303            mov     dph,r6
033D 8FF0      1304            mov     b,r7
033F 120100    1305            lcall   __gptrget
0342 F528      1306            mov     _readADC_sloc0_1_0,a
0344 A3        1307            inc     dptr
0345 120100    1308            lcall   __gptrget
0348 F529      1309            mov     (_readADC_sloc0_1_0 + 1),a
034A A3        1310            inc     dptr
034B 120100    1311            lcall   __gptrget
034E F52A      1312            mov     (_readADC_sloc0_1_0 + 2),a
0350 A3        1313            inc     dptr
0351 120100    1314            lcall   __gptrget
0354 F52B      1315            mov     (_readADC_sloc0_1_0 + 3),a
0356 75820A    1316            mov     dpl,#0x0A
0359 C005      1317            push    ar5
035B C006      1318            push    ar6
035D C007      1319            push    ar7
035F 120100    1320            lcall   _Volts_at_Pin
0362 AC82      1321            mov     r4,dpl
0364 AA83      1322            mov     r2,dph
0366 ABF0      1323            mov     r3,b
0368 F8        1324            mov     r0,a
0369 C004      1325            push    ar4
036B C002      1326            push    ar2
036D C003      1327            push    ar3
036F C000      1328            push    ar0
0371 852882    1329            mov     dpl,_readADC_sloc0_1_0
0374 852983    1330            mov     dph,(_readADC_sloc0_1_0 + 1)
0377 852AF0    1331            mov     b,(_readADC_sloc0_1_0 + 2)
037A E52B      1332            mov     a,(_readADC_sloc0_1_0 + 3)
037C 120100    1333            lcall   ___fsadd
037F AA82      1334            mov     r2,dpl
0381 AB83      1335            mov     r3,dph
0383 ACF0      1336            mov     r4,b
0385 F8        1337            mov     r0,a
0386 E581      1338            mov     a,sp
0388 24FC      1339            add     a,#0xfc
038A F581      1340            mov     sp,a
038C D007      1341            pop     ar7
038E D006      1342            pop     ar6
0390 D005      1343            pop     ar5
0392 8D82      1344            mov     dpl,r5
0394 8E83      1345            mov     dph,r6
0396 8FF0      1346            mov     b,r7
0398 EA        1347            mov     a,r2
0399 120100    1348            lcall   __gptrput
039C A3        1349            inc     dptr
039D EB        1350            mov     a,r3
039E 120100    1351            lcall   __gptrput
03A1 A3        1352            inc     dptr
03A2 EC        1353            mov     a,r4
03A3 120100    1354            lcall   __gptrput
03A6 A3        1355            inc     dptr
03A7 E8        1356            mov     a,r0
03A8 120100    1357            lcall   __gptrput
03AB           1358   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:331: voltageMeasurements[1] += Volts_at_Pin(QFP32_MUX_P0_2);
03AB 7404      1359            mov     a,#0x04
03AD 2D        1360            add     a,r5
03AE FD        1361            mov     r5,a
03AF E4        1362            clr     a
03B0 3E        1363            addc    a,r6
03B1 FE        1364            mov     r6,a
03B2 8D82      1365            mov     dpl,r5
03B4 8E83      1366            mov     dph,r6
03B6 8FF0      1367            mov     b,r7
03B8 120100    1368            lcall   __gptrget
03BB F528      1369            mov     _readADC_sloc0_1_0,a
03BD A3        1370            inc     dptr
03BE 120100    1371            lcall   __gptrget
03C1 F529      1372            mov     (_readADC_sloc0_1_0 + 1),a
03C3 A3        1373            inc     dptr
03C4 120100    1374            lcall   __gptrget
03C7 F52A      1375            mov     (_readADC_sloc0_1_0 + 2),a
03C9 A3        1376            inc     dptr
03CA 120100    1377            lcall   __gptrget
03CD F52B      1378            mov     (_readADC_sloc0_1_0 + 3),a
03CF 758201    1379            mov     dpl,#0x01
03D2 C005      1380            push    ar5
03D4 C006      1381            push    ar6
03D6 C007      1382            push    ar7
03D8 120100    1383            lcall   _Volts_at_Pin
03DB A982      1384            mov     r1,dpl
03DD AA83      1385            mov     r2,dph
03DF ABF0      1386            mov     r3,b
03E1 FC        1387            mov     r4,a
03E2 C001      1388            push    ar1
03E4 C002      1389            push    ar2
03E6 C003      1390            push    ar3
03E8 C004      1391            push    ar4
03EA 852882    1392            mov     dpl,_readADC_sloc0_1_0
03ED 852983    1393            mov     dph,(_readADC_sloc0_1_0 + 1)
03F0 852AF0    1394            mov     b,(_readADC_sloc0_1_0 + 2)
03F3 E52B      1395            mov     a,(_readADC_sloc0_1_0 + 3)
03F5 120100    1396            lcall   ___fsadd
03F8 AA82      1397            mov     r2,dpl
03FA AB83      1398            mov     r3,dph
03FC ACF0      1399            mov     r4,b
03FE F8        1400            mov     r0,a
03FF E581      1401            mov     a,sp
0401 24FC      1402            add     a,#0xfc
0403 F581      1403            mov     sp,a
0405 D007      1404            pop     ar7
0407 D006      1405            pop     ar6
0409 D005      1406            pop     ar5
040B 8D82      1407            mov     dpl,r5
040D 8E83      1408            mov     dph,r6
040F 8FF0      1409            mov     b,r7
0411 EA        1410            mov     a,r2
0412 120100    1411            lcall   __gptrput
0415 A3        1412            inc     dptr
0416 EB        1413            mov     a,r3
0417 120100    1414            lcall   __gptrput
041A A3        1415            inc     dptr
041B EC        1416            mov     a,r4
041C 120100    1417            lcall   __gptrput
041F A3        1418            inc     dptr
0420 E8        1419            mov     a,r0
0421 120100    1420            lcall   __gptrput
0424           1421   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:334: (*mCount)++;
0424 85D882    1422            mov     dpl,_readADC_mCount_1_70
0427 85D983    1423            mov     dph,(_readADC_mCount_1_70 + 1)
042A 85DAF0    1424            mov     b,(_readADC_mCount_1_70 + 2)
042D 120100    1425            lcall   __gptrget
0430 FA        1426            mov     r2,a
0431 A3        1427            inc     dptr
0432 120100    1428            lcall   __gptrget
0435 FB        1429            mov     r3,a
0436 0A        1430            inc     r2
0437 BA0080    1431            cjne    r2,#0x00,L013008?
043A 0B        1432            inc     r3
043B           1433   L013008?:
043B 85D882    1434            mov     dpl,_readADC_mCount_1_70
043E 85D983    1435            mov     dph,(_readADC_mCount_1_70 + 1)
0441 85DAF0    1436            mov     b,(_readADC_mCount_1_70 + 2)
0444 EA        1437            mov     a,r2
0445 120100    1438            lcall   __gptrput
0448 A3        1439            inc     dptr
0449 EB        1440            mov     a,r3
044A 020100    1441            ljmp    __gptrput
044D           1442   L013002?:
044D           1443   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:339: voltageReadings[0] = (voltageMeasurements[0]/totalMeasurements) - errorConstant;
044D 859828    1444            mov     _readADC_sloc0_1_0,_readADC_PARM_3
0450 859929    1445            mov     (_readADC_sloc0_1_0 + 1),(_readADC_PARM_3 + 1)
0453 859A2A    1446            mov     (_readADC_sloc0_1_0 + 2),(_readADC_PARM_3 + 2)
0456 ADD8      1447            mov     r5,_readADC_PARM_2
0458 AED9      1448            mov     r6,(_readADC_PARM_2 + 1)
045A AFDA      1449            mov     r7,(_readADC_PARM_2 + 2)
045C 8D82      1450            mov     dpl,r5
045E 8E83      1451            mov     dph,r6
0460 8FF0      1452            mov     b,r7
0462 120100    1453            lcall   __gptrget
0465 F8        1454            mov     r0,a
0466 A3        1455            inc     dptr
0467 120100    1456            lcall   __gptrget
046A F9        1457            mov     r1,a
046B A3        1458            inc     dptr
046C 120100    1459            lcall   __gptrget
046F FA        1460            mov     r2,a
0470 A3        1461            inc     dptr
0471 120100    1462            lcall   __gptrget
0474 FB        1463            mov     r3,a
0475 C005      1464            push    ar5
0477 C006      1465            push    ar6
0479 C007      1466            push    ar7
047B E4        1467            clr     a
047C C0E0      1468            push    acc
047E C0E0      1469            push    acc
0480 7496      1470            mov     a,#0x96
0482 C0E0      1471            push    acc
0484 7443      1472            mov     a,#0x43
0486 C0E0      1473            push    acc
0488 8882      1474            mov     dpl,r0
048A 8983      1475            mov     dph,r1
048C 8AF0      1476            mov     b,r2
048E EB        1477            mov     a,r3
048F 120100    1478            lcall   ___fsdiv
0492 AA82      1479            mov     r2,dpl
0494 AB83      1480            mov     r3,dph
0496 ACF0      1481            mov     r4,b
0498 F8        1482            mov     r0,a
0499 E581      1483            mov     a,sp
049B 24FC      1484            add     a,#0xfc
049D F581      1485            mov     sp,a
049F 74B8      1486            mov     a,#0xB8
04A1 C0E0      1487            push    acc
04A3 741E      1488            mov     a,#0x1E
04A5 C0E0      1489            push    acc
04A7 7405      1490            mov     a,#0x05
04A9 C0E0      1491            push    acc
04AB 743E      1492            mov     a,#0x3E
04AD C0E0      1493            push    acc
04AF 8A82      1494            mov     dpl,r2
04B1 8B83      1495            mov     dph,r3
04B3 8CF0      1496            mov     b,r4
04B5 E8        1497            mov     a,r0
04B6 120100    1498            lcall   ___fssub
04B9 858278    1499            mov     _readADC_sloc1_1_0,dpl
04BC 858379    1500            mov     (_readADC_sloc1_1_0 + 1),dph
04BF 85F07A    1501            mov     (_readADC_sloc1_1_0 + 2),b
04C2 F57B      1502            mov     (_readADC_sloc1_1_0 + 3),a
04C4 E581      1503            mov     a,sp
04C6 24FC      1504            add     a,#0xfc
04C8 F581      1505            mov     sp,a
04CA D007      1506            pop     ar7
04CC D006      1507            pop     ar6
04CE D005      1508            pop     ar5
04D0 852882    1509            mov     dpl,_readADC_sloc0_1_0
04D3 852983    1510            mov     dph,(_readADC_sloc0_1_0 + 1)
04D6 852AF0    1511            mov     b,(_readADC_sloc0_1_0 + 2)
04D9 E578      1512            mov     a,_readADC_sloc1_1_0
04DB 120100    1513            lcall   __gptrput
04DE A3        1514            inc     dptr
04DF E579      1515            mov     a,(_readADC_sloc1_1_0 + 1)
04E1 120100    1516            lcall   __gptrput
04E4 A3        1517            inc     dptr
04E5 E57A      1518            mov     a,(_readADC_sloc1_1_0 + 2)
04E7 120100    1519            lcall   __gptrput
04EA A3        1520            inc     dptr
04EB E57B      1521            mov     a,(_readADC_sloc1_1_0 + 3)
04ED 120100    1522            lcall   __gptrput
04F0           1523   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:340: voltageReadings[1] = (voltageMeasurements[1]/totalMeasurements) - errorConstant;
04F0 7404      1524            mov     a,#0x04
04F2 2528      1525            add     a,_readADC_sloc0_1_0
04F4 F528      1526            mov     _readADC_sloc0_1_0,a
04F6 E4        1527            clr     a
04F7 3529      1528            addc    a,(_readADC_sloc0_1_0 + 1)
04F9 F529      1529            mov     (_readADC_sloc0_1_0 + 1),a
04FB 7404      1530            mov     a,#0x04
04FD 2D        1531            add     a,r5
04FE F5C8      1532            mov     _readADC_sloc2_1_0,a
0500 E4        1533            clr     a
0501 3E        1534            addc    a,r6
0502 F5C9      1535            mov     (_readADC_sloc2_1_0 + 1),a
0504 8FCA      1536            mov     (_readADC_sloc2_1_0 + 2),r7
0506 85C882    1537            mov     dpl,_readADC_sloc2_1_0
0509 85C983    1538            mov     dph,(_readADC_sloc2_1_0 + 1)
050C 85CAF0    1539            mov     b,(_readADC_sloc2_1_0 + 2)
050F 120100    1540            lcall   __gptrget
0512 FB        1541            mov     r3,a
0513 A3        1542            inc     dptr
0514 120100    1543            lcall   __gptrget
0517 F9        1544            mov     r1,a
0518 A3        1545            inc     dptr
0519 120100    1546            lcall   __gptrget
051C FA        1547            mov     r2,a
051D A3        1548            inc     dptr
051E 120100    1549            lcall   __gptrget
0521 FC        1550            mov     r4,a
0522 C005      1551            push    ar5
0524 C006      1552            push    ar6
0526 C007      1553            push    ar7
0528 E4        1554            clr     a
0529 C0E0      1555            push    acc
052B C0E0      1556            push    acc
052D 7496      1557            mov     a,#0x96
052F C0E0      1558            push    acc
0531 7443      1559            mov     a,#0x43
0533 C0E0      1560            push    acc
0535 8B82      1561            mov     dpl,r3
0537 8983      1562            mov     dph,r1
0539 8AF0      1563            mov     b,r2
053B EC        1564            mov     a,r4
053C 120100    1565            lcall   ___fsdiv
053F AA82      1566            mov     r2,dpl
0541 AB83      1567            mov     r3,dph
0543 ACF0      1568            mov     r4,b
0545 F8        1569            mov     r0,a
0546 E581      1570            mov     a,sp
0548 24FC      1571            add     a,#0xfc
054A F581      1572            mov     sp,a
054C 74B8      1573            mov     a,#0xB8
054E C0E0      1574            push    acc
0550 741E      1575            mov     a,#0x1E
0552 C0E0      1576            push    acc
0554 7405      1577            mov     a,#0x05
0556 C0E0      1578            push    acc
0558 743E      1579            mov     a,#0x3E
055A C0E0      1580            push    acc
055C 8A82      1581            mov     dpl,r2
055E 8B83      1582            mov     dph,r3
0560 8CF0      1583            mov     b,r4
0562 E8        1584            mov     a,r0
0563 120100    1585            lcall   ___fssub
0566 AA82      1586            mov     r2,dpl
0568 AB83      1587            mov     r3,dph
056A ACF0      1588            mov     r4,b
056C F8        1589            mov     r0,a
056D E581      1590            mov     a,sp
056F 24FC      1591            add     a,#0xfc
0571 F581      1592            mov     sp,a
0573 852882    1593            mov     dpl,_readADC_sloc0_1_0
0576 852983    1594            mov     dph,(_readADC_sloc0_1_0 + 1)
0579 852AF0    1595            mov     b,(_readADC_sloc0_1_0 + 2)
057C EA        1596            mov     a,r2
057D 120100    1597            lcall   __gptrput
0580 A3        1598            inc     dptr
0581 EB        1599            mov     a,r3
0582 120100    1600            lcall   __gptrput
0585 A3        1601            inc     dptr
0586 EC        1602            mov     a,r4
0587 120100    1603            lcall   __gptrput
058A A3        1604            inc     dptr
058B E8        1605            mov     a,r0
058C 120100    1606            lcall   __gptrput
058F           1607   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:343: printf("V(P1.4)=%4.2fV, V(P0.2)=%4.2fV\r", voltageReadings[0], voltageReadings[1]);
058F C002      1608            push    ar2
0591 C003      1609            push    ar3
0593 C004      1610            push    ar4
0595 C000      1611            push    ar0
0597 C078      1612            push    _readADC_sloc1_1_0
0599 C079      1613            push    (_readADC_sloc1_1_0 + 1)
059B C07A      1614            push    (_readADC_sloc1_1_0 + 2)
059D C07B      1615            push    (_readADC_sloc1_1_0 + 3)
059F 7400      1616            mov     a,#__str_0
05A1 C0E0      1617            push    acc
05A3 74CA      1618            mov     a,#(__str_0 >> 8)
05A5 C0E0      1619            push    acc
05A7 7480      1620            mov     a,#0x80
05A9 C0E0      1621            push    acc
05AB 120100    1622            lcall   _printf
05AE E581      1623            mov     a,sp
05B0 24F5      1624            add     a,#0xf5
05B2 F581      1625            mov     sp,a
05B4 D007      1626            pop     ar7
05B6 D006      1627            pop     ar6
05B8 D005      1628            pop     ar5
05BA           1629   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:346: (*mCount) = 0;
05BA 85D882    1630            mov     dpl,_readADC_mCount_1_70
05BD 85D983    1631            mov     dph,(_readADC_mCount_1_70 + 1)
05C0 85DAF0    1632            mov     b,(_readADC_mCount_1_70 + 2)
05C3 E4        1633            clr     a
05C4 120100    1634            lcall   __gptrput
05C7 A3        1635            inc     dptr
05C8 E4        1636            clr     a
05C9 120100    1637            lcall   __gptrput
05CC           1638   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:347: voltageMeasurements[0] = 0;
05CC 8D82      1639            mov     dpl,r5
05CE 8E83      1640            mov     dph,r6
05D0 8FF0      1641            mov     b,r7
05D2 E4        1642            clr     a
05D3 120100    1643            lcall   __gptrput
05D6 A3        1644            inc     dptr
05D7 E4        1645            clr     a
05D8 120100    1646            lcall   __gptrput
05DB A3        1647            inc     dptr
05DC E4        1648            clr     a
05DD 120100    1649            lcall   __gptrput
05E0 A3        1650            inc     dptr
05E1 E4        1651            clr     a
05E2 120100    1652            lcall   __gptrput
05E5           1653   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:348: voltageMeasurements[1] = 0;
05E5 85C882    1654            mov     dpl,_readADC_sloc2_1_0
05E8 85C983    1655            mov     dph,(_readADC_sloc2_1_0 + 1)
05EB 85CAF0    1656            mov     b,(_readADC_sloc2_1_0 + 2)
05EE E4        1657            clr     a
05EF 120100    1658            lcall   __gptrput
05F2 A3        1659            inc     dptr
05F3 E4        1660            clr     a
05F4 120100    1661            lcall   __gptrput
05F7 A3        1662            inc     dptr
05F8 E4        1663            clr     a
05F9 120100    1664            lcall   __gptrput
05FC A3        1665            inc     dptr
05FD E4        1666            clr     a
05FE 020100    1667            ljmp    __gptrput
0601           1668   ;------------------------------------------------------------
0601           1669   ;Allocation info for local variables in function 'main'
0601           1670   ;------------------------------------------------------------
0601           1671   ;vReadings                 Allocated with name '_main_vReadings_1_75'
0601           1672   ;voltages                  Allocated with name '_main_voltages_1_75'
0601           1673   ;measureCount              Allocated with name '_main_measureCount_1_75'
0601           1674   ;direction                 Allocated to registers 
0601           1675   ;stepsInterruptCounter     Allocated to registers r2 r3 
0601           1676   ;stepsTotalInterrupts      Allocated to registers 
0601           1677   ;readingADCCounter         Allocated to registers r4 r5 
0601           1678   ;readingADCTotalInterrupts Allocated to registers 
0601           1679   ;------------------------------------------------------------
0601           1680   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:353: void main (void) 
0601           1681   ;        -----------------------------------------
0601           1682   ;         function main
0601           1683   ;        -----------------------------------------
0601           1684   _main:
0601           1685   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:361: int measureCount = 0;
0601           1686   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:367: int stepsInterruptCounter = 0;
0601           1687   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:371: int readingADCCounter = 0;
0601 E4        1688            clr a
0602 F5B8      1689            mov _main_measureCount_1_75,a
0604 F5B9      1690            mov (_main_measureCount_1_75 + 1),a
0606 FA        1691            mov r2,a
0607 FB        1692            mov r3,a
0608 FC        1693            mov r4,a
0609 FD        1694            mov r5,a
060A           1695   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:374: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
060A C002      1696            push    ar2
060C C003      1697            push    ar3
060E C004      1698            push    ar4
0610 C005      1699            push    ar5
0612 7480      1700            mov     a,#__str_1
0614 C0E0      1701            push    acc
0616 74CA      1702            mov     a,#(__str_1 >> 8)
0618 C0E0      1703            push    acc
061A 7480      1704            mov     a,#0x80
061C C0E0      1705            push    acc
061E 120100    1706            lcall   _printf
0621 1581      1707            dec     sp
0623 1581      1708            dec     sp
0625 1581      1709            dec     sp
0627           1710   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:376: ConfigurePins();
0627 120100    1711            lcall   _ConfigurePins
062A           1712   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:378: ConfigPCA0();
062A 120100    1713            lcall   _ConfigPCA0
062D           1714   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:380: InitADC();
062D 120100    1715            lcall   _InitADC
0630 D005      1716            pop     ar5
0632 D004      1717            pop     ar4
0634 D003      1718            pop     ar3
0636 D002      1719            pop     ar2
0638           1720   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:384: while(1) //Main loop of the program begins here
0638           1721   L014010?:
0638           1722   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:389: if(stepFlag == 1)
0638 7401      1723            mov     a,#0x01
063A B5D8C0    1724            cjne    a,_stepFlag,L014010?
063D           1725   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:392: stepFlag = 0;
063D 75D800    1726            mov     _stepFlag,#0x00
0640           1727   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:395: if(stepsInterruptCounter < stepsTotalInterrupts)
0640 C3        1728            clr     c
0641 EA        1729            mov     a,r2
0642 9414      1730            subb    a,#0x14
0644 EB        1731            mov     a,r3
0645 6480      1732            xrl     a,#0x80
0647 9480      1733            subb    a,#0x80
0649 5001      1734            jnc     L014002?
064B           1735   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:396: stepsInterruptCounter++;
064B 0A        1736            inc     r2
064C BA0040    1737            cjne    r2,#0x00,L014003?
064F 0B        1738            inc     r3
0650 8001      1739            sjmp    L014003?
0652           1740   L014002?:
0652           1741   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:399: takeStep(direction);
0652 900001    1742            mov     dptr,#0x0001
0655 C004      1743            push    ar4
0657 C005      1744            push    ar5
0659 120100    1745            lcall   _takeStep
065C D005      1746            pop     ar5
065E D004      1747            pop     ar4
0660           1748   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:404: stepsInterruptCounter = 0;
0660 7A00      1749            mov     r2,#0x00
0662 7B00      1750            mov     r3,#0x00
0664           1751   L014003?:
0664           1752   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:408: if(readingADCCounter < readingADCTotalInterrupts)
0664 C3        1753            clr     c
0665 EC        1754            mov     a,r4
0666 9408      1755            subb    a,#0x08
0668 ED        1756            mov     a,r5
0669 6480      1757            xrl     a,#0x80
066B 9480      1758            subb    a,#0x80
066D 5001      1759            jnc     L014005?
066F           1760   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:409: readingADCCounter++;
066F 0C        1761            inc     r4
0670 BC00C0    1762            cjne    r4,#0x00,L014010?
0673 0D        1763            inc     r5
0674 8001      1764            sjmp    L014010?
0676           1765   L014005?:
0676           1766   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:412: readADC(&measureCount, voltages, vReadings);
0676 75D868    1767            mov     _readADC_PARM_2,#_main_voltages_1_75
0679 75D900    1768            mov     (_readADC_PARM_2 + 1),#0x00
067C 75DA40    1769            mov     (_readADC_PARM_2 + 2),#0x40
067F 759818    1770            mov     _readADC_PARM_3,#_main_vReadings_1_75
0682 759900    1771            mov     (_readADC_PARM_3 + 1),#0x00
0685 759A40    1772            mov     (_readADC_PARM_3 + 2),#0x40
0688 90BBB8    1773            mov     dptr,#_main_measureCount_1_75
068B 75F040    1774            mov     b,#0x40
068E C002      1775            push    ar2
0690 C003      1776            push    ar3
0692 120100    1777            lcall   _readADC
0695 D003      1778            pop     ar3
0697 D002      1779            pop     ar2
0699           1780   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:415: readingADCCounter = 0;
0699 7C00      1781            mov     r4,#0x00
069B 7D00      1782            mov     r5,#0x00
069D 8001      1783            sjmp    L014010?
069F           1784            rseg R_CSEG
069F           1785   
0000           1786            rseg R_XINIT
0000           1787   
0000           1788            rseg R_CONST
0000           1789   __str_0:
0000 56285031  1790            db 'V(P1.4)=%4.2fV, V(P0.2)=%4.2fV'
     2E34293D
     25342E32
     66562C20
     56285030
     2E32293D
     25342E32
     6656
001E 0D        1791            db 0x0D
001F 00        1792            db 0x00
0020           1793   __str_1:
0020 1B        1794            db 0x1B
0021 5B324A    1795            db '[2J'
0024 00        1796            db 0x00
0025           1797   
002E           1798            CSEG
002E           1799   
002E           1800   end
