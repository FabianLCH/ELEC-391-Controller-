0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Mon Mar 04 16:30:00 2019
0000              5   ;--------------------------------------------------------
                  5   $name PCA
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _ConfigurePins
0000             29            public _ConfigPCA0
0000             30            public _Volts_at_Pin
0000             31            public _ADC_at_Pin
0000             32            public _InitADC
0000             33            public _getsn
0000             34            public _Timer3_ISR
0000             35            public _Timer2_ISR
0000             36            public __c51_external_startup
0000             37            public _getsn_PARM_2
0000             38            public _totalSteps
0000             39            public _interruptCount
0000             40            public _stepCount
0000             41            public _direction
0000             42            public _adcFlag
0000             43   ;--------------------------------------------------------
0000             44   ; Special Function Registers
0000             45   ;--------------------------------------------------------
0000             46   _ACC            DATA 0xe0
0000             47   _ADC0ASAH       DATA 0xb6
0000             48   _ADC0ASAL       DATA 0xb5
0000             49   _ADC0ASCF       DATA 0xa1
0000             50   _ADC0ASCT       DATA 0xc7
0000             51   _ADC0CF0        DATA 0xbc
0000             52   _ADC0CF1        DATA 0xb9
0000             53   _ADC0CF2        DATA 0xdf
0000             54   _ADC0CN0        DATA 0xe8
0000             55   _ADC0CN1        DATA 0xb2
0000             56   _ADC0CN2        DATA 0xb3
0000             57   _ADC0GTH        DATA 0xc4
0000             58   _ADC0GTL        DATA 0xc3
0000             59   _ADC0H          DATA 0xbe
0000             60   _ADC0L          DATA 0xbd
0000             61   _ADC0LTH        DATA 0xc6
0000             62   _ADC0LTL        DATA 0xc5
0000             63   _ADC0MX         DATA 0xbb
0000             64   _B              DATA 0xf0
0000             65   _CKCON0         DATA 0x8e
0000             66   _CKCON1         DATA 0xa6
0000             67   _CLEN0          DATA 0xc6
0000             68   _CLIE0          DATA 0xc7
0000             69   _CLIF0          DATA 0xe8
0000             70   _CLKSEL         DATA 0xa9
0000             71   _CLOUT0         DATA 0xd1
0000             72   _CLU0CF         DATA 0xb1
0000             73   _CLU0FN         DATA 0xaf
0000             74   _CLU0MX         DATA 0x84
0000             75   _CLU1CF         DATA 0xb3
0000             76   _CLU1FN         DATA 0xb2
0000             77   _CLU1MX         DATA 0x85
0000             78   _CLU2CF         DATA 0xb6
0000             79   _CLU2FN         DATA 0xb5
0000             80   _CLU2MX         DATA 0x91
0000             81   _CLU3CF         DATA 0xbf
0000             82   _CLU3FN         DATA 0xbe
0000             83   _CLU3MX         DATA 0xae
0000             84   _CMP0CN0        DATA 0x9b
0000             85   _CMP0CN1        DATA 0x99
0000             86   _CMP0MD         DATA 0x9d
0000             87   _CMP0MX         DATA 0x9f
0000             88   _CMP1CN0        DATA 0xbf
0000             89   _CMP1CN1        DATA 0xac
0000             90   _CMP1MD         DATA 0xab
0000             91   _CMP1MX         DATA 0xaa
0000             92   _CRC0CN0        DATA 0xce
0000             93   _CRC0CN1        DATA 0x86
0000             94   _CRC0CNT        DATA 0xd3
0000             95   _CRC0DAT        DATA 0xcb
0000             96   _CRC0FLIP       DATA 0xcf
0000             97   _CRC0IN         DATA 0xca
0000             98   _CRC0ST         DATA 0xd2
0000             99   _DAC0CF0        DATA 0x91
0000            100   _DAC0CF1        DATA 0x92
0000            101   _DAC0H          DATA 0x85
0000            102   _DAC0L          DATA 0x84
0000            103   _DAC1CF0        DATA 0x93
0000            104   _DAC1CF1        DATA 0x94
0000            105   _DAC1H          DATA 0x8a
0000            106   _DAC1L          DATA 0x89
0000            107   _DAC2CF0        DATA 0x95
0000            108   _DAC2CF1        DATA 0x96
0000            109   _DAC2H          DATA 0x8c
0000            110   _DAC2L          DATA 0x8b
0000            111   _DAC3CF0        DATA 0x9a
0000            112   _DAC3CF1        DATA 0x9c
0000            113   _DAC3H          DATA 0x8e
0000            114   _DAC3L          DATA 0x8d
0000            115   _DACGCF0        DATA 0x88
0000            116   _DACGCF1        DATA 0x98
0000            117   _DACGCF2        DATA 0xa2
0000            118   _DERIVID        DATA 0xad
0000            119   _DEVICEID       DATA 0xb5
0000            120   _DPH            DATA 0x83
0000            121   _DPL            DATA 0x82
0000            122   _EIE1           DATA 0xe6
0000            123   _EIE2           DATA 0xf3
0000            124   _EIP1           DATA 0xbb
0000            125   _EIP1H          DATA 0xee
0000            126   _EIP2           DATA 0xed
0000            127   _EIP2H          DATA 0xf6
0000            128   _EMI0CN         DATA 0xe7
0000            129   _FLKEY          DATA 0xb7
0000            130   _HFO0CAL        DATA 0xc7
0000            131   _HFO1CAL        DATA 0xd6
0000            132   _HFOCN          DATA 0xef
0000            133   _I2C0ADM        DATA 0xff
0000            134   _I2C0CN0        DATA 0xba
0000            135   _I2C0DIN        DATA 0xbc
0000            136   _I2C0DOUT       DATA 0xbb
0000            137   _I2C0FCN0       DATA 0xad
0000            138   _I2C0FCN1       DATA 0xab
0000            139   _I2C0FCT        DATA 0xf5
0000            140   _I2C0SLAD       DATA 0xbd
0000            141   _I2C0STAT       DATA 0xb9
0000            142   _IE             DATA 0xa8
0000            143   _IP             DATA 0xb8
0000            144   _IPH            DATA 0xf2
0000            145   _IT01CF         DATA 0xe4
0000            146   _LFO0CN         DATA 0xb1
0000            147   _P0             DATA 0x80
0000            148   _P0MASK         DATA 0xfe
0000            149   _P0MAT          DATA 0xfd
0000            150   _P0MDIN         DATA 0xf1
0000            151   _P0MDOUT        DATA 0xa4
0000            152   _P0SKIP         DATA 0xd4
0000            153   _P1             DATA 0x90
0000            154   _P1MASK         DATA 0xee
0000            155   _P1MAT          DATA 0xed
0000            156   _P1MDIN         DATA 0xf2
0000            157   _P1MDOUT        DATA 0xa5
0000            158   _P1SKIP         DATA 0xd5
0000            159   _P2             DATA 0xa0
0000            160   _P2MASK         DATA 0xfc
0000            161   _P2MAT          DATA 0xfb
0000            162   _P2MDIN         DATA 0xf3
0000            163   _P2MDOUT        DATA 0xa6
0000            164   _P2SKIP         DATA 0xcc
0000            165   _P3             DATA 0xb0
0000            166   _P3MDIN         DATA 0xf4
0000            167   _P3MDOUT        DATA 0x9c
0000            168   _PCA0CENT       DATA 0x9e
0000            169   _PCA0CLR        DATA 0x9c
0000            170   _PCA0CN0        DATA 0xd8
0000            171   _PCA0CPH0       DATA 0xfc
0000            172   _PCA0CPH1       DATA 0xea
0000            173   _PCA0CPH2       DATA 0xec
0000            174   _PCA0CPH3       DATA 0xf5
0000            175   _PCA0CPH4       DATA 0x85
0000            176   _PCA0CPH5       DATA 0xde
0000            177   _PCA0CPL0       DATA 0xfb
0000            178   _PCA0CPL1       DATA 0xe9
0000            179   _PCA0CPL2       DATA 0xeb
0000            180   _PCA0CPL3       DATA 0xf4
0000            181   _PCA0CPL4       DATA 0x84
0000            182   _PCA0CPL5       DATA 0xdd
0000            183   _PCA0CPM0       DATA 0xda
0000            184   _PCA0CPM1       DATA 0xdb
0000            185   _PCA0CPM2       DATA 0xdc
0000            186   _PCA0CPM3       DATA 0xae
0000            187   _PCA0CPM4       DATA 0xaf
0000            188   _PCA0CPM5       DATA 0xcc
0000            189   _PCA0H          DATA 0xfa
0000            190   _PCA0L          DATA 0xf9
0000            191   _PCA0MD         DATA 0xd9
0000            192   _PCA0POL        DATA 0x96
0000            193   _PCA0PWM        DATA 0xf7
0000            194   _PCON0          DATA 0x87
0000            195   _PCON1          DATA 0xcd
0000            196   _PFE0CN         DATA 0xc1
0000            197   _PRTDRV         DATA 0xf6
0000            198   _PSCTL          DATA 0x8f
0000            199   _PSTAT0         DATA 0xaa
0000            200   _PSW            DATA 0xd0
0000            201   _REF0CN         DATA 0xd1
0000            202   _REG0CN         DATA 0xc9
0000            203   _REVID          DATA 0xb6
0000            204   _RSTSRC         DATA 0xef
0000            205   _SBCON1         DATA 0x94
0000            206   _SBRLH1         DATA 0x96
0000            207   _SBRLL1         DATA 0x95
0000            208   _SBUF           DATA 0x99
0000            209   _SBUF0          DATA 0x99
0000            210   _SBUF1          DATA 0x92
0000            211   _SCON           DATA 0x98
0000            212   _SCON0          DATA 0x98
0000            213   _SCON1          DATA 0xc8
0000            214   _SFRPAGE        DATA 0xa7
0000            215   _SFRPGCN        DATA 0xbc
0000            216   _SFRSTACK       DATA 0xd7
0000            217   _SMB0ADM        DATA 0xd6
0000            218   _SMB0ADR        DATA 0xd7
0000            219   _SMB0CF         DATA 0xc1
0000            220   _SMB0CN0        DATA 0xc0
0000            221   _SMB0DAT        DATA 0xc2
0000            222   _SMB0FCN0       DATA 0xc3
0000            223   _SMB0FCN1       DATA 0xc4
0000            224   _SMB0FCT        DATA 0xef
0000            225   _SMB0RXLN       DATA 0xc5
0000            226   _SMB0TC         DATA 0xac
0000            227   _SMOD1          DATA 0x93
0000            228   _SP             DATA 0x81
0000            229   _SPI0CFG        DATA 0xa1
0000            230   _SPI0CKR        DATA 0xa2
0000            231   _SPI0CN0        DATA 0xf8
0000            232   _SPI0DAT        DATA 0xa3
0000            233   _SPI0FCN0       DATA 0x9a
0000            234   _SPI0FCN1       DATA 0x9b
0000            235   _SPI0FCT        DATA 0xf7
0000            236   _SPI0PCF        DATA 0xdf
0000            237   _TCON           DATA 0x88
0000            238   _TH0            DATA 0x8c
0000            239   _TH1            DATA 0x8d
0000            240   _TL0            DATA 0x8a
0000            241   _TL1            DATA 0x8b
0000            242   _TMOD           DATA 0x89
0000            243   _TMR2CN0        DATA 0xc8
0000            244   _TMR2CN1        DATA 0xfd
0000            245   _TMR2H          DATA 0xcf
0000            246   _TMR2L          DATA 0xce
0000            247   _TMR2RLH        DATA 0xcb
0000            248   _TMR2RLL        DATA 0xca
0000            249   _TMR3CN0        DATA 0x91
0000            250   _TMR3CN1        DATA 0xfe
0000            251   _TMR3H          DATA 0x95
0000            252   _TMR3L          DATA 0x94
0000            253   _TMR3RLH        DATA 0x93
0000            254   _TMR3RLL        DATA 0x92
0000            255   _TMR4CN0        DATA 0x98
0000            256   _TMR4CN1        DATA 0xff
0000            257   _TMR4H          DATA 0xa5
0000            258   _TMR4L          DATA 0xa4
0000            259   _TMR4RLH        DATA 0xa3
0000            260   _TMR4RLL        DATA 0xa2
0000            261   _TMR5CN0        DATA 0xc0
0000            262   _TMR5CN1        DATA 0xf1
0000            263   _TMR5H          DATA 0xd5
0000            264   _TMR5L          DATA 0xd4
0000            265   _TMR5RLH        DATA 0xd3
0000            266   _TMR5RLL        DATA 0xd2
0000            267   _UART0PCF       DATA 0xd9
0000            268   _UART1FCN0      DATA 0x9d
0000            269   _UART1FCN1      DATA 0xd8
0000            270   _UART1FCT       DATA 0xfa
0000            271   _UART1LIN       DATA 0x9e
0000            272   _UART1PCF       DATA 0xda
0000            273   _VDM0CN         DATA 0xff
0000            274   _WDTCN          DATA 0x97
0000            275   _XBR0           DATA 0xe1
0000            276   _XBR1           DATA 0xe2
0000            277   _XBR2           DATA 0xe3
0000            278   _XOSC0CN        DATA 0x86
0000            279   _DPTR           DATA 0x8382
0000            280   _TMR2RL         DATA 0xcbca
0000            281   _TMR3RL         DATA 0x9392
0000            282   _TMR4RL         DATA 0xa3a2
0000            283   _TMR5RL         DATA 0xd3d2
0000            284   _TMR0           DATA 0x8c8a
0000            285   _TMR1           DATA 0x8d8b
0000            286   _TMR2           DATA 0xcfce
0000            287   _TMR3           DATA 0x9594
0000            288   _TMR4           DATA 0xa5a4
0000            289   _TMR5           DATA 0xd5d4
0000            290   _SBRL1          DATA 0x9695
0000            291   _PCA0           DATA 0xfaf9
0000            292   _PCA0CP0        DATA 0xfcfb
0000            293   _PCA0CP1        DATA 0xeae9
0000            294   _PCA0CP2        DATA 0xeceb
0000            295   _PCA0CP3        DATA 0xf5f4
0000            296   _PCA0CP4        DATA 0x8584
0000            297   _PCA0CP5        DATA 0xdedd
0000            298   _ADC0ASA        DATA 0xb6b5
0000            299   _ADC0GT         DATA 0xc4c3
0000            300   _ADC0           DATA 0xbebd
0000            301   _ADC0LT         DATA 0xc6c5
0000            302   _DAC0           DATA 0x8584
0000            303   _DAC1           DATA 0x8a89
0000            304   _DAC2           DATA 0x8c8b
0000            305   _DAC3           DATA 0x8e8d
0000            306   ;--------------------------------------------------------
0000            307   ; special function bits
0000            308   ;--------------------------------------------------------
0000            309   _ACC_0          BIT 0xe0
0000            310   _ACC_1          BIT 0xe1
0000            311   _ACC_2          BIT 0xe2
0000            312   _ACC_3          BIT 0xe3
0000            313   _ACC_4          BIT 0xe4
0000            314   _ACC_5          BIT 0xe5
0000            315   _ACC_6          BIT 0xe6
0000            316   _ACC_7          BIT 0xe7
0000            317   _TEMPE          BIT 0xe8
0000            318   _ADGN0          BIT 0xe9
0000            319   _ADGN1          BIT 0xea
0000            320   _ADWINT         BIT 0xeb
0000            321   _ADBUSY         BIT 0xec
0000            322   _ADINT          BIT 0xed
0000            323   _IPOEN          BIT 0xee
0000            324   _ADEN           BIT 0xef
0000            325   _B_0            BIT 0xf0
0000            326   _B_1            BIT 0xf1
0000            327   _B_2            BIT 0xf2
0000            328   _B_3            BIT 0xf3
0000            329   _B_4            BIT 0xf4
0000            330   _B_5            BIT 0xf5
0000            331   _B_6            BIT 0xf6
0000            332   _B_7            BIT 0xf7
0000            333   _C0FIF          BIT 0xe8
0000            334   _C0RIF          BIT 0xe9
0000            335   _C1FIF          BIT 0xea
0000            336   _C1RIF          BIT 0xeb
0000            337   _C2FIF          BIT 0xec
0000            338   _C2RIF          BIT 0xed
0000            339   _C3FIF          BIT 0xee
0000            340   _C3RIF          BIT 0xef
0000            341   _D1SRC0         BIT 0x88
0000            342   _D1SRC1         BIT 0x89
0000            343   _D1AMEN         BIT 0x8a
0000            344   _D01REFSL       BIT 0x8b
0000            345   _D3SRC0         BIT 0x8c
0000            346   _D3SRC1         BIT 0x8d
0000            347   _D3AMEN         BIT 0x8e
0000            348   _D23REFSL       BIT 0x8f
0000            349   _D0UDIS         BIT 0x98
0000            350   _D1UDIS         BIT 0x99
0000            351   _D2UDIS         BIT 0x9a
0000            352   _D3UDIS         BIT 0x9b
0000            353   _EX0            BIT 0xa8
0000            354   _ET0            BIT 0xa9
0000            355   _EX1            BIT 0xaa
0000            356   _ET1            BIT 0xab
0000            357   _ES0            BIT 0xac
0000            358   _ET2            BIT 0xad
0000            359   _ESPI0          BIT 0xae
0000            360   _EA             BIT 0xaf
0000            361   _PX0            BIT 0xb8
0000            362   _PT0            BIT 0xb9
0000            363   _PX1            BIT 0xba
0000            364   _PT1            BIT 0xbb
0000            365   _PS0            BIT 0xbc
0000            366   _PT2            BIT 0xbd
0000            367   _PSPI0          BIT 0xbe
0000            368   _P0_0           BIT 0x80
0000            369   _P0_1           BIT 0x81
0000            370   _P0_2           BIT 0x82
0000            371   _P0_3           BIT 0x83
0000            372   _P0_4           BIT 0x84
0000            373   _P0_5           BIT 0x85
0000            374   _P0_6           BIT 0x86
0000            375   _P0_7           BIT 0x87
0000            376   _P1_0           BIT 0x90
0000            377   _P1_1           BIT 0x91
0000            378   _P1_2           BIT 0x92
0000            379   _P1_3           BIT 0x93
0000            380   _P1_4           BIT 0x94
0000            381   _P1_5           BIT 0x95
0000            382   _P1_6           BIT 0x96
0000            383   _P1_7           BIT 0x97
0000            384   _P2_0           BIT 0xa0
0000            385   _P2_1           BIT 0xa1
0000            386   _P2_2           BIT 0xa2
0000            387   _P2_3           BIT 0xa3
0000            388   _P2_4           BIT 0xa4
0000            389   _P2_5           BIT 0xa5
0000            390   _P2_6           BIT 0xa6
0000            391   _P3_0           BIT 0xb0
0000            392   _P3_1           BIT 0xb1
0000            393   _P3_2           BIT 0xb2
0000            394   _P3_3           BIT 0xb3
0000            395   _P3_4           BIT 0xb4
0000            396   _P3_7           BIT 0xb7
0000            397   _CCF0           BIT 0xd8
0000            398   _CCF1           BIT 0xd9
0000            399   _CCF2           BIT 0xda
0000            400   _CCF3           BIT 0xdb
0000            401   _CCF4           BIT 0xdc
0000            402   _CCF5           BIT 0xdd
0000            403   _CR             BIT 0xde
0000            404   _CF             BIT 0xdf
0000            405   _PARITY         BIT 0xd0
0000            406   _F1             BIT 0xd1
0000            407   _OV             BIT 0xd2
0000            408   _RS0            BIT 0xd3
0000            409   _RS1            BIT 0xd4
0000            410   _F0             BIT 0xd5
0000            411   _AC             BIT 0xd6
0000            412   _CY             BIT 0xd7
0000            413   _RI             BIT 0x98
0000            414   _TI             BIT 0x99
0000            415   _RB8            BIT 0x9a
0000            416   _TB8            BIT 0x9b
0000            417   _REN            BIT 0x9c
0000            418   _CE             BIT 0x9d
0000            419   _SMODE          BIT 0x9e
0000            420   _RI1            BIT 0xc8
0000            421   _TI1            BIT 0xc9
0000            422   _RBX1           BIT 0xca
0000            423   _TBX1           BIT 0xcb
0000            424   _REN1           BIT 0xcc
0000            425   _PERR1          BIT 0xcd
0000            426   _OVR1           BIT 0xce
0000            427   _SI             BIT 0xc0
0000            428   _ACK            BIT 0xc1
0000            429   _ARBLOST        BIT 0xc2
0000            430   _ACKRQ          BIT 0xc3
0000            431   _STO            BIT 0xc4
0000            432   _STA            BIT 0xc5
0000            433   _TXMODE         BIT 0xc6
0000            434   _MASTER         BIT 0xc7
0000            435   _SPIEN          BIT 0xf8
0000            436   _TXNF           BIT 0xf9
0000            437   _NSSMD0         BIT 0xfa
0000            438   _NSSMD1         BIT 0xfb
0000            439   _RXOVRN         BIT 0xfc
0000            440   _MODF           BIT 0xfd
0000            441   _WCOL           BIT 0xfe
0000            442   _SPIF           BIT 0xff
0000            443   _IT0            BIT 0x88
0000            444   _IE0            BIT 0x89
0000            445   _IT1            BIT 0x8a
0000            446   _IE1            BIT 0x8b
0000            447   _TR0            BIT 0x8c
0000            448   _TF0            BIT 0x8d
0000            449   _TR1            BIT 0x8e
0000            450   _TF1            BIT 0x8f
0000            451   _T2XCLK0        BIT 0xc8
0000            452   _T2XCLK1        BIT 0xc9
0000            453   _TR2            BIT 0xca
0000            454   _T2SPLIT        BIT 0xcb
0000            455   _TF2CEN         BIT 0xcc
0000            456   _TF2LEN         BIT 0xcd
0000            457   _TF2L           BIT 0xce
0000            458   _TF2H           BIT 0xcf
0000            459   _T4XCLK0        BIT 0x98
0000            460   _T4XCLK1        BIT 0x99
0000            461   _TR4            BIT 0x9a
0000            462   _T4SPLIT        BIT 0x9b
0000            463   _TF4CEN         BIT 0x9c
0000            464   _TF4LEN         BIT 0x9d
0000            465   _TF4L           BIT 0x9e
0000            466   _TF4H           BIT 0x9f
0000            467   _T5XCLK0        BIT 0xc0
0000            468   _T5XCLK1        BIT 0xc1
0000            469   _TR5            BIT 0xc2
0000            470   _T5SPLIT        BIT 0xc3
0000            471   _TF5CEN         BIT 0xc4
0000            472   _TF5LEN         BIT 0xc5
0000            473   _TF5L           BIT 0xc6
0000            474   _TF5H           BIT 0xc7
0000            475   _RIE            BIT 0xd8
0000            476   _RXTO0          BIT 0xd9
0000            477   _RXTO1          BIT 0xda
0000            478   _RFRQ           BIT 0xdb
0000            479   _TIE            BIT 0xdc
0000            480   _TXHOLD         BIT 0xdd
0000            481   _TXNF1          BIT 0xde
0000            482   _TFRQ           BIT 0xdf
0000            483   ;--------------------------------------------------------
0000            484   ; overlayable register banks
0000            485   ;--------------------------------------------------------
0000            486            rbank0 segment data overlay
0000            487   ;--------------------------------------------------------
0000            488   ; internal ram data
0000            489   ;--------------------------------------------------------
0000            490            rseg R_DSEG
0000            491   _adcFlag:
0000            492            ds 1
0001            493   _direction:
0001            494            ds 1
0002            495   _stepCount:
0002            496            ds 1
0003            497   _interruptCount:
0003            498            ds 1
0004            499   _totalSteps:
0004            500            ds 2
0006            501   _getsn_PARM_2:
0006            502            ds 2
0008            503   _getsn_buff_1_59:
0008            504            ds 3
000B            505   _getsn_sloc0_1_0:
000B            506            ds 2
000D            507   _main_vReadings_1_73:
000D            508            ds 8
0015            509   _main_voltages_1_73:
0015            510            ds 8
001D            511   _main_measureCount_1_73:
001D            512            ds 2
001F            513   _main_sloc0_1_0:
001F            514            ds 4
0023            515   ;--------------------------------------------------------
0023            516   ; overlayable items in internal ram 
0023            517   ;--------------------------------------------------------
0000            518            rseg    R_OSEG
0000            519   ;--------------------------------------------------------
0000            520   ; indirectly addressable internal ram data
0000            521   ;--------------------------------------------------------
0000            522            rseg R_ISEG
0000            523   ;--------------------------------------------------------
0000            524   ; absolute internal ram data
0000            525   ;--------------------------------------------------------
0000            526            DSEG
0000            527   ;--------------------------------------------------------
0000            528   ; bit data
0000            529   ;--------------------------------------------------------
0000            530            rseg R_BSEG
0000            531   ;--------------------------------------------------------
0000            532   ; paged external ram data
0000            533   ;--------------------------------------------------------
0000            534            rseg R_PSEG
0000            535   ;--------------------------------------------------------
0000            536   ; external ram data
0000            537   ;--------------------------------------------------------
0000            538            rseg R_XSEG
0000            539   ;--------------------------------------------------------
0000            540   ; absolute external ram data
0000            541   ;--------------------------------------------------------
0000            542            XSEG
0000            543   ;--------------------------------------------------------
0000            544   ; external initialized ram data
0000            545   ;--------------------------------------------------------
0000            546            rseg R_IXSEG
0000            547            rseg R_HOME
0000            548            rseg R_GSINIT
0000            549            rseg R_CSEG
0000            550   ;--------------------------------------------------------
0000            551   ; Reset entry point and interrupt vectors
0000            552   ;--------------------------------------------------------
0000            553            CSEG at 0x0000
0000 020100     554            ljmp    _crt0
002B            555            CSEG at 0x002b
002B 020100     556            ljmp    _Timer2_ISR
0073            557            CSEG at 0x0073
0073 020100     558            ljmp    _Timer3_ISR
0076            559   ;--------------------------------------------------------
0076            560   ; global & static initialisations
0076            561   ;--------------------------------------------------------
0000            562            rseg R_HOME
0000            563            rseg R_GSINIT
0000            564            rseg R_GSINIT
0000            565   ;--------------------------------------------------------
0000            566   ; data variables initialization
0000            567   ;--------------------------------------------------------
0000            568            rseg R_DINIT
0000            569   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:35: volatile unsigned char adcFlag = 1;
0000 751801     570            mov     _adcFlag,#0x01
0003            571   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:36: volatile unsigned char direction = 1;
0003 75D801     572            mov     _direction,#0x01
0006            573   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:38: volatile unsigned char stepCount = 0;
0006 759800     574            mov     _stepCount,#0x00
0009            575   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:39: volatile unsigned char interruptCount = 0;
0009 755800     576            mov     _interruptCount,#0x00
000C            577   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:41: int totalSteps = 0;
000C E4         578            clr     a
000D F518       579            mov     _totalSteps,a
000F F519       580            mov     (_totalSteps + 1),a
0011            581            ; The linker places a 'ret' at the end of segment R_DINIT.
0011            582   ;--------------------------------------------------------
0011            583   ; code
0011            584   ;--------------------------------------------------------
0000            585            rseg R_CSEG
0000            586   ;------------------------------------------------------------
0000            587   ;Allocation info for local variables in function '_c51_external_startup'
0000            588   ;------------------------------------------------------------
0000            589   ;------------------------------------------------------------
0000            590   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:43: char _c51_external_startup (void)
0000            591   ;        -----------------------------------------
0000            592   ;         function _c51_external_startup
0000            593   ;        -----------------------------------------
0000            594   __c51_external_startup:
0000            595            using   0
0000            596   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:46: SFRPAGE = 0x00;
0000 75A700     597            mov     _SFRPAGE,#0x00
0003            598   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:47: WDTCN = 0xDE; //First key
0003 7597DE     599            mov     _WDTCN,#0xDE
0006            600   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:48: WDTCN = 0xAD; //Second key
0006 7597AD     601            mov     _WDTCN,#0xAD
0009            602   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:50: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     603            mov     _VDM0CN,#0x80
000C            604   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:51: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     605            mov     _RSTSRC,#0x06
000F            606   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:58: SFRPAGE = 0x10;
000F 75A710     607            mov     _SFRPAGE,#0x10
0012            608   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:59: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     609            mov     _PFE0CN,#0x20
0015            610   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:60: SFRPAGE = 0x00;
0015 75A700     611            mov     _SFRPAGE,#0x00
0018            612   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:81: CLKSEL = 0x00;
0018 75A900     613            mov     _CLKSEL,#0x00
001B            614   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:82: CLKSEL = 0x00;
001B 75A900     615            mov     _CLKSEL,#0x00
001E            616   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:83: while ((CLKSEL & 0x80) == 0);
001E            617   L002001?:
001E E5A9       618            mov     a,_CLKSEL
0020 30E778     619            jnb     acc.7,L002001?
0023            620   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:84: CLKSEL = 0x03;
0023 75A903     621            mov     _CLKSEL,#0x03
0026            622   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:85: CLKSEL = 0x03;
0026 75A903     623            mov     _CLKSEL,#0x03
0029            624   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:86: while ((CLKSEL & 0x80) == 0);
0029            625   L002004?:
0029 E5A9       626            mov     a,_CLKSEL
002B 30E7F8     627            jnb     acc.7,L002004?
002E            628   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:91: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     629            orl     _P0MDOUT,#0x10
0031            630   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:94: XBR0     = 0x03; // Enable SPI0 and UART0 on P0.4(TX) and P0.5(RX)  
0031 75E103     631            mov     _XBR0,#0x03
0034            632   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:96: XBR1     = 0X01; //Enable PCA I/O and route CEX0 only (check reference manual page 120)
0034 75E201     633            mov     _XBR1,#0x01
0037            634   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:98: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     635            mov     _XBR2,#0x40
003A            636   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:104: SCON0 = 0x10;
003A 759810     637            mov     _SCON0,#0x10
003D            638   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:105: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     639            mov     _TH1,#0xE6
0040            640   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:106: TL1 = TH1;      // Init Timer1
0040 858D8B     641            mov     _TL1,_TH1
0043            642   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:107: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     643            anl     _TMOD,#0x0F
0046            644   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:108: TMOD |=  0x20;                       
0046 438920     645            orl     _TMOD,#0x20
0049            646   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:109: TR1 = 1; // START Timer1
0049 D28E       647            setb    _TR1
004B            648   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:110: TI = 1;  // Indicate TX0 ready
004B D299       649            setb    _TI
004D            650   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:113: SPI0CKR = (SYSCLK/(2*F_SCK_MAX))-1;
004D 75A211     651            mov     _SPI0CKR,#0x11
0050            652   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:114: SPI0CFG = 0b_0110_0000; //SPI in master mode (CKPHA = 1, CKPOL = 0)
0050 75A160     653            mov     _SPI0CFG,#0x60
0053            654   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:115: SPI0CN0 = 0b_0000_1001; //SPI enabled and in 4 wire master logic low mode
0053 75F809     655            mov     _SPI0CN0,#0x09
0056            656   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:118: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
0056 75C800     657            mov     _TMR2CN0,#0x00
0059            658   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:119: CKCON0|=0b_0001_0000; // Timer 2 uses the system clock
0059 438E10     659            orl     _CKCON0,#0x10
005C            660   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:120: TMR2RL=(0x10000L-(SYSCLK/(2*TIMER_2_FREQ))); // Initialize reload value
005C 75CA60     661            mov     _TMR2RL,#0x60
005F 75CB73     662            mov     (_TMR2RL >> 8),#0x73
0062            663   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:121: TMR2=0xffff;   // Set to reload immediately
0062 75CEFF     664            mov     _TMR2,#0xFF
0065 75CFFF     665            mov     (_TMR2 >> 8),#0xFF
0068            666   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:122: ET2=1;         // Enable Timer2 interrupts
0068 D2AD       667            setb    _ET2
006A            668   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:123: TR2=1;         // Start Timer2 (TMR2CN is bit addressable)
006A D2CA       669            setb    _TR2
006C            670   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:126: TMR3CN0=0x00;   // Stop Timer3; Clear TF3;
006C 759100     671            mov     _TMR3CN0,#0x00
006F            672   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:127: CKCON0|=0b_0100_0000; // Timer 3 uses the system clock
006F 438E40     673            orl     _CKCON0,#0x40
0072            674   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:128: TMR3RL=(0x10000L-(SYSCLK/(2*TIMER_3_FREQ))); // Initialize reload value
0072 7592B0     675            mov     _TMR3RL,#0xB0
0075 7593B9     676            mov     (_TMR3RL >> 8),#0xB9
0078            677   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:129: TMR3=0xffff;   // Set to reload immediately
0078 7594FF     678            mov     _TMR3,#0xFF
007B 7595FF     679            mov     (_TMR3 >> 8),#0xFF
007E            680   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:130: EIE1|=0b_1000_0000;     // Enable Timer3 interrupts
007E 43E680     681            orl     _EIE1,#0x80
0081            682   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:131: TMR3CN0|=0b_0000_0100;  // Start Timer3 (TMR3CN0 is not bit addressable)
0081 439104     683            orl     _TMR3CN0,#0x04
0084            684   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:133: EA=1; // Enable interrupts
0084 D2AF       685            setb    _EA
0086            686   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:135: return 0;
0086 758200     687            mov     dpl,#0x00
0089 22         688            ret
008A            689   ;------------------------------------------------------------
008A            690   ;Allocation info for local variables in function 'Timer2_ISR'
008A            691   ;------------------------------------------------------------
008A            692   ;------------------------------------------------------------
008A            693   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:139: void Timer2_ISR (void) interrupt INTERRUPT_TIMER2
008A            694   ;        -----------------------------------------
008A            695   ;         function Timer2_ISR
008A            696   ;        -----------------------------------------
008A            697   _Timer2_ISR:
008A C0E0       698            push    acc
008C C0D0       699            push    psw
008E 75D000     700            mov     psw,#0x00
0091            701   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:141: SFRPAGE=0x0;
0091 75A700     702            mov     _SFRPAGE,#0x00
0094            703   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:142: TF2H = 0; // Clear Timer2 interrupt flag
0094 C2CF       704            clr     _TF2H
0096            705   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:147: if(interruptCount == 3)
0096 7403       706            mov     a,#0x03
0098 B558B8     707            cjne    a,_interruptCount,L003038?
009B 8001       708            sjmp    L003039?
009D            709   L003038?:
009D 020100     710            ljmp    L003025?
00A0            711   L003039?:
00A0            712   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:149: TIMER_OUT_2 = !TIMER_OUT_2;
00A0 B2A5       713            cpl     _P2_5
00A2            714   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:150: interruptCount = 0;
00A2 755800     715            mov     _interruptCount,#0x00
00A5            716   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:151: if(direction == 1)
00A5 7401       717            mov     a,#0x01
00A7 B5D878     718            cjne    a,_direction,L003020?
00AA            719   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:153: if(stepCount == 0)
00AA E598       720            mov     a,_stepCount
00AC 7001       721            jnz     L003008?
00AE            722   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:155: PORT1 = 1;
00AE D2A1       723            setb    _P2_1
00B0            724   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:156: PORT2 = 1;
00B0 D2A2       725            setb    _P2_2
00B2            726   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:157: PORT3 = 0;
00B2 C2A3       727            clr     _P2_3
00B4            728   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:158: PORT4 = 0;
00B4 C2A4       729            clr     _P2_4
00B6 8001       730            sjmp    L003021?
00B8            731   L003008?:
00B8            732   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:160: else if(stepCount == 1)
00B8 7401       733            mov     a,#0x01
00BA B59838     734            cjne    a,_stepCount,L003005?
00BD            735   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:162: PORT1 = 0;
00BD C2A1       736            clr     _P2_1
00BF            737   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:163: PORT2 = 1;
00BF D2A2       738            setb    _P2_2
00C1            739   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:164: PORT3 = 1;
00C1 D2A3       740            setb    _P2_3
00C3            741   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:165: PORT4 = 0;
00C3 C2A4       742            clr     _P2_4
00C5 8001       743            sjmp    L003021?
00C7            744   L003005?:
00C7            745   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:167: else if(stepCount == 2)
00C7 7402       746            mov     a,#0x02
00C9 B59878     747            cjne    a,_stepCount,L003002?
00CC            748   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:169: PORT1 = 0;
00CC C2A1       749            clr     _P2_1
00CE            750   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:170: PORT2 = 0;
00CE C2A2       751            clr     _P2_2
00D0            752   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:171: PORT3 = 1;
00D0 D2A3       753            setb    _P2_3
00D2            754   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:172: PORT4 = 1;
00D2 D2A4       755            setb    _P2_4
00D4 8001       756            sjmp    L003021?
00D6            757   L003002?:
00D6            758   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:176: PORT1 = 1;
00D6 D2A1       759            setb    _P2_1
00D8            760   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:177: PORT2 = 0;
00D8 C2A2       761            clr     _P2_2
00DA            762   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:178: PORT3 = 0;
00DA C2A3       763            clr     _P2_3
00DC            764   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:179: PORT4 = 1;
00DC D2A4       765            setb    _P2_4
00DE 8001       766            sjmp    L003021?
00E0            767   L003020?:
00E0            768   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:184: if(stepCount == 0)
00E0 E598       769            mov     a,_stepCount
00E2 7001       770            jnz     L003017?
00E4            771   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:186: PORT1 = 1;
00E4 D2A1       772            setb    _P2_1
00E6            773   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:187: PORT2 = 0;
00E6 C2A2       774            clr     _P2_2
00E8            775   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:188: PORT3 = 0;
00E8 C2A3       776            clr     _P2_3
00EA            777   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:189: PORT4 = 1;
00EA D2A4       778            setb    _P2_4
00EC 8001       779            sjmp    L003021?
00EE            780   L003017?:
00EE            781   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:191: else if(stepCount == 1)
00EE 7401       782            mov     a,#0x01
00F0 B598F8     783            cjne    a,_stepCount,L003014?
00F3            784   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:193: PORT1 = 0;
00F3 C2A1       785            clr     _P2_1
00F5            786   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:194: PORT2 = 0;
00F5 C2A2       787            clr     _P2_2
00F7            788   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:195: PORT3 = 1;
00F7 D2A3       789            setb    _P2_3
00F9            790   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:196: PORT4 = 1;
00F9 D2A4       791            setb    _P2_4
00FB 8001       792            sjmp    L003021?
00FD            793   L003014?:
00FD            794   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:198: else if(stepCount == 2)
00FD 7402       795            mov     a,#0x02
00FF B59838     796            cjne    a,_stepCount,L003011?
0102            797   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:200: PORT1 = 0;
0102 C2A1       798            clr     _P2_1
0104            799   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:201: PORT2 = 1;
0104 D2A2       800            setb    _P2_2
0106            801   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:202: PORT3 = 1;
0106 D2A3       802            setb    _P2_3
0108            803   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:203: PORT4 = 0;
0108 C2A4       804            clr     _P2_4
010A 8001       805            sjmp    L003021?
010C            806   L003011?:
010C            807   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:207: PORT1 = 1;
010C D2A1       808            setb    _P2_1
010E            809   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:208: PORT2 = 1;
010E D2A2       810            setb    _P2_2
0110            811   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:209: PORT3 = 0;
0110 C2A3       812            clr     _P2_3
0112            813   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:210: PORT4 = 1;
0112 D2A4       814            setb    _P2_4
0114            815   L003021?:
0114            816   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:216: stepCount++;
0114 0598       817            inc     _stepCount
0116            818   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:217: totalSteps++;
0116 0518       819            inc     _totalSteps
0118 E4         820            clr     a
0119 B51878     821            cjne    a,_totalSteps,L003052?
011C 0519       822            inc     (_totalSteps + 1)
011E            823   L003052?:
011E            824   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:218: if(stepCount > 3)
011E E598       825            mov     a,_stepCount
0120 24FC       826            add     a,#0xff - 0x03
0122 5001       827            jnc     L003027?
0124            828   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:219: stepCount = 0;
0124 759800     829            mov     _stepCount,#0x00
0127 8001       830            sjmp    L003027?
0129            831   L003025?:
0129            832   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:222: interruptCount++;
0129 0558       833            inc     _interruptCount
012B            834   L003027?:
012B D0D0       835            pop     psw
012D D0E0       836            pop     acc
012F 32         837            reti
0130            838   ;        eliminated unneeded push/pop dpl
0130            839   ;        eliminated unneeded push/pop dph
0130            840   ;        eliminated unneeded push/pop b
0130            841   ;------------------------------------------------------------
0130            842   ;Allocation info for local variables in function 'Timer3_ISR'
0130            843   ;------------------------------------------------------------
0130            844   ;------------------------------------------------------------
0130            845   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:226: void Timer3_ISR (void) interrupt INTERRUPT_TIMER3
0130            846   ;        -----------------------------------------
0130            847   ;         function Timer3_ISR
0130            848   ;        -----------------------------------------
0130            849   _Timer3_ISR:
0130            850   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:228: SFRPAGE=0x0;
0130 75A700     851            mov     _SFRPAGE,#0x00
0133            852   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:229: TMR3CN0&=0b_0011_1111; // Clear Timer3 interrupt flags
0133 53913F     853            anl     _TMR3CN0,#0x3F
0136            854   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:231: adcFlag = 1;
0136 751801     855            mov     _adcFlag,#0x01
0139 32         856            reti
013A            857   ;        eliminated unneeded push/pop psw
013A            858   ;        eliminated unneeded push/pop dpl
013A            859   ;        eliminated unneeded push/pop dph
013A            860   ;        eliminated unneeded push/pop b
013A            861   ;        eliminated unneeded push/pop acc
013A            862   ;------------------------------------------------------------
013A            863   ;Allocation info for local variables in function 'getsn'
013A            864   ;------------------------------------------------------------
013A            865   ;len                       Allocated with name '_getsn_PARM_2'
013A            866   ;buff                      Allocated with name '_getsn_buff_1_59'
013A            867   ;j                         Allocated with name '_getsn_sloc0_1_0'
013A            868   ;c                         Allocated to registers r3 
013A            869   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
013A            870   ;------------------------------------------------------------
013A            871   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:234: int getsn (char * buff, int len)
013A            872   ;        -----------------------------------------
013A            873   ;         function getsn
013A            874   ;        -----------------------------------------
013A            875   _getsn:
013A 858278     876            mov     _getsn_buff_1_59,dpl
013D 858379     877            mov     (_getsn_buff_1_59 + 1),dph
0140 85F07A     878            mov     (_getsn_buff_1_59 + 2),b
0143            879   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:239: for(j=0; j<(len-1); j++)
0143 E4         880            clr     a
0144 F5C8       881            mov     _getsn_sloc0_1_0,a
0146 F5C9       882            mov     (_getsn_sloc0_1_0 + 1),a
0148 E5D8       883            mov     a,_getsn_PARM_2
014A 24FF       884            add     a,#0xff
014C FF         885            mov     r7,a
014D E5D9       886            mov     a,(_getsn_PARM_2 + 1)
014F 34FF       887            addc    a,#0xff
0151 F8         888            mov     r0,a
0152 7900       889            mov     r1,#0x00
0154 7A00       890            mov     r2,#0x00
0156            891   L005005?:
0156 C3         892            clr     c
0157 E9         893            mov     a,r1
0158 9F         894            subb    a,r7
0159 EA         895            mov     a,r2
015A 6480       896            xrl     a,#0x80
015C 88F0       897            mov     b,r0
015E 63F080     898            xrl     b,#0x80
0161 95F0       899            subb    a,b
0163 5001       900            jnc     L005008?
0165            901   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:241: c=getchar();
0165 C002       902            push    ar2
0167 C007       903            push    ar7
0169 C000       904            push    ar0
016B C001       905            push    ar1
016D 120100     906            lcall   _getchar
0170 AB82       907            mov     r3,dpl
0172 D001       908            pop     ar1
0174 D000       909            pop     ar0
0176 D007       910            pop     ar7
0178 D002       911            pop     ar2
017A            912   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:242: if ( (c=='\n') || (c=='\r') )
017A BB0A40     913            cjne    r3,#0x0A,L005015?
017D 8001       914            sjmp    L005001?
017F            915   L005015?:
017F BB0DC0     916            cjne    r3,#0x0D,L005002?
0182            917   L005001?:
0182            918   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:244: buff[j]=0;
0182 E5C8       919            mov     a,_getsn_sloc0_1_0
0184 2578       920            add     a,_getsn_buff_1_59
0186 FC         921            mov     r4,a
0187 E5C9       922            mov     a,(_getsn_sloc0_1_0 + 1)
0189 3579       923            addc    a,(_getsn_buff_1_59 + 1)
018B FD         924            mov     r5,a
018C AE7A       925            mov     r6,(_getsn_buff_1_59 + 2)
018E 8C82       926            mov     dpl,r4
0190 8D83       927            mov     dph,r5
0192 8EF0       928            mov     b,r6
0194 E4         929            clr     a
0195 120100     930            lcall   __gptrput
0198            931   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:245: return j;
0198 85C882     932            mov     dpl,_getsn_sloc0_1_0
019B 85C983     933            mov     dph,(_getsn_sloc0_1_0 + 1)
019E 22         934            ret
019F            935   L005002?:
019F            936   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:249: buff[j]=c;
019F E9         937            mov     a,r1
01A0 2578       938            add     a,_getsn_buff_1_59
01A2 FC         939            mov     r4,a
01A3 EA         940            mov     a,r2
01A4 3579       941            addc    a,(_getsn_buff_1_59 + 1)
01A6 FD         942            mov     r5,a
01A7 AE7A       943            mov     r6,(_getsn_buff_1_59 + 2)
01A9 8C82       944            mov     dpl,r4
01AB 8D83       945            mov     dph,r5
01AD 8EF0       946            mov     b,r6
01AF EB         947            mov     a,r3
01B0 120100     948            lcall   __gptrput
01B3            949   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:239: for(j=0; j<(len-1); j++)
01B3 09         950            inc     r1
01B4 B90040     951            cjne    r1,#0x00,L005018?
01B7 0A         952            inc     r2
01B8            953   L005018?:
01B8 89C8       954            mov     _getsn_sloc0_1_0,r1
01BA 8AC9       955            mov     (_getsn_sloc0_1_0 + 1),r2
01BC 8001       956            sjmp    L005005?
01BE            957   L005008?:
01BE            958   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:252: buff[j]=0;
01BE E5C8       959            mov     a,_getsn_sloc0_1_0
01C0 2578       960            add     a,_getsn_buff_1_59
01C2 FA         961            mov     r2,a
01C3 E5C9       962            mov     a,(_getsn_sloc0_1_0 + 1)
01C5 3579       963            addc    a,(_getsn_buff_1_59 + 1)
01C7 FB         964            mov     r3,a
01C8 AC7A       965            mov     r4,(_getsn_buff_1_59 + 2)
01CA 8A82       966            mov     dpl,r2
01CC 8B83       967            mov     dph,r3
01CE 8CF0       968            mov     b,r4
01D0 E4         969            clr     a
01D1 120100     970            lcall   __gptrput
01D4            971   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:253: return len;
01D4 85D882     972            mov     dpl,_getsn_PARM_2
01D7 85D983     973            mov     dph,(_getsn_PARM_2 + 1)
01DA 22         974            ret
01DB            975   ;------------------------------------------------------------
01DB            976   ;Allocation info for local variables in function 'InitADC'
01DB            977   ;------------------------------------------------------------
01DB            978   ;------------------------------------------------------------
01DB            979   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:256: void InitADC (void)
01DB            980   ;        -----------------------------------------
01DB            981   ;         function InitADC
01DB            982   ;        -----------------------------------------
01DB            983   _InitADC:
01DB            984   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:258: SFRPAGE = 0x00;
01DB 75A700     985            mov     _SFRPAGE,#0x00
01DE            986   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:259: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
01DE 75B280     987            mov     _ADC0CN1,#0x80
01E1            988   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:260: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
01E1 75BCF8     989            mov     _ADC0CF0,#0xF8
01E4            990   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:261: ADC0CF1 = 0b_0_0_011110; // Same as default for now
01E4 75B91E     991            mov     _ADC0CF1,#0x1E
01E7            992   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:262: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
01E7 75E800     993            mov     _ADC0CN0,#0x00
01EA            994   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:263: ADC0CF2 = 0b_0_01_11111 ; // GND pin, Vref=VDD
01EA 75DF3F     995            mov     _ADC0CF2,#0x3F
01ED            996   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:264: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
01ED 75B300     997            mov     _ADC0CN2,#0x00
01F0            998   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:265: ADEN=1; // Enable ADC
01F0 D2EF       999            setb    _ADEN
01F2 22        1000            ret
01F3           1001   ;------------------------------------------------------------
01F3           1002   ;Allocation info for local variables in function 'ADC_at_Pin'
01F3           1003   ;------------------------------------------------------------
01F3           1004   ;pin                       Allocated to registers 
01F3           1005   ;------------------------------------------------------------
01F3           1006   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:268: unsigned int ADC_at_Pin(unsigned char pin)
01F3           1007   ;        -----------------------------------------
01F3           1008   ;         function ADC_at_Pin
01F3           1009   ;        -----------------------------------------
01F3           1010   _ADC_at_Pin:
01F3 8582BB    1011            mov     _ADC0MX,dpl
01F6           1012   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:271: ADBUSY=1;       // Dummy conversion first to select new pin
01F6 D2EC      1013            setb    _ADBUSY
01F8           1014   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:272: while (ADBUSY); // Wait for dummy conversion to finish
01F8           1015   L007001?:
01F8 20EC80    1016            jb      _ADBUSY,L007001?
01FB           1017   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:273: ADBUSY = 1;     // Convert voltage at the pin
01FB D2EC      1018            setb    _ADBUSY
01FD           1019   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:274: while (ADBUSY); // Wait for conversion to complete
01FD           1020   L007004?:
01FD 20ECC0    1021            jb      _ADBUSY,L007004?
0200           1022   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:275: return (ADC0);
0200 85BD82    1023            mov     dpl,_ADC0
0203 85BE83    1024            mov     dph,(_ADC0 >> 8)
0206 22        1025            ret
0207           1026   ;------------------------------------------------------------
0207           1027   ;Allocation info for local variables in function 'Volts_at_Pin'
0207           1028   ;------------------------------------------------------------
0207           1029   ;pin                       Allocated to registers r2 
0207           1030   ;------------------------------------------------------------
0207           1031   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:278: float Volts_at_Pin(unsigned char pin)
0207           1032   ;        -----------------------------------------
0207           1033   ;         function Volts_at_Pin
0207           1034   ;        -----------------------------------------
0207           1035   _Volts_at_Pin:
0207           1036   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:280: return ((ADC_at_Pin(pin)*VDD)/16383.0);
0207 120100    1037            lcall   _ADC_at_Pin
020A 120100    1038            lcall   ___uint2fs
020D AA82      1039            mov     r2,dpl
020F AB83      1040            mov     r3,dph
0211 ACF0      1041            mov     r4,b
0213 FD        1042            mov     r5,a
0214 C002      1043            push    ar2
0216 C003      1044            push    ar3
0218 C004      1045            push    ar4
021A C005      1046            push    ar5
021C 909FBE    1047            mov     dptr,#0x9FBE
021F 75F052    1048            mov     b,#0x52
0222 7440      1049            mov     a,#0x40
0224 120100    1050            lcall   ___fsmul
0227 AA82      1051            mov     r2,dpl
0229 AB83      1052            mov     r3,dph
022B ACF0      1053            mov     r4,b
022D FD        1054            mov     r5,a
022E E581      1055            mov     a,sp
0230 24FC      1056            add     a,#0xfc
0232 F581      1057            mov     sp,a
0234 E4        1058            clr     a
0235 C0E0      1059            push    acc
0237 74FC      1060            mov     a,#0xFC
0239 C0E0      1061            push    acc
023B 747F      1062            mov     a,#0x7F
023D C0E0      1063            push    acc
023F 7446      1064            mov     a,#0x46
0241 C0E0      1065            push    acc
0243 8A82      1066            mov     dpl,r2
0245 8B83      1067            mov     dph,r3
0247 8CF0      1068            mov     b,r4
0249 ED        1069            mov     a,r5
024A 120100    1070            lcall   ___fsdiv
024D AA82      1071            mov     r2,dpl
024F AB83      1072            mov     r3,dph
0251 ACF0      1073            mov     r4,b
0253 FD        1074            mov     r5,a
0254 E581      1075            mov     a,sp
0256 24FC      1076            add     a,#0xfc
0258 F581      1077            mov     sp,a
025A 8A82      1078            mov     dpl,r2
025C 8B83      1079            mov     dph,r3
025E 8CF0      1080            mov     b,r4
0260 ED        1081            mov     a,r5
0261 22        1082            ret
0262           1083   ;------------------------------------------------------------
0262           1084   ;Allocation info for local variables in function 'ConfigPCA0'
0262           1085   ;------------------------------------------------------------
0262           1086   ;------------------------------------------------------------
0262           1087   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:283: void ConfigPCA0()
0262           1088   ;        -----------------------------------------
0262           1089   ;         function ConfigPCA0
0262           1090   ;        -----------------------------------------
0262           1091   _ConfigPCA0:
0262           1092   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:285: SFRPAGE = 0x00; //Navigate to SFR page for register write
0262 75A700    1093            mov     _SFRPAGE,#0x00
0265           1094   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:287: PCA0POL = 0b_0000_0000; //Set the output polarity for all channels to default (no inversion)
0265 759600    1095            mov     _PCA0POL,#0x00
0268           1096   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:289: PCA0MD = 0b_0000_0000; //Set PCA mode to operate even in idle mode with SYSCLK/12
0268 75D900    1097            mov     _PCA0MD,#0x00
026B           1098   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:290: PCA0PWM = 0b_0000_0000;        //Enable 8-bit PWM with no overflow flag set and no interrupts enabled
026B 75F700    1099            mov     _PCA0PWM,#0x00
026E           1100   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:291: PCA0CLR = 0b_0000_0000; //Disable comparator clear for all modules
026E 759C00    1101            mov     _PCA0CLR,#0x00
0271           1102   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:292: PCA0CENT = 0b_00_000000; //Set all modules to edge aligned mode (bits 6 and 7 are reserved and must be 00)
0271 759E00    1103            mov     _PCA0CENT,#0x00
0274           1104   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:294: PCA0CN0 = 0b_0100_0000; //Start the PCA counter/timer (CR bit)         
0274 75D840    1105            mov     _PCA0CN0,#0x40
0277           1106   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:297: PCA0CPM0 = 0b_0100_0010;//Configure Channel 0 to function in 8-bit PWM mode
0277 75DA42    1107            mov     _PCA0CPM0,#0x42
027A           1108   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:298: PCA0CPH0 = 128; //Load the PCA0CP0 high byte 
027A 75FC80    1109            mov     _PCA0CPH0,#0x80
027D 22        1110            ret
027E           1111   ;------------------------------------------------------------
027E           1112   ;Allocation info for local variables in function 'ConfigurePins'
027E           1113   ;------------------------------------------------------------
027E           1114   ;------------------------------------------------------------
027E           1115   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:302: void ConfigurePins()
027E           1116   ;        -----------------------------------------
027E           1117   ;         function ConfigurePins
027E           1118   ;        -----------------------------------------
027E           1119   _ConfigurePins:
027E           1120   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:304: P0SKIP |= 0b_1100_1111; //Skip all P0 bits except bits 4 and 5 (UART0)
027E 43D4CF    1121            orl     _P0SKIP,#0xCF
0281           1122   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:306: SFRPAGE = 0x20;
0281 75A720    1123            mov     _SFRPAGE,#0x20
0284           1124   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:308: P0MDIN &= 0b_1111_1011; //Set P0 bit 2 to analog input for ADC
0284 53F1FB    1125            anl     _P0MDIN,#0xFB
0287           1126   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:309: P1MDIN &= 0b_1111_0111; //Set P1 bit 3 to analog input for ADC
0287 53F2F7    1127            anl     _P1MDIN,#0xF7
028A           1128   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:311: SFRPAGE = 0x00;
028A 75A700    1129            mov     _SFRPAGE,#0x00
028D           1130   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:313: P1SKIP |= 0b_0000_1111; //Skip P1 bits 0 to 3 (SPI bits will be P1.4 to P1.7)
028D 43D50F    1131            orl     _P1SKIP,#0x0F
0290           1132   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:315: P2MDOUT |= 0b_0111_1111; //Set P2 bits 0, 1, 2, 3, 4, 5 to push-pull output mode
0290 43A67F    1133            orl     _P2MDOUT,#0x7F
0293           1134   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:316: P1MDOUT |= 0b_1000_0000; //Set P1 bit 7 to push-pull output mode       
0293 43A580    1135            orl     _P1MDOUT,#0x80
0296 22        1136            ret
0297           1137   ;------------------------------------------------------------
0297           1138   ;Allocation info for local variables in function 'main'
0297           1139   ;------------------------------------------------------------
0297           1140   ;vReadings                 Allocated with name '_main_vReadings_1_73'
0297           1141   ;voltages                  Allocated with name '_main_voltages_1_73'
0297           1142   ;measureCount              Allocated with name '_main_measureCount_1_73'
0297           1143   ;totalMeasurements         Allocated to registers 
0297           1144   ;errorConstant             Allocated to registers 
0297           1145   ;readingADCCounter         Allocated to registers r4 r5 
0297           1146   ;readingADCTotalInterrupts Allocated to registers 
0297           1147   ;sloc0                     Allocated with name '_main_sloc0_1_0'
0297           1148   ;------------------------------------------------------------
0297           1149   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:319: void main (void) 
0297           1150   ;        -----------------------------------------
0297           1151   ;         function main
0297           1152   ;        -----------------------------------------
0297           1153   _main:
0297           1154   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:327: int measureCount = 0;
0297           1155   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:332: int readingADCCounter = 0;
0297 E4        1156            clr     a
0298 F5B8      1157            mov     _main_measureCount_1_73,a
029A F5B9      1158            mov     (_main_measureCount_1_73 + 1),a
029C FC        1159            mov     r4,a
029D FD        1160            mov     r5,a
029E           1161   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:336: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
029E C004      1162            push    ar4
02A0 C005      1163            push    ar5
02A2 7400      1164            mov     a,#__str_0
02A4 C0E0      1165            push    acc
02A6 74C3      1166            mov     a,#(__str_0 >> 8)
02A8 C0E0      1167            push    acc
02AA 7480      1168            mov     a,#0x80
02AC C0E0      1169            push    acc
02AE 120100    1170            lcall   _printf
02B1 1581      1171            dec     sp
02B3 1581      1172            dec     sp
02B5 1581      1173            dec     sp
02B7           1174   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:338: ConfigurePins();
02B7 120100    1175            lcall   _ConfigurePins
02BA           1176   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:340: ConfigPCA0();
02BA 120100    1177            lcall   _ConfigPCA0
02BD           1178   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:342: InitADC();
02BD 120100    1179            lcall   _InitADC
02C0 D005      1180            pop     ar5
02C2 D004      1181            pop     ar4
02C4           1182   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:344: while(1) //Main loop of the program begins here
02C4           1183   L011010?:
02C4           1184   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:348: if(adcFlag == 1)
02C4 7401      1185            mov     a,#0x01
02C6 B51880    1186            cjne    a,_adcFlag,L011010?
02C9           1187   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:351: adcFlag = 0;
02C9 751800    1188            mov     _adcFlag,#0x00
02CC           1189   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:354: if(readingADCCounter < readingADCTotalInterrupts)
02CC C3        1190            clr     c
02CD EC        1191            mov     a,r4
02CE 9432      1192            subb    a,#0x32
02D0 ED        1193            mov     a,r5
02D1 6480      1194            xrl     a,#0x80
02D3 9480      1195            subb    a,#0x80
02D5 5001      1196            jnc     L011005?
02D7           1197   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:355: readingADCCounter++;
02D7 0C        1198            inc     r4
02D8 BC0080    1199            cjne    r4,#0x00,L011010?
02DB 0D        1200            inc     r5
02DC 8001      1201            sjmp    L011010?
02DE           1202   L011005?:
02DE           1203   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:359: if(measureCount < totalMeasurements)
02DE C3        1204            clr     c
02DF E5B8      1205            mov     a,_main_measureCount_1_73
02E1 9414      1206            subb    a,#0x14
02E3 E5B9      1207            mov     a,(_main_measureCount_1_73 + 1)
02E5 6480      1208            xrl     a,#0x80
02E7 9480      1209            subb    a,#0x80
02E9 4001      1210            jc      L011022?
02EB 020100    1211            ljmp    L011002?
02EE           1212   L011022?:
02EE           1213   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:362: voltages[0] += Volts_at_Pin(QFP32_MUX_P1_3);
02EE 8568F8    1214            mov     _main_sloc0_1_0,_main_voltages_1_73
02F1 8569F9    1215            mov     (_main_sloc0_1_0 + 1),(_main_voltages_1_73 + 1)
02F4 856AFA    1216            mov     (_main_sloc0_1_0 + 2),(_main_voltages_1_73 + 2)
02F7 856BFB    1217            mov     (_main_sloc0_1_0 + 3),(_main_voltages_1_73 + 3)
02FA 758209    1218            mov     dpl,#0x09
02FD 120100    1219            lcall   _Volts_at_Pin
0300 AA82      1220            mov     r2,dpl
0302 AB83      1221            mov     r3,dph
0304 AEF0      1222            mov     r6,b
0306 FF        1223            mov     r7,a
0307 C002      1224            push    ar2
0309 C003      1225            push    ar3
030B C006      1226            push    ar6
030D C007      1227            push    ar7
030F 85F882    1228            mov     dpl,_main_sloc0_1_0
0312 85F983    1229            mov     dph,(_main_sloc0_1_0 + 1)
0315 85FAF0    1230            mov     b,(_main_sloc0_1_0 + 2)
0318 E5FB      1231            mov     a,(_main_sloc0_1_0 + 3)
031A 120100    1232            lcall   ___fsadd
031D AA82      1233            mov     r2,dpl
031F AB83      1234            mov     r3,dph
0321 AEF0      1235            mov     r6,b
0323 FF        1236            mov     r7,a
0324 E581      1237            mov     a,sp
0326 24FC      1238            add     a,#0xfc
0328 F581      1239            mov     sp,a
032A 8A68      1240            mov     _main_voltages_1_73,r2
032C 8B69      1241            mov     (_main_voltages_1_73 + 1),r3
032E 8E6A      1242            mov     (_main_voltages_1_73 + 2),r6
0330 8F6B      1243            mov     (_main_voltages_1_73 + 3),r7
0332           1244   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:363: voltages[1] += Volts_at_Pin(QFP32_MUX_P0_2);
0332 856CF8    1245            mov     _main_sloc0_1_0,(_main_voltages_1_73 + 0x0004)
0335 856DF9    1246            mov     (_main_sloc0_1_0 + 1),((_main_voltages_1_73 + 0x0004) + 1)
0338 856EFA    1247            mov     (_main_sloc0_1_0 + 2),((_main_voltages_1_73 + 0x0004) + 2)
033B 856FFB    1248            mov     (_main_sloc0_1_0 + 3),((_main_voltages_1_73 + 0x0004) + 3)
033E 758201    1249            mov     dpl,#0x01
0341 120100    1250            lcall   _Volts_at_Pin
0344 AA82      1251            mov     r2,dpl
0346 AB83      1252            mov     r3,dph
0348 AEF0      1253            mov     r6,b
034A FF        1254            mov     r7,a
034B C002      1255            push    ar2
034D C003      1256            push    ar3
034F C006      1257            push    ar6
0351 C007      1258            push    ar7
0353 85F882    1259            mov     dpl,_main_sloc0_1_0
0356 85F983    1260            mov     dph,(_main_sloc0_1_0 + 1)
0359 85FAF0    1261            mov     b,(_main_sloc0_1_0 + 2)
035C E5FB      1262            mov     a,(_main_sloc0_1_0 + 3)
035E 120100    1263            lcall   ___fsadd
0361 AA82      1264            mov     r2,dpl
0363 AB83      1265            mov     r3,dph
0365 AEF0      1266            mov     r6,b
0367 FF        1267            mov     r7,a
0368 E581      1268            mov     a,sp
036A 24FC      1269            add     a,#0xfc
036C F581      1270            mov     sp,a
036E 8A6C      1271            mov     (_main_voltages_1_73 + 0x0004),r2
0370 8B6D      1272            mov     ((_main_voltages_1_73 + 0x0004) + 1),r3
0372 8E6E      1273            mov     ((_main_voltages_1_73 + 0x0004) + 2),r6
0374 8F6F      1274            mov     ((_main_voltages_1_73 + 0x0004) + 3),r7
0376           1275   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:366: measureCount++;
0376 05B8      1276            inc     _main_measureCount_1_73
0378 E4        1277            clr     a
0379 B5B8C0    1278            cjne    a,_main_measureCount_1_73,L011023?
037C 05B9      1279            inc     (_main_measureCount_1_73 + 1)
037E           1280   L011023?:
037E 020100    1281            ljmp    L011003?
0381           1282   L011002?:
0381           1283   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:371: vReadings[0] = (voltages[0]/totalMeasurements) - errorConstant;
0381 E4        1284            clr     a
0382 C0E0      1285            push    acc
0384 C0E0      1286            push    acc
0386 74A0      1287            mov     a,#0xA0
0388 C0E0      1288            push    acc
038A 7441      1289            mov     a,#0x41
038C C0E0      1290            push    acc
038E 856882    1291            mov     dpl,_main_voltages_1_73
0391 856983    1292            mov     dph,(_main_voltages_1_73 + 1)
0394 856AF0    1293            mov     b,(_main_voltages_1_73 + 2)
0397 E56B      1294            mov     a,(_main_voltages_1_73 + 3)
0399 120100    1295            lcall   ___fsdiv
039C AA82      1296            mov     r2,dpl
039E AB83      1297            mov     r3,dph
03A0 AEF0      1298            mov     r6,b
03A2 FF        1299            mov     r7,a
03A3 E581      1300            mov     a,sp
03A5 24FC      1301            add     a,#0xfc
03A7 F581      1302            mov     sp,a
03A9 74B8      1303            mov     a,#0xB8
03AB C0E0      1304            push    acc
03AD 741E      1305            mov     a,#0x1E
03AF C0E0      1306            push    acc
03B1 7405      1307            mov     a,#0x05
03B3 C0E0      1308            push    acc
03B5 743E      1309            mov     a,#0x3E
03B7 C0E0      1310            push    acc
03B9 8A82      1311            mov     dpl,r2
03BB 8B83      1312            mov     dph,r3
03BD 8EF0      1313            mov     b,r6
03BF EF        1314            mov     a,r7
03C0 120100    1315            lcall   ___fssub
03C3 8582F8    1316            mov     _main_sloc0_1_0,dpl
03C6 8583F9    1317            mov     (_main_sloc0_1_0 + 1),dph
03C9 85F0FA    1318            mov     (_main_sloc0_1_0 + 2),b
03CC F5FB      1319            mov     (_main_sloc0_1_0 + 3),a
03CE E581      1320            mov     a,sp
03D0 24FC      1321            add     a,#0xfc
03D2 F581      1322            mov     sp,a
03D4 85F818    1323            mov     _main_vReadings_1_73,_main_sloc0_1_0
03D7 85F919    1324            mov     (_main_vReadings_1_73 + 1),(_main_sloc0_1_0 + 1)
03DA 85FA1A    1325            mov     (_main_vReadings_1_73 + 2),(_main_sloc0_1_0 + 2)
03DD 85FB1B    1326            mov     (_main_vReadings_1_73 + 3),(_main_sloc0_1_0 + 3)
03E0           1327   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:372: vReadings[1] = (voltages[1]/totalMeasurements) - errorConstant;
03E0 E4        1328            clr     a
03E1 C0E0      1329            push    acc
03E3 C0E0      1330            push    acc
03E5 74A0      1331            mov     a,#0xA0
03E7 C0E0      1332            push    acc
03E9 7441      1333            mov     a,#0x41
03EB C0E0      1334            push    acc
03ED 856C82    1335            mov     dpl,(_main_voltages_1_73 + 0x0004)
03F0 856D83    1336            mov     dph,((_main_voltages_1_73 + 0x0004) + 1)
03F3 856EF0    1337            mov     b,((_main_voltages_1_73 + 0x0004) + 2)
03F6 E56F      1338            mov     a,((_main_voltages_1_73 + 0x0004) + 3)
03F8 120100    1339            lcall   ___fsdiv
03FB AA82      1340            mov     r2,dpl
03FD AB83      1341            mov     r3,dph
03FF AEF0      1342            mov     r6,b
0401 FF        1343            mov     r7,a
0402 E581      1344            mov     a,sp
0404 24FC      1345            add     a,#0xfc
0406 F581      1346            mov     sp,a
0408 74B8      1347            mov     a,#0xB8
040A C0E0      1348            push    acc
040C 741E      1349            mov     a,#0x1E
040E C0E0      1350            push    acc
0410 7405      1351            mov     a,#0x05
0412 C0E0      1352            push    acc
0414 743E      1353            mov     a,#0x3E
0416 C0E0      1354            push    acc
0418 8A82      1355            mov     dpl,r2
041A 8B83      1356            mov     dph,r3
041C 8EF0      1357            mov     b,r6
041E EF        1358            mov     a,r7
041F 120100    1359            lcall   ___fssub
0422 AA82      1360            mov     r2,dpl
0424 AB83      1361            mov     r3,dph
0426 AEF0      1362            mov     r6,b
0428 FF        1363            mov     r7,a
0429 E581      1364            mov     a,sp
042B 24FC      1365            add     a,#0xfc
042D F581      1366            mov     sp,a
042F 8A1C      1367            mov     (_main_vReadings_1_73 + 0x0004),r2
0431 8B1D      1368            mov     ((_main_vReadings_1_73 + 0x0004) + 1),r3
0433 8E1E      1369            mov     ((_main_vReadings_1_73 + 0x0004) + 2),r6
0435 8F1F      1370            mov     ((_main_vReadings_1_73 + 0x0004) + 3),r7
0437           1371   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:375: printf("V(P1.3)=%3.2fV, V(P0.2)=%3.2fV\r", vReadings[0], vReadings[1]);
0437 C002      1372            push    ar2
0439 C003      1373            push    ar3
043B C006      1374            push    ar6
043D C007      1375            push    ar7
043F C0F8      1376            push    _main_sloc0_1_0
0441 C0F9      1377            push    (_main_sloc0_1_0 + 1)
0443 C0FA      1378            push    (_main_sloc0_1_0 + 2)
0445 C0FB      1379            push    (_main_sloc0_1_0 + 3)
0447 7480      1380            mov     a,#__str_1
0449 C0E0      1381            push    acc
044B 74C5      1382            mov     a,#(__str_1 >> 8)
044D C0E0      1383            push    acc
044F 7480      1384            mov     a,#0x80
0451 C0E0      1385            push    acc
0453 120100    1386            lcall   _printf
0456 E581      1387            mov     a,sp
0458 24F5      1388            add     a,#0xf5
045A F581      1389            mov     sp,a
045C           1390   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:378: measureCount = 0;
045C           1391   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:379: voltages[0] = 0;
045C E4        1392            clr a
045D F5B8      1393            mov _main_measureCount_1_73,a
045F F5B9      1394            mov (_main_measureCount_1_73 + 1),a
0461 F568      1395            mov _main_voltages_1_73,a
0463 F569      1396            mov (_main_voltages_1_73 + 1),a
0465 F56A      1397            mov (_main_voltages_1_73 + 2),a
0467 F56B      1398            mov (_main_voltages_1_73 + 3),a
0469           1399   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:380: voltages[1] = 0;
0469 756C00    1400            mov     (_main_voltages_1_73 + 0x0004),#0x00
046C 756D00    1401            mov     ((_main_voltages_1_73 + 0x0004) + 1),#0x00
046F 756E00    1402            mov     ((_main_voltages_1_73 + 0x0004) + 2),#0x00
0472 756F00    1403            mov     ((_main_voltages_1_73 + 0x0004) + 3),#0x00
0475           1404   L011003?:
0475           1405   ;        C:\Users\Fabian Lozano\Desktop\UBC\UBC3rdYear\Term 2\ELEC 391\Controller\Code\PCA.c:384: readingADCCounter = 0;
0475 7C00      1406            mov     r4,#0x00
0477 7D00      1407            mov     r5,#0x00
0479 020100    1408            ljmp    L011010?
047C           1409            rseg R_CSEG
047C           1410   
0000           1411            rseg R_XINIT
0000           1412   
0000           1413            rseg R_CONST
0000           1414   __str_0:
0000 1B        1415            db 0x1B
0001 5B324A    1416            db '[2J'
0004 00        1417            db 0x00
0005           1418   __str_1:
0005 56285031  1419            db 'V(P1.3)=%3.2fV, V(P0.2)=%3.2fV'
     2E33293D
     25332E32
     66562C20
     56285030
     2E32293D
     25332E32
     6656
0023 0D        1420            db 0x0D
0024 00        1421            db 0x00
0025           1422   
0076           1423            CSEG
0076           1424   
0076           1425   end
